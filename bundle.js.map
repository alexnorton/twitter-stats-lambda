{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap a19acee889b477d6bd63","webpack:///./~/d3/build/d3.js","webpack:///./src/index.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./~/metrics-graphics/dist/metricsgraphics.js","webpack:///(webpack)/buildin/global.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","factory","this","ascendingComparator","f","x","ascending","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","length","translateX","scale0","scale1","isFinite","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","transform","top","bottom","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","k","left","right","merge","insert","transition","epsilon","parentNode","remove","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","indexOf","type","set","callback","noop","concat","push","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","a","b","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","id","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","FormatSpecifier","specifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","step","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","ab","A","place","ax","ay","da","db","dc","intersects","distance1","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","asin$1","halfPi$3","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","x11","y11","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","epsilon2$1","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","length$1","object$1","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","_circle","index$1","contextStream","projectionStream","sum$1","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","pi$4","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","MG","renderChart","data_graphic","title","followers","x_accessor","y_accessor","min_y","inflator","yax_format","markers","tweets","label","fetch","then","res","normalizeName","String","normalizeValue","iteratorFor","items","iterator","done","support","iterable","Symbol","Headers","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","fromCharCode","bufferClone","byteLength","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","normalizeMethod","upcased","Request","options","credentials","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","ok","statusText","viewClasses","obj","DataView","isView","oldValue","thisArg","clone","redirectStatuses","redirect","RangeError","getAllResponseHeaders","responseURL","withCredentials","polyfill","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","mg_jquery_exists","jQuery","$","mg_get_rollover_time_format","fmt","processed","x_time_frame","time_format","utc_time","mg_data_in_plot_bounds","min_x","max_x","max_y","is_array","thing","is_function","is_empty_array","is_object","is_array_of_arrays","all_elements","is_array_of_objects","is_array_of_objects_or_empty","pluck","arr","accessor","count_array_elements","mg_get_bottom","mg_get_plot_bottom","mg_get_top","mg_get_plot_top","mg_get_left","mg_get_plot_left","mg_get_right","mg_get_plot_right","mg_exit_and_remove","elem","mg_selectAll_and_remove","cl","mg_add_g","mg_make_rug","rug_class","mg_get_svg_child_of","all_data","mg_flatten_array","rug","mg_add_color_accessor_to_rug","rug_mono_class","color_accessor","scalefns","colorf","mg_rotate_labels","labels","rotation_degree","mg_elements_are_overlapping","mg_is_horizontally_overlapping","mg_prevent_horizontal_overlap","newY","mg_prevent_vertical_overlap","overlap_amount","label_i","label_j","mg_is_vertically_overlapping","element_bbox","sibling_bbox","mg_infer_type","ns","testPoint","selector_or_node","flat_data","mg_next_id","_next_elem_id","mg_target_ref","mg_normalize","HTMLElement","target_ref","console","warn","get_pixel_dimension","dimension","Number","get_width","get_height","merge_with_defaults","prop","mg_is_date","mg_is_object","mg_is_array","arr_diff","seen","diff","warn_deprecation","message","untilVersion","trace","truncate_text","textObj","textString","bbox","getBBox","wrap_text","tspanAttrs","word","words","lineNumber","lineHeight","tspan","getComputedTextLength","register","chartType","descriptor","defaults","charts","chart_title","chartTitle","center_title_full_width","title_y_position","show_tooltips","description","$chartTitle","popover","animation","placement","content","trigger","template","mg_add_scale_function","scalefcn_name","inflation","scales","mg_position","str","MGScale","scaleArgs","use_inflator","zero_bottom","scaleType","_namespace","namespace_accessor_name","scale_name","scalefn_name","scaleName","inflateDomain","tf","zeroBottom","numericalDomainFromData","other_flat_data_arrays","illustrative_data","is_time_series","mg_min_max_numerical","time_scale","categoricalDomain","categoricalDomainFromData","categoricalVariables","numericalRange","categoricalRangeBands","halfway","paddingPercentage","outerPaddingPercentage","categoricalRange","categoricalColorRange","yn","additional_data_arrays","extents","min_val","max_val","mg_force_xax_count_to_be_two","call_hook","mg_get_categorical_domain","mg_get_color_domain","color_domain","color_type","mg_get_color_range","color_range","processScaleTicks","val","scale_ticks","number_of_ticks","data_is_int","rugPlacement","axisArgs","rug_buffer_size","rimPlacement","tick_length","axes_not_compact","labelPlacement","tickLength","textAnchor","mg_compute_yax_format","mg_default_xax_format","selectXaxFormat","chart_type","xax_format","mg_default_bar_xax_format","secondaryLabels","time_series","show_years","show_secondary_x_label","mg_get_yformat_and_secondary_time_function","addSecondaryLabelElements","timeframe","yformat","secondary","time_frame","secondary_function","first_tick","xax_count","yg","show_year_markers","yearMarkerLine","yearMarkerText","textFcn","xAxisTextElement","xax_tick_length","addNumericalLabels","coords","european_clock","_d","xax_units","addTickLines","ticksClass","extendedTicksClass","extendedTicks","initializeAxisRim","rim","initializeRug","rug_positions","categoricalLabelPlacement","groupScale","cat","categoricalLabels","nsClass","groupAccessor","group_g","rotateLabels","categoricalGuides","grs","last","x12","x22","y12","y22","axisFactory","pos","zeroLine","mgDrawAxis","y_rug","yf","decimals","pf","yax_units_append","yax_units","d_","mg_bar_add_zero_line","categorical_groups","YGROUP","mg_add_y_label","y_label","mg_add_y_axis_rim","y_ticks","x_extended_ticks","y_extended_ticks","y1scale","y2scale","mg_add_y_axis_tick_lines","yax_tick_length","mg_add_y_axis_tick_labels","y_axis","mg_process_scale_ticks","mg_add_categorical_labels","ygroup_accessor","mg_add_group_label","mg_add_graphic_labels","rotate_y_labels","mg_draw_group_lines","ygroup_height","mg_y_categorical_show_guides","alreadyPlotted","ygroupf","y_axis_categorical","show_bar_zero","y_categorical_show_guides","x_rug","xf","mg_add_processed_object","x_axis","mg_select_xax_format","mg_add_x_ticks","mg_add_x_tick_labels","x_label","mg_add_x_label","x_axis_categorical","additional_buffer","mg_add_categorical_scale","categorical_variables","mg_add_x_axis_categorical_labels","bar_outer_padding_percentage","truncate_x_labels","idx","rotate_x_labels","mg_get_size_range","size_range","x_label_nudge_x","mg_get_time_frame","mg_milisec_diff","mg_sec_diff","mg_day_diff","mg_four_days","mg_many_days","mg_many_months","mg_years","mg_get_time_format","utc","main_time_format","mg_process_time_format","main_x_time_format","original_data","flattened","test_point_x","original_x_accessor","is_float","mg_add_x_axis_rim","mg_add_x_axis_tick_lines","last_i","x_ticks","mg_add_primary_x_axis_label","mg_add_secondary_x_axis_label","mg_add_secondary_x_axis_elements","mg_add_year_marker_line","mg_add_year_marker_text","mg_merge_args_with_defaults","mg_is_time_series","first_elem","mg_init_compute_width","svg_width","full_width","x_axis_type","mg_categorical_calculate_height","mg_init_compute_height","svg_height","full_height","y_axis_type","mg_remove_svg_if_chart_type_has_changed","mg_add_svg_if_it_doesnt_exist","linked","mg_add_clip_path_for_plot_area","mg_adjust_width_and_height_if_changed","mg_set_viewbox_for_scaling","mg_remove_missing_classes_and_text","mg_remove_outdated_lines","custom_line_color_map","array_full_series","len","lines_to_remove","max_data_size","num_of_new","num_of_existing","mg_raise_container_error","categoricalInitialization","which","mg_categorical_count_number_of_groups","mg_categorical_count_number_of_lanes","mg_categorical_calculate_group_length","mg_categorical_calculate_bar_thickness","accessor_string","total_bars","group_bars","bars_per_group","groupHeight","gh","bar_thickness","groupContribution","marginContribution","mg_return_label","mg_remove_existing_markers","mg_in_range","mg_x_position","mg_x_position_fixed","_mg_x_pos","mg_y_position_fixed","_mg_y_pos","mg_place_annotations","checker","class_name","line_fcn","text_fcn","mg_place_markers","mg_place_marker_lines","mg_place_marker_text","mg_place_baselines","baselines","mg_place_baseline_lines","mg_place_baseline_text","gm","x_pos_fixed","lineclass","textclass","x_axis_position","click","gb","y_pos","mg_clear_mouseover_container","mg_setup_mouseover_container","text_anchor","mouseover_align","mouseover_x","active_datapoint","active_datapoint_y_nudge","y_position","yPos","mg_mouseover_tspan","bold","font_size","pts","mg_reset_text_container","textContainer","mg_mouseover_row","row_number","rargs","rrr","mg_mouseover_text","text_container","mouseover_row","MG_WindowResizeTracker","window_listener","targets","offsetWidth","offsetHeight","aspect","newWidth","remove_target","Observer","MutationObserver","WebKitMutationObserver","add_target","observer","mutations","targetNode","some","mutation","removedNodes","disconnect","observe","childList","mg_window_listeners","mg_if_aspect_ratio_resize_svg","mg_window_resize_tracker","point_mouseover","mouseover","mg_color_point_mouseover","mg_format_x_mouseover","mg_format_y_mouseover","yax_count","x_scale_type","y_scale_type","raw_data_transformation","single_object","array_of_objects","array_of_arrays","nested_array_of_arrays","nested_array_of_objects","mg_process_multiple_x_accessors","mg_process_multiple_y_accessors","x_sort","mg_process_multiple_accessors","which_accessor","process_line","missing_is_zero","missing_is_hidden","processed_data","start_date","upto","missing_is_hidden_accessor","existing_o","process_histogram","extracted_data","our_data","binned","hist","this_pt","next_pt","original_y_accessor","processed_x_accessor","processed_y_accessor","process_categorical_variables","bar_orientation","process_point","least_squares","ls_line","add_ls","fit","add_lowess","lowess","lowess_line","lowess_robust","inc","_l","_calculate_lowess_fit","x_proto","y_proto","_bisquare_weight","getTime","xhat","yhat","numerator","denominator","_pow_weight","_tricube_weight","_weighted_means","wxy","wsum","wxyi","xbar","ybar","_weighted_beta","num","denom","_weighted_least_squares","_wm","residuals","sorted_x","xi_neighbors","x_i","beta_i","x0_i","delta_i","x_max","x_min","smallest","largest","xyi","_output","format_rollover_number","fmt_string","mg_format_data_for_mouseover","mouseover_fcn","check_time","formatted_data","formatter","time_fmt","time_rollover_format","number_rollover_format","x_mouseover","y_mouseover","mg_format_x_aggregate_mouseover","path_tween","path0","path1","cloneNode","getTotalLength","dt","getPointAtLength","render_markup_for_server","virtual_window","virtual_d3","original_d3","original_window","original_document","render_markup_for_client","render_markup","init_virtual_window","jsdom","doc","QuerySelector","internal_error","parse_time","breaker","_hooks","add_hook","func","hooks","already_registered","hook","globals","deprecations","rollover_callback","replacement","rollout_callback","x_rollover_format","y_rollover_format","xax_start_at_min","interpolate_tension","legend","legend_target","animate_on_load","small_height_threshold","small_width_threshold","min_y_from_data","point_size","y_axis_position","xgroup_accessor","y_padding_percentage","y_outer_padding_percentage","ygroup_padding_percentage","ygroup_outer_padding_percentage","x_padding_percentage","x_outer_padding_percentage","xgroup_padding_percentage","xgroup_outer_padding_percentage","x_categorical_show_guide","transition_on_update","show_rollover_text","show_confidence_band","linked_format","aggregate_rollover","selected_chart","deprecation","warned","Plugin","option","$this","Tooltip","enabled","hoverState","$element","inState","VERSION","TRANSITION_DURATION","DEFAULTS","viewport","getOptions","$viewport","isFunction","hover","focus","triggers","proxy","toggle","eventIn","eventOut","leave","_options","fixTitle","getDefaults","show","hide","getDelegateOptions","currentTarget","Event","tip","hasClass","isInStateTrue","hasContent","inDom","isDefaultPrevented","$tip","tipId","getUID","setContent","addClass","autoToken","autoPlace","detach","css","display","appendTo","insertAfter","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","removeClass","calculatedOffset","getCalculatedOffset","applyPlacement","complete","prevHoverState","emulateTransitionEnd","marginTop","marginLeft","setOffset","using","props","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","removeAttr","$e","el","isBody","tagName","elRect","elOffset","scroll","scrollTop","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","getElementById","$arrow","enable","disable","toggleEnabled","destroy","off","removeData","old","fn","tooltip","Constructor","noConflict","Popover","getContent","scale_factory","categorical","numerical","axisName","axisClass","axis_factory","clearMenus","backdrop","$parent","getParent","Dropdown","dropdown","is","isActive","toggleClass","keydown","stopPropagation","desc","$items","eq","button_layout","feature_set","public_name","sorters","manual","manual_map","manual_callback","_strip_punctuation","punctuationless","finalString","manual_button","_callback","feat","mapDtoF","dropdownLiAClick","manual_feature","mg_line_color_text","line_id","mg_line_graph_generators","plot","mg_add_line_generator","mg_add_area_generator","mg_add_flat_line_generator","mg_add_confidence_band_generator","existing_band","confidence_area","flat_line","data_median","mg_add_confidence_band","which_line","confidenceBand","mg_add_area","areas","display_area","update_transition_duration","mg_default_color_for_path","this_path","mg_color_line","mg_add_line_element","mg_add_line","existing_line","lineTransition","mg_add_legend_element","this_legend","legend_text","anchor_point","anchor_orientation","legend_group","mg_plot_legend_if_legend_target","mg_add_legend_group","mg_remove_existing_line_rollover_elements","mg_add_rollover_circle","mg_set_unique_line_id_for_each_series","mg_nest_data_for_voronoi","mg_line_class_string","class_string","mg_add_voronoi_rollover","rollover_on","rollover_off","rollover_move","mg_configure_voronoi_rollover","nest_data_for_aggregate_rollover","data_nested","mg_add_aggregate_rollover","line_classes","mg_line_class","mg_line_color_class","mg_rollover_id_class","mg_rollover_format_id","mg_configure_aggregate_rollover","mg_configure_singleton_rollover","mg_add_single_line_rollover","mg_is_singleton","rect_first","mg_is_standard_multiline","mg_is_aggregated_rollover","mg_draw_all_line_elements","mg_remove_dangling_bands","this_data","mg_line_main_plot","use_data_y_min","continueWithDefault","mg_line_rollover_setup","graph","rolloverOn","rolloverOff","rolloverMove","mg_update_rollover_circle","mg_update_aggregate_rollover_circle","mg_update_generic_rollover_circle","mg_trigger_linked_mouseovers","mg_trigger_linked_mouseouts","datums","mg_remove_active_data_points_for_aggregate_rollover","mg_remove_active_data_points_for_generic_rollover","lineChart","mainPlot","rollover","windowListeners","mouseout","mousemove","bar","bar_margin","mo","processed_dx_accessor","mg_filter_out_plot_bounds","new_data","pointChart","xMaker","yMaker","xgroup_height","XGROUP","xgroupf","xoutf","youtf","colorScale","size_accessor","sizef","paths","active_point_size_increase","x_categorical_show_guides","ls","label_accessor","size_domain","mg_targeted_legend","div","orientation","outer_span","COLOR","legend_on_graph","lineCount","sub_container","barChart","ycolor_accessor","xcolor_accessor","bars","barplot","fresh_render","perform_load_animation","length_type","width_type","length_coord","width_coord","length_scalefn","width_scalefn","length_scale","width_scale","length_accessor","width_accessor","length_coord_map","length_map","reference_length_map","reference_length_coord_fn","reference_accessor","reference_data","reference_bars","reference_thickness","comparison_accessor","comparison_thickness","comparison_data","comparison_marks","comparison_width","rollover_x","rollover_anchor","rollover_align","is_vertical","predictor_accessor","baseline_accessor","secondary_label_accessor","predictor_proportion","truncate_y_labels","data_table","standard_col","font_weight","formatting_options","_format_element","fo","_add_column","_args","arg_type","standard_column","bullet","sparkline","this_column","this_title","th","td_accessor","td_type","td_value","th_text","td_text","td","col","table","colgroup","thead","tbody","this_col","value_formatter","this_format","secondary_accessor","mg_missing_add_text","missing_text","mg_missing_x_scale","mg_missing_y_scale","mg_make_fake_data","mg_add_missing_background_rect","mg_missing_add_line","mg_missing_add_area","mg_remove_all_children","mg_missing_remove_legend","missingData","show_missing_background","fd","eval"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.5.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.5.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$2 + tau$2;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$3 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance1(a, b) {\n  var l = a._.r;\n  while (a !== b) l += 2 * (a = a.next)._.r;\n  return l - b._.r;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          if (sj + a._.r + b._.r > distance1(j, b)) a = j; else b = j;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          if (distance1(a, k) > sk + a._.r + b._.r) a = k; else b = k;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * Math.sin(ap)),\n            p1 = asin$1(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar d3 = __webpack_require__(0);\nvar MG = __webpack_require__(6);\n\n__webpack_require__(3);\n__webpack_require__(4);\n__webpack_require__(5);\n\nvar renderChart = function renderChart(data) {\n  MG.data_graphic({\n    title: 'Followers',\n    data: data.followers.map(function (d) {\n      return {\n        date: new Date(d.date),\n        count: d.count\n      };\n    }),\n    width: 1100,\n    height: 650,\n    left: 60,\n    target: '#chart',\n    x_accessor: 'date',\n    y_accessor: 'count',\n    min_y: 15600,\n    inflator: 1000 / 999,\n    yax_format: d3.format(','),\n    markers: data.tweets.map(function (t) {\n      return {\n        date: new Date(t.date),\n        label: ''\n      };\n    }),\n    interpolate: d3.curveMonotoneX\n  });\n};\n\nfetch('https://s3-eu-west-1.amazonaws.com/twitter-stats/stats.json').then(function (res) {\n  return res.json();\n}).then(function (data) {\n  return renderChart(data);\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('d3'));\n  } else {\n    root.MG = factory(root.d3);\n  }\n}(this, function(d3) {\n(typeof window === 'undefined' ? global : window).MG = {version: '2.11'};\n\n//a set of helper functions, some that we've written, others that we've borrowed\n\nMG.convert = {};\n\nMG.convert.date = function(data, accessor, time_format) {\n  time_format = (typeof time_format === \"undefined\") ? '%Y-%m-%d' : time_format;\n  var parse_time = d3.timeParse(time_format);\n  data = data.map(function(d) {\n    d[accessor] = parse_time(d[accessor].trim());\n    return d;\n  });\n\n  return data;\n}\n\nMG.convert.number = function(data, accessor) {\n  data = data.map(function(d) {\n    d[accessor] = Number(d[accessor]);\n    return d;\n  });\n\n  return data;\n}\n\nMG.time_format = function(utc, specifier) {\n  return utc ? d3.utcFormat(specifier) : d3.timeFormat(specifier);\n}\n\nfunction mg_jquery_exists() {\n  if (typeof jQuery !== 'undefined' || typeof $ !== 'undefined') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction mg_get_rollover_time_format(args) {\n  var fmt;\n  switch (args.processed.x_time_frame) {\n    case 'millis':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %H:%M:%S.%L');\n      break;\n    case 'seconds':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %H:%M:%S');\n      break;\n    case 'less-than-a-day':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %I:%M%p');\n      break;\n    case 'four-days':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %I:%M%p');\n      break;\n    default:\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y');\n  }\n  return fmt;\n}\n\nfunction mg_data_in_plot_bounds(datum, args) {\n  return datum[args.x_accessor] >= args.processed.min_x &&\n    datum[args.x_accessor] <= args.processed.max_x &&\n    datum[args.y_accessor] >= args.processed.min_y &&\n    datum[args.y_accessor] <= args.processed.max_y;\n}\n\nfunction is_array(thing) {\n  return Object.prototype.toString.call(thing) === '[object Array]';\n}\n\nfunction is_function(thing) {\n  return Object.prototype.toString.call(thing) === '[object Function]';\n}\n\nfunction is_empty_array(thing) {\n  return is_array(thing) && thing.length === 0;\n}\n\nfunction is_object(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction is_array_of_arrays(data) {\n  var all_elements = data.map(function(d) {\n    return is_array(d) === true && d.length > 0;\n  });\n\n  return d3.sum(all_elements) === data.length;\n}\n\nfunction is_array_of_objects(data) {\n  // is every element of data an object?\n  var all_elements = data.map(function(d) {\n    return is_object(d) === true;\n  });\n\n  return d3.sum(all_elements) === data.length;\n}\n\nfunction is_array_of_objects_or_empty(data) {\n  return is_empty_array(data) || is_array_of_objects(data);\n}\n\nfunction pluck(arr, accessor) {\n  return arr.map(function(d) {\n    return d[accessor] });\n}\n\nfunction count_array_elements(arr) {\n  return arr.reduce(function(a, b) { a[b] = a[b] + 1 || 1;\n    return a; }, {});\n}\n\nfunction mg_get_bottom(args) {\n  return args.height - args.bottom;\n}\n\nfunction mg_get_plot_bottom(args) {\n  // returns the pixel location of the bottom side of the plot area.\n  return mg_get_bottom(args) - args.buffer;\n}\n\nfunction mg_get_top(args) {\n  return args.top;\n}\n\nfunction mg_get_plot_top(args) {\n  // returns the pixel location of the top side of the plot area.\n  return mg_get_top(args) + args.buffer;\n}\n\nfunction mg_get_left(args) {\n  return args.left;\n}\n\nfunction mg_get_plot_left(args) {\n  // returns the pixel location of the left side of the plot area.\n  return mg_get_left(args) + args.buffer;\n}\n\nfunction mg_get_right(args) {\n  return args.width - args.right;\n}\n\nfunction mg_get_plot_right(args) {\n  // returns the pixel location of the right side of the plot area.\n  return mg_get_right(args) - args.buffer;\n}\n\n//////// adding elements, removing elements /////////////\n\nfunction mg_exit_and_remove(elem) {\n  elem.exit().remove();\n}\n\nfunction mg_selectAll_and_remove(svg, cl) {\n  svg.selectAll(cl).remove();\n}\n\nfunction mg_add_g(svg, cl) {\n  return svg.append('g').classed(cl, true);\n}\n\nfunction mg_remove_element(svg, elem) {\n  svg.select(elem).remove();\n}\n\n//////// axis helper functions ////////////\n\nfunction mg_make_rug(args, rug_class) {\n  var svg = mg_get_svg_child_of(args.target);\n  var all_data = mg_flatten_array(args.data);\n  var rug = svg.selectAll('line.' + rug_class).data(all_data);\n\n  rug.enter()\n    .append('line')\n      .attr('class', rug_class)\n      .attr('opacity', 0.3);\n\n  //remove rug elements that are no longer in use\n  mg_exit_and_remove(rug);\n\n  //set coordinates of new rug elements\n  mg_exit_and_remove(rug);\n  return rug;\n}\n\nfunction mg_add_color_accessor_to_rug(rug, args, rug_mono_class) {\n  if (args.color_accessor) {\n    rug.attr('stroke', args.scalefns.colorf);\n    rug.classed(rug_mono_class, false);\n  } else {\n    rug.attr('stroke', null);\n    rug.classed(rug_mono_class, true);\n  }\n}\n\nfunction mg_rotate_labels(labels, rotation_degree) {\n  if (rotation_degree) {\n    labels.attr({\n      dy: 0,\n      transform: function() {\n        var elem = d3.select(this);\n        return 'rotate(' + rotation_degree + ' ' + elem.attr('x') + ',' + elem.attr('y') + ')';\n      }\n    });\n  }\n}\n\n//////////////////////////////////////////////////\n\nfunction mg_elements_are_overlapping(labels) {\n  labels = labels.node();\n  if (!labels) {\n    return false;\n  }\n\n  for (var i = 0; i < labels.length; i++) {\n    if (mg_is_horizontally_overlapping(labels[i], labels)) return true;\n  }\n\n  return false;\n}\n\nfunction mg_prevent_horizontal_overlap(labels, args) {\n  if (!labels || labels.length == 1) {\n    return;\n  }\n\n  //see if each of our labels overlaps any of the other labels\n  for (var i = 0; i < labels.length; i++) {\n    //if so, nudge it up a bit, if the label it intersects hasn't already been nudged\n    if (mg_is_horizontally_overlapping(labels[i], labels)) {\n      var node = d3.select(labels[i]);\n      var newY = +node.attr('y');\n      if (newY + 8 >= args.top) {\n        newY = args.top - 16;\n      }\n      node.attr('y', newY);\n    }\n  }\n}\n\nfunction mg_prevent_vertical_overlap(labels, args) {\n  if (!labels || labels.length == 1) {\n    return;\n  }\n\n  labels.sort(function(b, a) {\n    return d3.select(a).attr('y') - d3.select(b).attr('y');\n  });\n\n  labels.reverse();\n\n  var overlap_amount, label_i, label_j;\n\n  //see if each of our labels overlaps any of the other labels\n  for (var i = 0; i < labels.length; i++) {\n    //if so, nudge it up a bit, if the label it intersects hasn't already been nudged\n    label_i = d3.select(labels[i]).text();\n\n    for (var j = 0; j < labels.length; j++) {\n      label_j = d3.select(labels[j]).text();\n      overlap_amount = mg_is_vertically_overlapping(labels[i], labels[j]);\n\n      if (overlap_amount !== false && label_i !== label_j) {\n        var node = d3.select(labels[i]);\n        var newY = +node.attr('y');\n        newY = newY + overlap_amount;\n        node.attr('y', newY);\n      }\n    }\n  }\n}\n\nfunction mg_is_vertically_overlapping(element, sibling) {\n  var element_bbox = element.getBoundingClientRect();\n  var sibling_bbox = sibling.getBoundingClientRect();\n\n  if (element_bbox.top <= sibling_bbox.bottom && element_bbox.top >= sibling_bbox.top) {\n    return sibling_bbox.bottom - element_bbox.top;\n  }\n\n  return false;\n}\n\nfunction mg_is_horiz_overlap(element, sibling) {\n  var element_bbox = element.getBoundingClientRect();\n  var sibling_bbox = sibling.getBoundingClientRect();\n\n  if (element_bbox.right >= sibling_bbox.left || element_bbox.top >= sibling_bbox.top) {\n    return sibling_bbox.bottom - element_bbox.top;\n  }\n  return false;\n}\n\nfunction mg_is_horizontally_overlapping(element, labels) {\n  var element_bbox = element.getBoundingClientRect();\n\n  for (var i = 0; i < labels.length; i++) {\n    if (labels[i] == element) {\n      continue;\n    }\n\n    //check to see if this label overlaps with any of the other labels\n    var sibling_bbox = labels[i].getBoundingClientRect();\n    if (element_bbox.top === sibling_bbox.top &&\n      !(sibling_bbox.left > element_bbox.right || sibling_bbox.right < element_bbox.left)\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mg_infer_type(args, ns) {\n    // must return categorical or numerical.\n    var testPoint = mg_flatten_array(args.data);\n\n    testPoint = testPoint[0][args[ns + '_accessor']];\n    return typeof testPoint === 'string' ? 'categorical' : 'numerical';\n  }\n\nfunction mg_get_svg_child_of(selector_or_node) {\n  return d3.select(selector_or_node).select('svg');\n}\n\nfunction mg_flatten_array(arr) {\n  var flat_data = [];\n  return flat_data.concat.apply(flat_data, arr);\n}\n\nfunction mg_next_id() {\n  if (typeof MG._next_elem_id === 'undefined') {\n    MG._next_elem_id = 0;\n  }\n\n  return 'mg-' + (MG._next_elem_id++);\n}\n\nfunction mg_target_ref(target) {\n  if (typeof target === 'string') {\n    return mg_normalize(target);\n\n  } else if (target instanceof window.HTMLElement) {\n    var target_ref = target.getAttribute('data-mg-uid');\n    if (!target_ref) {\n      target_ref = mg_next_id();\n      target.setAttribute('data-mg-uid', target_ref);\n    }\n\n    return target_ref;\n\n  } else {\n    console.warn('The specified target should be a string or an HTMLElement.', target);\n    return mg_normalize(target);\n  }\n}\n\nfunction mg_normalize(string) {\n  return string\n    .replace(/[^a-zA-Z0-9 _-]+/g, '')\n    .replace(/ +?/g, '');\n}\n\nfunction get_pixel_dimension(target, dimension) {\n  return Number(d3.select(target).style(dimension).replace(/px/g, ''));\n}\n\nfunction get_width(target) {\n  return get_pixel_dimension(target, 'width');\n}\n\nfunction get_height(target) {\n  return get_pixel_dimension(target, 'height');\n}\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nvar each = function(obj, iterator, context) {\n  // yanked out of underscore\n  var breaker = {};\n  if (obj === null) return obj;\n  if (Array.prototype.forEach && obj.forEach === Array.prototype.forEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, length = obj.length; i < length; i++) {\n      if (iterator.call(context, obj[i], i, obj) === breaker) return;\n    }\n  } else {\n    for (var k in obj) {\n      if (iterator.call(context, obj[k], k, obj) === breaker) return;\n    }\n  }\n\n  return obj;\n};\n\nfunction merge_with_defaults(obj) {\n  // taken from underscore\n  each(Array.prototype.slice.call(arguments, 1), function(source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === void 0) obj[prop] = source[prop];\n      }\n    }\n  });\n\n  return obj;\n}\n\nMG.merge_with_defaults = merge_with_defaults;\n\nfunction number_of_values(data, accessor, value) {\n  var values = data.filter(function(d) {\n    return d[accessor] === value;\n  });\n\n  return values.length;\n}\n\nfunction has_values_below(data, accessor, value) {\n  var values = data.filter(function(d) {\n    return d[accessor] <= value;\n  });\n\n  return values.length > 0;\n}\n\nfunction has_too_many_zeros(data, accessor, zero_count) {\n  return number_of_values(data, accessor, 0) >= zero_count;\n}\n\nfunction mg_is_date(obj) {\n  return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction mg_is_object(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nfunction mg_is_array(obj) {\n  if (Array.isArray) {\n    return Array.isArray(obj);\n  }\n\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\n// deep copy\n// http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object\nMG.clone = function(obj) {\n  var copy;\n\n  // Handle the 3 simple types, and null or undefined\n  if (null === obj || \"object\" !== typeof obj) return obj;\n\n  // Handle Date\n  if (mg_is_date(obj)) {\n    copy = new Date();\n    copy.setTime(obj.getTime());\n    return copy;\n  }\n\n  // Handle Array\n  if (mg_is_array(obj)) {\n    copy = [];\n    for (var i = 0, len = obj.length; i < len; i++) {\n      copy[i] = MG.clone(obj[i]);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (mg_is_object(obj)) {\n    copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = MG.clone(obj[attr]);\n    }\n    return copy;\n  }\n\n  throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n};\n\n// give us the difference of two int arrays\n// http://radu.cotescu.com/javascript-diff-function/\nfunction arr_diff(a, b) {\n  var seen = [],\n    diff = [],\n    i;\n  for (i = 0; i < b.length; i++)\n    seen[b[i]] = true;\n  for (i = 0; i < a.length; i++)\n    if (!seen[a[i]])\n      diff.push(a[i]);\n  return diff;\n}\n\nMG.arr_diff = arr_diff;\n\n/**\n  Print warning message to the console when a feature has been scheduled for removal\n\n  @author Dan de Havilland (github.com/dandehavilland)\n  @date 2014-12\n*/\nfunction warn_deprecation(message, untilVersion) {\n  console.warn('Deprecation: ' + message + (untilVersion ? '. This feature will be removed in ' + untilVersion + '.' : ' the near future.'));\n  console.trace();\n}\n\nMG.warn_deprecation = warn_deprecation;\n\n/**\n  Truncate a string to fit within an SVG text node\n  CSS text-overlow doesn't apply to SVG <= 1.2\n\n  @author Dan de Havilland (github.com/dandehavilland)\n  @date 2014-12-02\n*/\nfunction truncate_text(textObj, textString, width) {\n  var bbox,\n    position = 0;\n\n  textObj.textContent = textString;\n  bbox = textObj.getBBox();\n\n  while (bbox.width > width) {\n    textObj.textContent = textString.slice(0, --position) + '...';\n    bbox = textObj.getBBox();\n\n    if (textObj.textContent === '...') {\n      break;\n    }\n  }\n}\n\nMG.truncate_text = truncate_text;\n\n/**\n  Wrap the contents of a text node to a specific width\n\n  Adapted from bl.ocks.org/mbostock/7555321\n\n  @author Mike Bostock\n  @author Dan de Havilland\n  @date 2015-01-14\n*/\nfunction wrap_text(text, width, token, tspanAttrs) {\n  text.each(function() {\n    var text = d3.select(this),\n      words = text.text().split(token || /\\s+/).reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 1.1, // ems\n      y = text.attr(\"y\"),\n      dy = 0,\n      tspan = text.text(null)\n      .append(\"tspan\")\n      .attr(\"x\", 0)\n      .attr(\"y\", dy + \"em\")\n      .attr(tspanAttrs || {});\n\n    while (!!(word = words.pop())) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (width === null || tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text\n          .append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"y\", ++lineNumber * lineHeight + dy + \"em\")\n          .attr(tspanAttrs || {})\n          .text(word);\n      }\n    }\n  });\n}\n\nMG.wrap_text = wrap_text;\n\nfunction register(chartType, descriptor, defaults) {\n  MG.charts[chartType] = {\n    descriptor: descriptor,\n    defaults: defaults || {}\n  };\n}\n\nMG.register = register;\n\n/**\n  Record of all registered hooks.\n  For internal use only.\n*/\nMG._hooks = {};\n\n/**\n  Add a hook callthrough to the stack.\n\n  Hooks are executed in the order that they were registered.\n*/\nMG.add_hook = function(name, func, context) {\n  var hooks;\n\n  if (!MG._hooks[name]) {\n    MG._hooks[name] = [];\n  }\n\n  hooks = MG._hooks[name];\n\n  var already_registered =\n    hooks.filter(function(hook) {\n      return hook.func === func;\n    })\n    .length > 0;\n\n  if (already_registered) {\n    throw 'That function is already registered.';\n  }\n\n  hooks.push({\n    func: func,\n    context: context\n  });\n};\n\n/**\n  Execute registered hooks.\n\n  Optional arguments\n*/\nMG.call_hook = function(name) {\n  var hooks = MG._hooks[name],\n    result = [].slice.apply(arguments, [1]),\n    processed;\n\n  if (hooks) {\n    hooks.forEach(function(hook) {\n      if (hook.func) {\n        var params = processed || result;\n\n        if (params && params.constructor !== Array) {\n          params = [params];\n        }\n\n        params = [].concat.apply([], params);\n        processed = hook.func.apply(hook.context, params);\n      }\n    });\n  }\n\n  return processed || result;\n};\n\nMG.globals = {};\nMG.deprecations = {\n  rollover_callback: { replacement: 'mouseover', version: '2.0' },\n  rollout_callback: { replacement: 'mouseout', version: '2.0' },\n  x_rollover_format: { replacement: 'x_mouseover', version: '2.10' },\n  y_rollover_format: { replacement: 'y_mouseover', version: '2.10' },\n  show_years: { replacement: 'show_secondary_x_label', version: '2.1' },\n  xax_start_at_min: { replacement: 'axes_not_compact', version: '2.7' },\n  interpolate_tension: { replacement: 'interpolate', version: '2.10' }\n};\nMG.globals.link = false;\nMG.globals.version = \"1.1\";\n\nMG.charts = {};\n\nMG.data_graphic = function(args) {\n  'use strict';\n  var defaults = {\n    missing_is_zero: false,                     // if true, missing values will be treated as zeros\n    missing_is_hidden: false,                   // if true, missing values will appear as broken segments\n    missing_is_hidden_accessor: null,           // the accessor that determines the boolean value for missing data points\n    legend: '' ,                                // an array identifying the labels for a chart's lines\n    legend_target: '',                          // if set, the specified element is populated with a legend\n    error: '',                                  // if set, a graph will show an error icon and log the error to the console\n    animate_on_load: false,                     // animate lines on load\n    top: 65,                                    // the size of the top margin\n    title_y_position: 10,                       // how many pixels from the top edge (0) should we show the title at\n    center_title_full_width: false,             // center the title over the full graph (i.e. ignore left and right margins)\n    bottom: 45,                                 // the size of the bottom margin\n    right: 10,                                  // size of the right margin\n    left: 50,                                   // size of the left margin\n    buffer: 8,                                  // the buffer between the actual chart area and the margins\n    width: 350,                                 // the width of the entire graphic\n    height: 220,                                // the height of the entire graphic\n    full_width: false,                          // sets the graphic width to be the width of the parent element and resizes dynamically\n    full_height: false,                         // sets the graphic width to be the width of the parent element and resizes dynamically\n    small_height_threshold: 120,                // the height threshold for when smaller text appears\n    small_width_threshold: 160,                 // the width  threshold for when smaller text appears\n    xax_count: 6,                               // number of x axis ticks\n    xax_tick_length: 5,                         // x axis tick length\n    axes_not_compact: true,\n    yax_count: 3,                               // number of y axis ticks\n    yax_tick_length: 5,                         // y axis tick length\n    x_extended_ticks: false,                    // extends x axis ticks across chart - useful for tall charts\n    y_extended_ticks: false,                    // extends y axis ticks across chart - useful for long charts\n    y_scale_type: 'linear',\n    max_x: null,\n    max_y: null,\n    min_x: null,\n    min_y: null,                                // if set, y axis starts at an arbitrary value\n    min_y_from_data: false,                     // if set, y axis will start at minimum value rather than at 0\n    point_size: 2.5,                            // the size of the dot that appears on a line on mouse-over\n    x_accessor: 'date',\n    xax_units: '',\n    x_label: '',\n    x_sort: true,\n    x_axis: true,\n    y_axis: true,\n    x_axis_position: 'bottom',\n    y_axis_position: 'left',\n    x_axis_type: null,                          // TO BE INTRODUCED IN 2.10\n    y_axis_type: null,                          // TO BE INTRODUCED IN 2.10\n    ygroup_accessor: null,\n    xgroup_accessor:null,\n    y_padding_percentage: 0.05,                 // for categorical scales\n    y_outer_padding_percentage: .1,             // for categorical scales\n    ygroup_padding_percentage:.25,              // for categorical scales\n    ygroup_outer_padding_percentage: 0,         // for categorical scales\n    x_padding_percentage: 0.05,                 // for categorical scales\n    x_outer_padding_percentage: .1,             // for categorical scales\n    xgroup_padding_percentage:.25,              // for categorical scales\n    xgroup_outer_padding_percentage: 0,         // for categorical scales\n    y_categorical_show_guides: false,\n    x_categorical_show_guide: false,\n    rotate_x_labels: 0,\n    rotate_y_labels: 0,\n    y_accessor: 'value',\n    y_label: '',\n    yax_units: '',\n    yax_units_append: false,\n    x_rug: false,\n    y_rug: false,\n    mouseover_align: 'right',                   // implemented in point.js\n    x_mouseover: null,\n    y_mouseover: null,\n    transition_on_update: true,\n    mouseover: null,\n    click: null,\n    show_rollover_text: true,\n    show_confidence_band: null,                 // given [l, u] shows a confidence at each point from l to u\n    xax_format: null,                           // xax_format is a function that formats the labels for the x axis.\n    area: true,\n    chart_type: 'line',\n    data: [],\n    decimals: 2,                                // the number of decimals in any rollover\n    format: 'count',                            // format = {count, percentage}\n    inflator: 10/9,                             // for setting y axis max\n    linked: false,                              // links together all other graphs with linked:true, so rollovers in one trigger rollovers in the others\n    linked_format: '%Y-%m-%d',                  // What granularity to link on for graphs. Default is at day\n    list: false,\n    baselines: null,                            // sets the baseline lines\n    markers: null,                              // sets the marker lines\n    scalefns: {},\n    scales: {},\n    utc_time: false,\n    european_clock: false,\n    show_year_markers: false,\n    show_secondary_x_label: true,\n    target: '#viz',\n    interpolate: d3.curveCatmullRom.alpha(0),   // interpolation method to use when rendering lines; increase tension if your data is irregular and you notice artifacts\n    custom_line_color_map: [],                  // allows arbitrary mapping of lines to colors, e.g. [2,3] will map line 1 to color 2 and line 2 to color 3\n    colors: null,                               // UNIMPLEMENTED - allows direct color mapping to line colors. Will eventually require\n    max_data_size: null,                        // explicitly specify the the max number of line series, for use with custom_line_color_map\n    aggregate_rollover: false,                  // links the lines in a multi-line chart\n    show_tooltips: true                         // if enabled, a chart's description will appear in a tooltip (requires jquery)\n  };\n\n  MG.call_hook('global.defaults', defaults);\n\n  if (!args) { args = {}; }\n\n  var selected_chart = MG.charts[args.chart_type || defaults.chart_type];\n  merge_with_defaults(args, selected_chart.defaults, defaults);\n\n  if (args.list) {\n    args.x_accessor = 0;\n    args.y_accessor = 1;\n  }\n\n  // check for deprecated parameters\n  for (var key in MG.deprecations) {\n    if (args.hasOwnProperty(key)) {\n      var deprecation = MG.deprecations[key],\n        message = 'Use of `args.' + key + '` has been deprecated',\n        replacement = deprecation.replacement,\n        version;\n\n      // transparently alias the deprecated\n      if (replacement) {\n        if (args[replacement]) {\n          message += '. The replacement - `args.' + replacement + '` - has already been defined. This definition will be discarded.';\n        } else {\n          args[replacement] = args[key];\n        }\n      }\n\n      if (deprecation.warned) {\n        continue;\n      }\n\n      deprecation.warned = true;\n\n      if (replacement) {\n        message += ' in favor of `args.' + replacement + '`';\n      }\n\n      warn_deprecation(message, deprecation.version);\n    }\n  }\n\n  MG.call_hook('global.before_init', args);\n\n  new selected_chart.descriptor(args);\n\n  return args.data;\n};\n\nif (mg_jquery_exists()) {\n    /* ========================================================================\n     * Bootstrap: tooltip.js v3.3.5\n     * http://getbootstrap.com/javascript/#tooltip\n     * Inspired by the original jQuery.tipsy by Jason Frame\n     * ========================================================================\n     * Copyright 2011-2015 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n\n    +function ($) {\n      'use strict';\n\n      // TOOLTIP PUBLIC CLASS DEFINITION\n      // ===============================\n\n      var Tooltip = function (element, options) {\n        this.type       = null\n        this.options    = null\n        this.enabled    = null\n        this.timeout    = null\n        this.hoverState = null\n        this.$element   = null\n        this.inState    = null\n\n        this.init('tooltip', element, options)\n      }\n\n      Tooltip.VERSION  = '3.3.5'\n\n      Tooltip.TRANSITION_DURATION = 150\n\n      Tooltip.DEFAULTS = {\n        animation: true,\n        placement: 'top',\n        selector: false,\n        template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n        trigger: 'hover focus',\n        title: '',\n        delay: 0,\n        html: false,\n        container: false,\n        viewport: {\n          selector: 'body',\n          padding: 0\n        }\n      }\n\n      Tooltip.prototype.init = function (type, element, options) {\n        this.enabled   = true\n        this.type      = type\n        this.$element  = $(element)\n        this.options   = this.getOptions(options)\n        this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n        this.inState   = { click: false, hover: false, focus: false }\n\n        if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n          throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n        }\n\n        var triggers = this.options.trigger.split(' ')\n\n        for (var i = triggers.length; i--;) {\n          var trigger = triggers[i]\n\n          if (trigger == 'click') {\n            this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n          } else if (trigger != 'manual') {\n            var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n            var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n            this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n            this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n          }\n        }\n\n        this.options.selector ?\n          (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n          this.fixTitle()\n      }\n\n      Tooltip.prototype.getDefaults = function () {\n        return Tooltip.DEFAULTS\n      }\n\n      Tooltip.prototype.getOptions = function (options) {\n        options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n        if (options.delay && typeof options.delay == 'number') {\n          options.delay = {\n            show: options.delay,\n            hide: options.delay\n          }\n        }\n\n        return options\n      }\n\n      Tooltip.prototype.getDelegateOptions = function () {\n        var options  = {}\n        var defaults = this.getDefaults()\n\n        this._options && $.each(this._options, function (key, value) {\n          if (defaults[key] != value) options[key] = value\n        })\n\n        return options\n      }\n\n      Tooltip.prototype.enter = function (obj) {\n        var self = obj instanceof this.constructor ?\n          obj : $(obj.currentTarget).data('bs.' + this.type)\n\n        if (!self) {\n          self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n          $(obj.currentTarget).data('bs.' + this.type, self)\n        }\n\n        if (obj instanceof $.Event) {\n          self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n        }\n\n        if (self.tip().hasClass('in') || self.hoverState == 'in') {\n          self.hoverState = 'in'\n          return\n        }\n\n        clearTimeout(self.timeout)\n\n        self.hoverState = 'in'\n\n        if (!self.options.delay || !self.options.delay.show) return self.show()\n\n        self.timeout = setTimeout(function () {\n          if (self.hoverState == 'in') self.show()\n        }, self.options.delay.show)\n      }\n\n      Tooltip.prototype.isInStateTrue = function () {\n        for (var key in this.inState) {\n          if (this.inState[key]) return true\n        }\n\n        return false\n      }\n\n      Tooltip.prototype.leave = function (obj) {\n        var self = obj instanceof this.constructor ?\n          obj : $(obj.currentTarget).data('bs.' + this.type)\n\n        if (!self) {\n          self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n          $(obj.currentTarget).data('bs.' + this.type, self)\n        }\n\n        if (obj instanceof $.Event) {\n          self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n        }\n\n        if (self.isInStateTrue()) return\n\n        clearTimeout(self.timeout)\n\n        self.hoverState = 'out'\n\n        if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n        self.timeout = setTimeout(function () {\n          if (self.hoverState == 'out') self.hide()\n        }, self.options.delay.hide)\n      }\n\n      Tooltip.prototype.show = function () {\n        var e = $.Event('show.bs.' + this.type)\n\n        if (this.hasContent() && this.enabled) {\n          this.$element.trigger(e)\n\n          var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n          if (e.isDefaultPrevented() || !inDom) return\n          var that = this\n\n          var $tip = this.tip()\n\n          var tipId = this.getUID(this.type)\n\n          this.setContent()\n          $tip.attr('id', tipId)\n          this.$element.attr('aria-describedby', tipId)\n\n          if (this.options.animation) $tip.addClass('fade')\n\n          var placement = typeof this.options.placement == 'function' ?\n            this.options.placement.call(this, $tip[0], this.$element[0]) :\n            this.options.placement\n\n          var autoToken = /\\s?auto?\\s?/i\n          var autoPlace = autoToken.test(placement)\n          if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n          $tip\n            .detach()\n            .css({ top: 0, left: 0, display: 'block' })\n            .addClass(placement)\n            .data('bs.' + this.type, this)\n\n          this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n          this.$element.trigger('inserted.bs.' + this.type)\n\n          var pos          = this.getPosition()\n          var actualWidth  = $tip[0].offsetWidth\n          var actualHeight = $tip[0].offsetHeight\n\n          if (autoPlace) {\n            var orgPlacement = placement\n            var viewportDim = this.getPosition(this.$viewport)\n\n            placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                        placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                        placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                        placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                        placement\n\n            $tip\n              .removeClass(orgPlacement)\n              .addClass(placement)\n          }\n\n          var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n          this.applyPlacement(calculatedOffset, placement)\n\n          var complete = function () {\n            var prevHoverState = that.hoverState\n            that.$element.trigger('shown.bs.' + that.type)\n            that.hoverState = null\n\n            if (prevHoverState == 'out') that.leave(that)\n          }\n\n          $.support.transition && this.$tip.hasClass('fade') ?\n            $tip\n              .one('bsTransitionEnd', complete)\n              .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n            complete()\n        }\n      }\n\n      Tooltip.prototype.applyPlacement = function (offset, placement) {\n        var $tip   = this.tip()\n        var width  = $tip[0].offsetWidth\n        var height = $tip[0].offsetHeight\n\n        // manually read margins because getBoundingClientRect includes difference\n        var marginTop = parseInt($tip.css('margin-top'), 10)\n        var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n        // we must check for NaN for ie 8/9\n        if (isNaN(marginTop))  marginTop  = 0\n        if (isNaN(marginLeft)) marginLeft = 0\n\n        offset.top  += marginTop\n        offset.left += marginLeft\n\n        // $.fn.offset doesn't round pixel values\n        // so we use setOffset directly with our own function B-0\n        $.offset.setOffset($tip[0], $.extend({\n          using: function (props) {\n            $tip.css({\n              top: Math.round(props.top),\n              left: Math.round(props.left)\n            })\n          }\n        }, offset), 0)\n\n        $tip.addClass('in')\n\n        // check to see if placing tip in new offset caused the tip to resize itself\n        var actualWidth  = $tip[0].offsetWidth\n        var actualHeight = $tip[0].offsetHeight\n\n        if (placement == 'top' && actualHeight != height) {\n          offset.top = offset.top + height - actualHeight\n        }\n\n        var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n        if (delta.left) offset.left += delta.left\n        else offset.top += delta.top\n\n        var isVertical          = /top|bottom/.test(placement)\n        var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n        var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n        $tip.offset(offset)\n        this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n      }\n\n      Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n        this.arrow()\n          .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n          .css(isVertical ? 'top' : 'left', '')\n      }\n\n      Tooltip.prototype.setContent = function () {\n        var $tip  = this.tip()\n        var title = this.getTitle()\n\n        $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n        $tip.removeClass('fade in top bottom left right')\n      }\n\n      Tooltip.prototype.hide = function (callback) {\n        var that = this\n        var $tip = $(this.$tip)\n        var e    = $.Event('hide.bs.' + this.type)\n\n        function complete() {\n          if (that.hoverState != 'in') $tip.detach()\n          that.$element\n            .removeAttr('aria-describedby')\n            .trigger('hidden.bs.' + that.type)\n          callback && callback()\n        }\n\n        this.$element.trigger(e)\n\n        if (e.isDefaultPrevented()) return\n\n        $tip.removeClass('in')\n\n        $.support.transition && $tip.hasClass('fade') ?\n          $tip\n            .one('bsTransitionEnd', complete)\n            .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n          complete()\n\n        this.hoverState = null\n\n        return this\n      }\n\n      Tooltip.prototype.fixTitle = function () {\n        var $e = this.$element\n        if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n          $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n        }\n      }\n\n      Tooltip.prototype.hasContent = function () {\n        return this.getTitle()\n      }\n\n      Tooltip.prototype.getPosition = function ($element) {\n        $element   = $element || this.$element\n\n        var el     = $element[0]\n        var isBody = el.tagName == 'BODY'\n\n        var elRect    = el.getBoundingClientRect()\n        if (elRect.width == null) {\n          // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n          elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n        }\n        var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n        var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n        var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n        return $.extend({}, elRect, scroll, outerDims, elOffset)\n      }\n\n      Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n        return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n               placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n               placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n            /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n      }\n\n      Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n        var delta = { top: 0, left: 0 }\n        if (!this.$viewport) return delta\n\n        var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n        var viewportDimensions = this.getPosition(this.$viewport)\n\n        if (/right|left/.test(placement)) {\n          var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n          var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n          if (topEdgeOffset < viewportDimensions.top) { // top overflow\n            delta.top = viewportDimensions.top - topEdgeOffset\n          } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n            delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n          }\n        } else {\n          var leftEdgeOffset  = pos.left - viewportPadding\n          var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n          if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n            delta.left = viewportDimensions.left - leftEdgeOffset\n          } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n            delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n          }\n        }\n\n        return delta\n      }\n\n      Tooltip.prototype.getTitle = function () {\n        var title\n        var $e = this.$element\n        var o  = this.options\n\n        title = $e.attr('data-original-title')\n          || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n        return title\n      }\n\n      Tooltip.prototype.getUID = function (prefix) {\n        do prefix += ~~(Math.random() * 1000000)\n        while (document.getElementById(prefix))\n        return prefix\n      }\n\n      Tooltip.prototype.tip = function () {\n        if (!this.$tip) {\n          this.$tip = $(this.options.template)\n          if (this.$tip.length != 1) {\n            throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n          }\n        }\n        return this.$tip\n      }\n\n      Tooltip.prototype.arrow = function () {\n        return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n      }\n\n      Tooltip.prototype.enable = function () {\n        this.enabled = true\n      }\n\n      Tooltip.prototype.disable = function () {\n        this.enabled = false\n      }\n\n      Tooltip.prototype.toggleEnabled = function () {\n        this.enabled = !this.enabled\n      }\n\n      Tooltip.prototype.toggle = function (e) {\n        var self = this\n        if (e) {\n          self = $(e.currentTarget).data('bs.' + this.type)\n          if (!self) {\n            self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n            $(e.currentTarget).data('bs.' + this.type, self)\n          }\n        }\n\n        if (e) {\n          self.inState.click = !self.inState.click\n          if (self.isInStateTrue()) self.enter(self)\n          else self.leave(self)\n        } else {\n          self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n        }\n      }\n\n      Tooltip.prototype.destroy = function () {\n        var that = this\n        clearTimeout(this.timeout)\n        this.hide(function () {\n          that.$element.off('.' + that.type).removeData('bs.' + that.type)\n          if (that.$tip) {\n            that.$tip.detach()\n          }\n          that.$tip = null\n          that.$arrow = null\n          that.$viewport = null\n        })\n      }\n\n\n      // TOOLTIP PLUGIN DEFINITION\n      // =========================\n\n      function Plugin(option) {\n        return this.each(function () {\n          var $this   = $(this)\n          var data    = $this.data('bs.tooltip')\n          var options = typeof option == 'object' && option\n\n          if (!data && /destroy|hide/.test(option)) return\n          if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n          if (typeof option == 'string') data[option]()\n        })\n      }\n\n      var old = $.fn.tooltip\n\n      $.fn.tooltip             = Plugin\n      $.fn.tooltip.Constructor = Tooltip\n\n\n      // TOOLTIP NO CONFLICT\n      // ===================\n\n      $.fn.tooltip.noConflict = function () {\n        $.fn.tooltip = old\n        return this\n      }\n\n    }(jQuery);\n\n\n    /* ========================================================================\n     * Bootstrap: popover.js v3.3.5\n     * http://getbootstrap.com/javascript/#popovers\n     * ========================================================================\n     * Copyright 2011-2015 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n\n    +function ($) {\n      'use strict';\n\n      // POPOVER PUBLIC CLASS DEFINITION\n      // ===============================\n\n      var Popover = function (element, options) {\n        this.init('popover', element, options)\n      }\n\n      if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n      Popover.VERSION  = '3.3.5'\n\n      Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n        placement: 'right',\n        trigger: 'click',\n        content: '',\n        template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n      })\n\n\n      // NOTE: POPOVER EXTENDS tooltip.js\n      // ================================\n\n      Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n      Popover.prototype.constructor = Popover\n\n      Popover.prototype.getDefaults = function () {\n        return Popover.DEFAULTS\n      }\n\n      Popover.prototype.setContent = function () {\n        var $tip    = this.tip()\n        var title   = this.getTitle()\n        var content = this.getContent()\n\n        $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n        $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n          this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n        ](content)\n\n        $tip.removeClass('fade top bottom left right in')\n\n        // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n        // this manually by checking the contents.\n        if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n      }\n\n      Popover.prototype.hasContent = function () {\n        return this.getTitle() || this.getContent()\n      }\n\n      Popover.prototype.getContent = function () {\n        var $e = this.$element\n        var o  = this.options\n\n        return $e.attr('data-content')\n          || (typeof o.content == 'function' ?\n                o.content.call($e[0]) :\n                o.content)\n      }\n\n      Popover.prototype.arrow = function () {\n        return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n      }\n\n\n      // POPOVER PLUGIN DEFINITION\n      // =========================\n\n      function Plugin(option) {\n        return this.each(function () {\n          var $this   = $(this)\n          var data    = $this.data('bs.popover')\n          var options = typeof option == 'object' && option\n\n          if (!data && /destroy|hide/.test(option)) return\n          if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n          if (typeof option == 'string') data[option]()\n        })\n      }\n\n      var old = $.fn.popover\n\n      $.fn.popover             = Plugin\n      $.fn.popover.Constructor = Popover\n\n\n      // POPOVER NO CONFLICT\n      // ===================\n\n      $.fn.popover.noConflict = function () {\n        $.fn.popover = old\n        return this\n      }\n\n    }(jQuery);\n}\n\nfunction chart_title(args) {\n  'use strict';\n\n  var svg = mg_get_svg_child_of(args.target);\n\n  //remove the current title if it exists\n  svg.select('.mg-header').remove();\n\n  if (args.target && args.title) {\n    var chartTitle = svg.insert('text')\n      .attr('class', 'mg-header')\n      .attr('x', args.center_title_full_width ? args.width /2 : (args.width + args.left - args.right) / 2)\n      .attr('y', args.title_y_position)\n      .attr('text-anchor', 'middle')\n      .attr('dy', '0.55em');\n\n    //show the title\n    chartTitle.append('tspan')\n      .attr('class', 'mg-chart-title')\n      .text(args.title);\n\n    //show and activate the description icon if we have a description\n    if (args.show_tooltips && args.description && mg_jquery_exists()) {\n      chartTitle.append('tspan')\n        .attr('class', 'mg-chart-description')\n        .attr('dx', '0.3em')\n        .text('\\uf059');\n\n      //now that the title is an svg text element, we'll have to trigger\n      //mouseenter, mouseleave events manually for the popover to work properly\n      var $chartTitle = $(chartTitle.node());\n      $chartTitle.popover({\n        html: true,\n        animation: false,\n        placement: 'top',\n        content: args.description,\n        container: args.target,\n        trigger: 'manual',\n        template: '<div class=\"popover mg-popover\"><div class=\"arrow\"></div><div class=\"popover-inner\"><h3 class=\"popover-title\"></h3><div class=\"popover-content\"><p></p></div></div></div>'\n      }).on('mouseenter', function() {\n        d3.selectAll(args.target)\n          .selectAll('.mg-popover')\n          .remove();\n\n        $(this).popover('show');\n        $(d3.select(args.target).select('.popover').node())\n          .on('mouseleave', function () {\n            $chartTitle.popover('hide');\n          });\n      }).on('mouseleave', function () {\n        setTimeout(function () {\n          if (!$('.popover:hover').length) {\n            $chartTitle.popover('hide');\n          }\n        }, 120);\n      });\n    } else if (args.show_tooltips && args.description && typeof $ === 'undefined') {\n      args.error = 'In order to enable tooltips, please make sure you include jQuery.';\n    }\n  }\n\n  if (args.error) {\n    error(args);\n  }\n}\n\nMG.chart_title = chart_title;\n\nfunction mg_add_scale_function(args, scalefcn_name, scale, accessor, inflation) {\n  args.scalefns[scalefcn_name] = function(di) {\n    if (inflation === undefined) return args.scales[scale](di[accessor]);\n    else return args.scales[scale](di[accessor]) + inflation;\n  };\n}\n\nfunction mg_position(str, args) {\n  if (str === 'bottom' || str === 'top') {\n    return [mg_get_plot_left(args), mg_get_plot_right(args)];\n  }\n\n  if (str === 'left' || str === 'right') {\n    return [mg_get_plot_bottom(args), args.top];\n  }\n}\n\nfunction mg_cat_position(str, args) {\n  if (str === 'bottom' || str === 'top') {\n    return [mg_get_plot_left(args), mg_get_plot_right(args)]\n  }\n\n  if (str === 'left' || str === 'right') {\n    return [mg_get_plot_bottom(args), mg_get_plot_top(args)];\n  }\n}\n\nfunction MGScale(args) {\n  // big wrapper around d3 scale that automatically formats & calculates scale bounds\n  // according to the data, and handles other niceties.\n  var scaleArgs = {}\n  scaleArgs.use_inflator = false;\n  scaleArgs.zero_bottom = false;\n  scaleArgs.scaleType = 'numerical';\n\n  this.namespace = function(_namespace) {\n    scaleArgs.namespace = _namespace;\n    scaleArgs.namespace_accessor_name = scaleArgs.namespace + '_accessor';\n    scaleArgs.scale_name = scaleArgs.namespace.toUpperCase();\n    scaleArgs.scalefn_name = scaleArgs.namespace + 'f';\n    return this;\n  }\n\n  this.scaleName = function(scaleName) {\n    scaleArgs.scale_name = scaleName.toUpperCase();\n    scaleArgs.scalefn_name = scaleName +'f';\n    return this;\n  }\n\n  this.inflateDomain = function(tf) {\n    scaleArgs.use_inflator = tf;\n    return this;\n  }\n\n  this.zeroBottom = function(tf) {\n    scaleArgs.zero_bottom = tf;\n    return this;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// all scale domains are either numerical (number, date, etc.) or categorical (factor, label, etc) /////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////\n  // these functions automatically create the d3 scale function and place the domain.\n\n  this.numericalDomainFromData = function() {\n    var other_flat_data_arrays = [];\n\n    if (arguments.length > 0) {\n      other_flat_data_arrays = arguments;\n    }\n\n    // pull out a non-empty array in args.data.\n    var illustrative_data;\n    for (var i = 0; i < args.data.length; i++) {\n      if (args.data[i].length > 0) {\n        illustrative_data = args.data[i];\n      }\n    }\n    scaleArgs.is_time_series = mg_is_date(illustrative_data[0][args[scaleArgs.namespace_accessor_name]])\n      ? true\n      : false;\n\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n\n    mg_min_max_numerical(args, scaleArgs, other_flat_data_arrays, scaleArgs.use_inflator);\n\n    var time_scale = (args.utc_time)\n      ? d3.scaleUtc()\n      : d3.scaleTime();\n\n    args.scales[scaleArgs.scale_name] = (scaleArgs.is_time_series)\n      ? time_scale\n      : (args[scaleArgs.namespace + '_scale_type'] === 'log')\n        ? d3.scaleLog()\n        : d3.scaleLinear();\n\n    args.scales[scaleArgs.scale_name].domain([args.processed['min_' + scaleArgs.namespace], args.processed['max_' + scaleArgs.namespace]]);\n    scaleArgs.scaleType = 'numerical';\n\n    return this;\n  }\n\n  this.categoricalDomain = function(domain) {\n    args.scales[scaleArgs.scale_name] = d3.scaleOrdinal().domain(domain);\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n    return this;\n  }\n\n  this.categoricalDomainFromData = function() {\n    // make args.categorical_variables.\n    // lets make the categorical variables.\n    var all_data = mg_flatten_array(args.data)\n    //d3.set(data.map(function(d){return d[args.group_accessor]})).values()\n    scaleArgs.categoricalVariables = d3.set(all_data.map(function(d) {\n      return d[args[scaleArgs.namespace_accessor_name]] })).values();\n    args.scales[scaleArgs.scale_name] = d3.scaleBand()\n      .domain(scaleArgs.categoricalVariables);\n\n    scaleArgs.scaleType = 'categorical';\n    return this;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  ////////// all scale ranges are either positional (for axes, etc) or arbitrary (colors, size, etc) //////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  this.numericalRange = function(range) {\n    if (typeof range === 'string') {\n      args\n        .scales[scaleArgs.scale_name]\n        .range(mg_position(range, args));\n    } else {\n      args\n        .scales[scaleArgs.scale_name]\n        .range(range);\n    }\n\n    return this;\n  }\n\n  this.categoricalRangeBands = function(range, halfway) {\n    if (halfway === undefined) halfway = false;\n\n    var namespace = scaleArgs.namespace;\n    var paddingPercentage = args[namespace + '_padding_percentage'];\n    var outerPaddingPercentage = args[namespace + '_outer_padding_percentage'];\n    if (typeof range === 'string') {\n      // if string, it's a location. Place it accordingly.\n      args.scales[scaleArgs.scale_name]\n        .range(mg_position(range, args))\n        .paddingInner(paddingPercentage)\n        .paddingOuter(outerPaddingPercentage);\n    } else {\n      args.scales[scaleArgs.scale_name]\n        .range(range)\n        .paddingInner(paddingPercentage)\n        .paddingOuter(outerPaddingPercentage);\n    }\n\n    mg_add_scale_function(\n      args,\n      scaleArgs.scalefn_name,\n      scaleArgs.scale_name,\n      args[scaleArgs.namespace_accessor_name],\n      halfway\n        ? args.scales[scaleArgs.scale_name].bandwidth() / 2\n        : 0\n    );\n\n    return this;\n  }\n\n  this.categoricalRange = function(range) {\n    args.scales[scaleArgs.scale_name].range(range);\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n    return this;\n  }\n\n  this.categoricalColorRange = function() {\n    args.scales[scaleArgs.scale_name] = args.scales[scaleArgs.scale_name].domain().length > 10\n      ? d3.scaleOrdinal(d3.schemeCategory20)\n      : d3.scaleOrdinal(d3.schemeCategory10);\n\n    args\n      .scales[scaleArgs.scale_name]\n      .domain(scaleArgs.categoricalVariables);\n\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n    return this;\n  }\n\n  this.clamp = function(yn) {\n    args.scales[scaleArgs.scale_name].clamp(yn);\n    return this;\n  }\n\n  return this;\n}\n\nMG.scale_factory = MGScale;\n\n/////////////////////////////// x, x_accessor, markers, baselines, etc.\nfunction mg_min_max_numerical(args, scaleArgs, additional_data_arrays) {\n  // A BIT OF EXPLANATION ABOUT THIS FUNCTION\n  // This function pulls out all the accessor values in all the arrays in args.data.\n  // We also have this additional argument, additional_data_arrays, which is an array of arrays of raw data values.\n  // These values also get concatenated to the data pulled from args.data, and the extents are calculate from that.\n  // They are optional.\n  //\n  // This may seem arbitrary, but it gives us a lot of flexibility. For instance, if we're calculating\n  // the min and max for the y axis of a line chart, we're going to want to also factor in baselines (horizontal lines\n  // that might potentially be outside of the y value bounds). The easiest way to do this is in the line.js code\n  // & scale creation to just flatten the args.baselines array, pull out hte values, and feed it in\n  // so it appears in additional_data_arrays.\n  var namespace = scaleArgs.namespace;\n  var namespace_accessor_name = scaleArgs.namespace_accessor_name;\n  var use_inflator = scaleArgs.use_inflator;\n  var zero_bottom = scaleArgs.zero_bottom;\n\n  var accessor = args[namespace_accessor_name];\n\n  // add together all relevant data arrays.\n  var all_data = mg_flatten_array(args.data)\n    .map(function(dp) {\n      return dp[accessor] })\n    .concat(mg_flatten_array(additional_data_arrays));\n\n  // do processing for log\n  if (args[namespace + '_scale_type'] === 'log') {\n    all_data = all_data.filter(function(d) {\n      return d > 0;\n    });\n  }\n\n  // use inflator?\n  var extents = d3.extent(all_data);\n  var min_val = extents[0];\n  var max_val = extents[1];\n\n  // bolt scale domain to zero when the right conditions are met:\n  // not pulling the bottom of the range from data\n  // not zero-bottomed\n  // not a time series\n  if (zero_bottom && !args['min_' + namespace + '_from_data'] && min_val > 0 && !scaleArgs.is_time_series) {\n    min_val = args[namespace + '_scale_type'] === 'log' ? 1 : 0;\n  }\n\n  if (args[namespace + '_scale_type'] !== 'log' && min_val < 0 && !scaleArgs.is_time_series) {\n    min_val = min_val - (min_val - min_val * args.inflator) * use_inflator;\n  }\n\n  if (!scaleArgs.is_time_series) {\n    max_val = (max_val < 0) ? max_val + (max_val - max_val * args.inflator) * use_inflator : max_val * (use_inflator ? args.inflator : 1);\n  }\n\n  min_val = args['min_' + namespace] || min_val;\n  max_val = args['max_' + namespace] || max_val;\n  // if there's a single data point, we should custom-set the min and max values.\n\n  if (min_val === max_val && !(args['min_' + namespace] && args['max_' + namespace])) {\n\n    if (mg_is_date(min_val)) {\n      max_val = new Date(MG.clone(min_val).setDate(min_val.getDate() + 1));\n      min_val = new Date(MG.clone(min_val).setDate(min_val.getDate() - 1));\n    } else if (typeof min_val === 'number') {\n      min_val = min_val - 1;\n      max_val = min_val + 1;\n      mg_force_xax_count_to_be_two(args);\n    }\n  }\n\n  args.processed['min_' + namespace] = min_val;\n  args.processed['max_' + namespace] = max_val;\n\n  MG.call_hook('x_axis.process_min_max', args, args.processed.min_x, args.processed.max_x);\n  MG.call_hook('y_axis.process_min_max', args, args.processed.min_y, args.processed.max_y);\n}\n\nfunction mg_categorical_group_color_scale(args) {\n  if (args.color_accessor !== false) {\n    if (args.ygroup_accessor) {\n      // add a custom accessor element.\n      if (args.color_accessor === null) {\n        args.color_accessor = args.y_accessor;\n      } else {}\n    }\n    if (args.color_accessor !== null) {\n      new MG.scale_factory(args)\n        .namespace('color')\n        .categoricalDomainFromData()\n        .categoricalColorRange();\n    }\n  }\n}\n\nfunction mg_add_color_categorical_scale(args, domain, accessor) {\n  args.scales.color = d3.scaleOrdinal(d3.schemeCategory20).domain(domain);\n  args.scalefns.color = function(d) {\n    return args.scales.color(d[accessor]);\n  };\n}\n\nfunction mg_get_categorical_domain(data, accessor) {\n  return d3.set(data.map(function(d) {\n      return d[accessor]; }))\n    .values();\n}\n\nfunction mg_get_color_domain(args) {\n  var color_domain;\n  if (args.color_domain === null) {\n    if (args.color_type === 'number') {\n      color_domain = d3.extent(args.data[0], function(d) {\n        return d[args.color_accessor]; });\n    } else if (args.color_type === 'category') {\n      color_domain = mg_get_categorical_domain(args.data[0], args.color_accessor);\n\n    }\n  } else {\n    color_domain = args.color_domain;\n  }\n  return color_domain;\n}\n\nfunction mg_get_color_range(args) {\n  var color_range;\n  if (args.color_range === null) {\n    if (args.color_type === 'number') {\n      color_range = ['blue', 'red'];\n    } else {\n      color_range = null;\n    }\n  } else {\n    color_range = args.color_range;\n  }\n  return color_range;\n}\n\nfunction processScaleTicks (args, axis) {\n  var accessor = args[axis + '_accessor'];\n  var scale_ticks = args.scales[axis.toUpperCase()].ticks(args[axis + 'ax_count']);\n  var max = args.processed['max_' + axis];\n\n  function log10 (val) {\n    if (val === 1000) {\n      return 3;\n    }\n    if (val === 1000000) {\n      return 7;\n    }\n    return Math.log(val) / Math.LN10;\n  }\n\n  if (args[axis + '_scale_type'] === 'log') {\n    // get out only whole logs\n    scale_ticks = scale_ticks.filter(function (d) {\n      return Math.abs(log10(d)) % 1 < 1e-6 || Math.abs(log10(d)) % 1 > 1 - 1e-6;\n    });\n  }\n\n  // filter out fraction ticks if our data is ints and if xmax > number of generated ticks\n  var number_of_ticks = scale_ticks.length;\n\n  // is our data object all ints?\n  var data_is_int = true;\n  args.data.forEach(function (d, i) {\n    d.forEach(function (d, i) {\n      if (d[accessor] % 1 !== 0) {\n        data_is_int = false;\n        return false;\n      }\n    });\n  });\n\n  if (data_is_int && number_of_ticks > max && args.format === 'count') {\n    // remove non-integer ticks\n    scale_ticks = scale_ticks.filter(function (d) {\n      return d % 1 === 0;\n    });\n  }\n  args.processed[axis + '_ticks'] = scale_ticks;\n}\n\nfunction rugPlacement (args, axisArgs) {\n  var position = axisArgs.position;\n  var ns = axisArgs.namespace;\n  var coordinates = {};\n  if (position === 'left') {\n    coordinates.x1 = mg_get_left(args) + 1;\n    coordinates.x2 = mg_get_left(args) + args.rug_buffer_size;\n    coordinates.y1 = args.scalefns[ns + 'f'];\n    coordinates.y2 = args.scalefns[ns + 'f'];\n  }\n  if (position === 'right') {\n    coordinates.x1 = mg_get_right(args) - 1,\n    coordinates.x2 = mg_get_right(args) - args.rug_buffer_size,\n    coordinates.y1 = args.scalefns[ns + 'f'];\n    coordinates.y2 = args.scalefns[ns + 'f'];\n  }\n  if (position === 'top') {\n    coordinates.x1 = args.scalefns[ns + 'f'];\n    coordinates.x2 = args.scalefns[ns + 'f'];\n    coordinates.y1 = mg_get_top(args) + 1;\n    coordinates.y2 = mg_get_top(args) + args.rug_buffer_size;\n  }\n  if (position === 'bottom') {\n    coordinates.x1 = args.scalefns[ns + 'f'];\n    coordinates.x2 = args.scalefns[ns + 'f'];\n    coordinates.y1 = mg_get_bottom(args) - 1;\n    coordinates.y2 = mg_get_bottom(args) - args.rug_buffer_size;\n  }\n  return coordinates;\n}\n\nfunction rimPlacement (args, axisArgs) {\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var tick_length = args.processed[ns + '_ticks'].length;\n  var ticks = args.processed[ns + '_ticks'];\n  var scale = args.scales[ns.toUpperCase()];\n  var coordinates = {};\n\n  if (position === 'left') {\n    coordinates.x1 = mg_get_left(args);\n    coordinates.x2 = mg_get_left(args);\n    coordinates.y1 = scale(ticks[0]).toFixed(2);\n    coordinates.y2 = scale(ticks[tick_length - 1]).toFixed(2);\n  }\n  if (position === 'right') {\n    coordinates.x1 = mg_get_right(args);\n    coordinates.x2 = mg_get_right(args);\n    coordinates.y1 = scale(ticks[0]).toFixed(2);\n    coordinates.y2 = scale(ticks[tick_length - 1]).toFixed(2);\n  }\n  if (position === 'top') {\n    coordinates.x1 = mg_get_left(args);\n    coordinates.x2 = mg_get_right(args);\n    coordinates.y1 = mg_get_top(args);\n    coordinates.y2 = mg_get_top(args);\n  }\n  if (position === 'bottom') {\n    coordinates.x1 = mg_get_left(args);\n    coordinates.x2 = mg_get_right(args);\n    coordinates.y1 = mg_get_bottom(args);\n    coordinates.y2 = mg_get_bottom(args);\n  }\n\n  if (position === 'left' || position === 'right') {\n    if (args.axes_not_compact) {\n      coordinates.y1 = mg_get_bottom(args);\n      coordinates.y2 = mg_get_top(args);\n    } else if (tick_length) {\n      coordinates.y1 = scale(ticks[0]).toFixed(2);\n      coordinates.y2 = scale(ticks[tick_length - 1]).toFixed(2);\n    }\n  }\n\n  return coordinates;\n}\n\nfunction labelPlacement (args, axisArgs) {\n  var position = axisArgs.position;\n  var ns = axisArgs.namespace;\n  var tickLength = args[ns + 'ax_tick_length'];\n  var scale = args.scales[ns.toUpperCase()];\n  var coordinates = {};\n\n  if (position === 'left') {\n    coordinates.x = mg_get_left(args) - tickLength * 3 / 2;\n    coordinates.y = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.dx = -3;\n    coordinates.dy = '.35em';\n    coordinates.textAnchor = 'end';\n    coordinates.text = function (d) {\n      return mg_compute_yax_format(args)(d);\n    };\n  }\n  if (position === 'right') {\n    coordinates.x = mg_get_right(args) + tickLength * 3 / 2;\n    coordinates.y = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.dx = 3;\n    coordinates.dy = '.35em';\n    coordinates.textAnchor = 'start';\n    coordinates.text = function (d) {\n      return mg_compute_yax_format(args)(d); };\n  }\n  if (position === 'top') {\n    coordinates.x = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.y = (mg_get_top(args) - tickLength * 7 / 3).toFixed(2);\n    coordinates.dx = 0;\n    coordinates.dy = '0em';\n    coordinates.textAnchor = 'middle';\n    coordinates.text = function (d) {\n      return mg_default_xax_format(args)(d);\n    };\n  }\n  if (position === 'bottom') {\n    coordinates.x = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.y = (mg_get_bottom(args) + tickLength * 7 / 3).toFixed(2);\n    coordinates.dx = 0;\n    coordinates.dy = '.50em';\n    coordinates.textAnchor = 'middle';\n    coordinates.text = function (d) {\n      return mg_default_xax_format(args)(d);\n    };\n  }\n\n  return coordinates;\n}\n\nfunction selectXaxFormat (args) {\n  var c = args.chart_type;\n  if (!args.processed.xax_format) {\n    if (args.xax_format) {\n      args.processed.xax_format = args.xax_format;\n    } else {\n      if (c === 'line' || c === 'point' || c === 'histogram') {\n        args.processed.xax_format = mg_default_xax_format(args);\n      } else if (c === 'bar') {\n        args.processed.xax_format = mg_default_bar_xax_format(args);\n      }\n    }\n  }\n}\n\nfunction secondaryLabels (g, args, axisArgs) {\n  if (args.time_series && (args.show_years || args.show_secondary_x_label)) {\n    var tf = mg_get_yformat_and_secondary_time_function(args);\n    addSecondaryLabelElements(args, axisArgs, g, tf.timeframe, tf.yformat, tf.secondary);\n  }\n}\n\nfunction addSecondaryLabelElements (args, axisArgs, g, time_frame, yformat, secondary_function) {\n  var years = secondary_function(args.processed.min_x, args.processed.max_x);\n  if (years.length === 0) {\n    var first_tick = args.scales.X.ticks(args.xax_count)[0];\n    years = [first_tick];\n  }\n\n  var yg = mg_add_g(g, 'mg-year-marker');\n  if (time_frame === 'default' && args.show_year_markers) {\n    yearMarkerLine(args, axisArgs, yg, years, yformat);\n  }\n  if (time_frame != 'years') yearMarkerText(args, axisArgs, yg, years, yformat);\n}\n\nfunction yearMarkerLine (args, axisArgs, g, years, yformat) {\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('line')\n    .attr('x1', function (d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('x2', function (d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('y1', mg_get_top(args))\n    .attr('y2', mg_get_bottom(args));\n}\n\nfunction yearMarkerText (args, axisArgs, g, years, yformat) {\n  var position = axisArgs.position;\n  var ns = axisArgs.namespace;\n  var scale = args.scales[ns.toUpperCase()];\n  var x, y, dy, textAnchor, textFcn;\n  var xAxisTextElement = d3.select(args.target)\n    .select('.mg-x-axis text').node().getBoundingClientRect();\n\n  if (position === 'top') {\n    x = function (d, i) {\n      return scale(d).toFixed(2); };\n    y = (mg_get_top(args) - args.xax_tick_length * 7 / 3) - (xAxisTextElement.height);\n    dy = '.50em';\n    textAnchor = 'middle';\n    textFcn = function (d) {\n      return yformat(new Date(d)); };\n  }\n  if (position === 'bottom') {\n    x = function (d, i) {\n      return scale(d).toFixed(2); };\n    y = (mg_get_bottom(args) + args.xax_tick_length * 7 / 3) + (xAxisTextElement.height * 0.8);\n    dy = '.50em';\n    textAnchor = 'middle';\n    textFcn = function (d) {\n      return yformat(new Date(d)); };\n  }\n\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('text')\n    .attr('x', x)\n    .attr('y', y)\n    .attr('dy', dy)\n    .attr('text-anchor', textAnchor)\n    .text(textFcn);\n}\n\nfunction addNumericalLabels (g, args, axisArgs) {\n  var ns = axisArgs.namespace;\n  var coords = labelPlacement(args, axisArgs);\n  var ticks = args.processed[ns + '_ticks'];\n\n  var labels = g.selectAll('.mg-yax-labels')\n    .data(ticks).enter()\n    .append('text')\n    .attr('x', coords.x)\n    .attr('dx', coords.dx)\n    .attr('y', coords.y)\n    .attr('dy', coords.dy)\n    .attr('text-anchor', coords.textAnchor)\n    .text(coords.text);\n\n  // move the labels if they overlap\n  if (ns == 'x') {\n    selectXaxFormat(args);\n    if (args.time_series && args.european_clock) {\n      labels.append('tspan').classed('mg-european-hours', true).text(function (_d, i) {\n        var d = new Date(_d);\n        if (i === 0) return d3.timeFormat('%H')(d);\n        else return '';\n      });\n      labels.append('tspan').classed('mg-european-minutes-seconds', true).text(function (_d, i) {\n        var d = new Date(_d);\n        return ':' + args.processed.xax_format(d);\n      });\n    } else {\n      labels.text(function (d) {\n        return args.xax_units + args.processed.xax_format(d);\n      });\n    }\n    secondaryLabels(g, args, axisArgs);\n  }\n\n  if (mg_elements_are_overlapping(labels)) {\n    labels.filter(function (d, i) {\n      return (i + 1) % 2 === 0;\n    }).remove();\n\n    var svg = mg_get_svg_child_of(args.target);\n    svg.selectAll('.mg-' + ns + 'ax-ticks').filter(function (d, i) {\n      return (i + 1) % 2 === 0; })\n      .remove();\n  }\n}\n\nfunction addTickLines (g, args, axisArgs) {\n  // name\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var scale = args.scales[ns.toUpperCase()];\n\n  var ticks = args.processed[ns + '_ticks'];\n  var ticksClass = 'mg-' + ns + 'ax-ticks';\n  var extendedTicksClass = 'mg-extended-' + ns + 'ax-ticks';\n  var extendedTicks = args[ns + '_extended_ticks'];\n  var tickLength = args[ns + 'ax_tick_length'];\n\n  var x1, x2, y1, y2;\n\n  if (position === 'left') {\n    x1 = mg_get_left(args);\n    x2 = extendedTicks ? mg_get_right(args) : mg_get_left(args) - tickLength;\n    y1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n  }\n  if (position === 'right') {\n    x1 = mg_get_right(args);\n    x2 = extendedTicks ? mg_get_left(args) : mg_get_right(args) + tickLength;\n    y1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n  }\n  if (position === 'top') {\n    x1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    x2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y1 = mg_get_top(args);\n    y2 = extendedTicks ? mg_get_bottom(args) : mg_get_top(args) - tickLength;\n  }\n  if (position === 'bottom') {\n    x1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    x2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y1 = mg_get_bottom(args);\n    y2 = extendedTicks ? mg_get_top(args) : mg_get_bottom(args) + tickLength;\n  }\n\n  g.selectAll('.' + ticksClass)\n    .data(ticks).enter()\n    .append('line')\n    .classed(extendedTicksClass, extendedTicks)\n    .attr('x1', x1)\n    .attr('x2', x2)\n    .attr('y1', y1)\n    .attr('y2', y2);\n}\n\nfunction initializeAxisRim (g, args, axisArgs) {\n  var namespace = axisArgs.namespace;\n  var tick_length = args.processed[namespace + '_ticks'].length;\n\n  var rim = rimPlacement(args, axisArgs);\n\n  if (!args[namespace + '_extended_ticks'] && !args[namespace + '_extended_ticks'] && tick_length) {\n    g.append('line')\n      .attr('x1', rim.x1)\n      .attr('x2', rim.x2)\n      .attr('y1', rim.y1)\n      .attr('y2', rim.y2);\n  }\n}\n\nfunction initializeRug (args, rug_class) {\n  var svg = mg_get_svg_child_of(args.target);\n  var all_data = mg_flatten_array(args.data);\n  var rug = svg.selectAll('line.' + rug_class).data(all_data);\n\n  // set the attributes that do not change after initialization, per\n  rug.enter().append('svg:line').attr('class', rug_class).attr('opacity', 0.3);\n\n  // remove rug elements that are no longer in use\n  mg_exit_and_remove(rug);\n\n  // set coordinates of new rug elements\n  mg_exit_and_remove(rug);\n  return rug;\n}\n\nfunction rug (args, axisArgs) {\n  'use strict';\n  args.rug_buffer_size = args.chart_type === 'point' ? args.buffer / 2 : args.buffer * 2 / 3;\n\n  var rug = initializeRug(args, 'mg-' + axisArgs.namespace + '-rug');\n  var rug_positions = rugPlacement(args, axisArgs);\n  rug.attr('x1', rug_positions.x1)\n    .attr('x2', rug_positions.x2)\n    .attr('y1', rug_positions.y1)\n    .attr('y2', rug_positions.y2);\n\n  mg_add_color_accessor_to_rug(rug, args, 'mg-' + axisArgs.namespace + '-rug-mono');\n}\n\nfunction categoricalLabelPlacement (args, axisArgs, group) {\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var scale = args.scales[ns.toUpperCase()];\n  var groupScale = args.scales[(ns + 'group').toUpperCase()];\n  var coords = {};\n  coords.cat = {};\n  coords.group = {};\n  // x, y, dy, text-anchor\n\n  if (position === 'left') {\n    coords.cat.x = mg_get_plot_left(args) - args.buffer;\n    coords.cat.y = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = 'end';\n    coords.group.x = mg_get_plot_left(args) - args.buffer;\n    coords.group.y = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 : 0);\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = args['rotate_' + ns + '_labels'] ? 'end' : 'end';\n  }\n\n  if (position === 'right') {\n    coords.cat.x = mg_get_plot_right(args) - args.buffer;\n    coords.cat.y = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = 'start';\n    coords.group.x = mg_get_plot_right(args) - args.buffer;\n    coords.group.y = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 : 0);\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = 'start';\n  }\n\n  if (position === 'top') {\n    coords.cat.x = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.y = mg_get_plot_top(args) + args.buffer;\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n    coords.group.x = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 : 0);\n    coords.group.y = mg_get_plot_top(args) + args.buffer;\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n  }\n\n  if (position === 'bottom') {\n    coords.cat.x = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.y = mg_get_plot_bottom(args) + args.buffer;\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n    coords.group.x = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 - scale.bandwidth() / 2 : 0);\n    coords.group.y = mg_get_plot_bottom(args) + args.buffer;\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n  }\n\n  return coords;\n}\n\nfunction categoricalLabels (args, axisArgs) {\n  var ns = axisArgs.namespace;\n  var nsClass = 'mg-' + ns + '-axis';\n  var scale = args.scales[ns.toUpperCase()];\n  var groupScale = args.scales[(ns + 'group').toUpperCase()];\n  var groupAccessor = ns + 'group_accessor';\n\n  var svg = mg_get_svg_child_of(args.target);\n  mg_selectAll_and_remove(svg, '.' + nsClass);\n  var g = mg_add_g(svg, nsClass);\n  var group_g;\n  var groups = groupScale.domain && groupScale.domain()\n    ? groupScale.domain()\n    : ['1'];\n\n  groups.forEach(function (group) {\n    // grab group placement stuff.\n    var coords = categoricalLabelPlacement(args, axisArgs, group);\n\n    group_g = mg_add_g(g, 'mg-group-' + mg_normalize(group));\n    if (args[groupAccessor] !== null) {\n      var labels = group_g.append('text')\n        .classed('mg-barplot-group-label', true)\n        .attr('x', coords.group.x)\n        .attr('y', coords.group.y)\n        .attr('dy', coords.group.dy)\n        .attr('text-anchor', coords.group.textAnchor)\n        .text(group);\n\n    } else {\n      var labels = group_g.selectAll('text')\n        .data(scale.domain())\n        .enter()\n        .append('text')\n        .attr('x', coords.cat.x)\n        .attr('y', coords.cat.y)\n        .attr('dy', coords.cat.dy)\n        .attr('text-anchor', coords.cat.textAnchor)\n        .text(String);\n    }\n    if (args['rotate_' + ns + '_labels']) {\n      rotateLabels(labels, args['rotate_' + ns + '_labels']);\n    }\n  });\n}\n\nfunction categoricalGuides (args, axisArgs) {\n  // for each group\n  // for each data point\n\n  var ns = axisArgs.namespace;\n  var scalef = args.scalefns[ns + 'f'];\n  var groupf = args.scalefns[ns + 'groupf'];\n  var groupScale = args.scales[(ns + 'group').toUpperCase()];\n  var scale = args.scales[ns.toUpperCase()];\n  var position = axisArgs.position;\n\n  var svg = mg_get_svg_child_of(args.target);\n  var alreadyPlotted = [];\n\n  var x1, x2, y1, y2;\n  var grs = (groupScale.domain && groupScale.domain()) ? groupScale.domain() : [null];\n\n  mg_selectAll_and_remove(svg, '.mg-category-guides');\n  var g = mg_add_g(svg, 'mg-category-guides');\n\n  grs.forEach(function (group) {\n    scale.domain().forEach(function (cat) {\n      if (position === 'left' || position === 'right') {\n        x1 = mg_get_plot_left(args);\n        x2 = mg_get_plot_right(args);\n        y1 = scale(cat) + groupScale(group) + scale.bandwidth() / 2;\n        y2 = scale(cat) + groupScale(group) + scale.bandwidth() / 2;\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        x1 = scale(cat) + groupScale(group) + scale.bandwidth() / 2 * (group === null);\n        x2 = scale(cat) + groupScale(group) + scale.bandwidth() / 2 * (group === null);\n        y1 = mg_get_plot_bottom(args);\n        y2 = mg_get_plot_top(args);\n      }\n\n      g.append('line')\n        .attr('x1', x1)\n        .attr('x2', x2)\n        .attr('y1', y1)\n        .attr('y2', y2)\n        .attr('stroke-dasharray', '2,1');\n    });\n\n    var first = groupScale(group) + scale(scale.domain()[0]) + scale.bandwidth() / 2 * (group === null || (position !== 'top' && position != 'bottom'));\n    var last = groupScale(group) + scale(scale.domain()[scale.domain().length - 1]) + scale.bandwidth() / 2 * (group === null || (position !== 'top' && position != 'bottom'));\n\n    if (position === 'left' || position === 'right') {\n      x11 = mg_get_plot_left(args);\n      x21 = mg_get_plot_left(args);\n      y11 = first;\n      y21 = last;\n\n      x12 = mg_get_plot_right(args);\n      x22 = mg_get_plot_right(args);\n      y12 = first;\n      y22 = last;\n    }\n\n    if (position === 'bottom' || position === 'top') {\n      x11 = first;\n      x21 = last;\n      y11 = mg_get_plot_bottom(args);\n      y21 = mg_get_plot_bottom(args);\n\n      x12 = first;\n      x22 = last;\n      y12 = mg_get_plot_top(args);\n      y22 = mg_get_plot_top(args);\n    }\n\n    g.append('line')\n      .attr('x1', x11)\n      .attr('x2', x21)\n      .attr('y1', y11)\n      .attr('y2', y21)\n      .attr('stroke-dasharray', '2,1');\n\n    g.append('line')\n      .attr('x1', x12)\n      .attr('x2', x22)\n      .attr('y1', y12)\n      .attr('y2', y22)\n      .attr('stroke-dasharray', '2,1');\n  });\n}\n\nfunction rotateLabels (labels, rotation_degree) {\n  if (rotation_degree) {\n    labels.attr('transform', function () {\n      var elem = d3.select(this);\n      return 'rotate(' + rotation_degree + ' ' + elem.attr('x') + ',' + elem.attr('y') + ')';\n    });\n\n  }\n}\n\nfunction zeroLine (args, axisArgs) {\n  var svg = mg_get_svg_child_of(args.target);\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var scale = args.scales[ns.toUpperCase()];\n  var x1, x2, y1, y2;\n  if (position === 'left' || position === 'right') {\n    x1 = mg_get_plot_left(args);\n    x2 = mg_get_plot_right(args);\n    y1 = scale(0) + 1;\n    y2 = scale(0) + 1;\n  }\n  if (position === 'bottom' || position === 'top') {\n    y1 = mg_get_plot_top(args);\n    y2 = mg_get_plot_bottom(args);\n    x1 = scale(0) - 1;\n    x2 = scale(0) - 1;\n  }\n\n  svg.append('line')\n    .attr('x1', x1)\n    .attr('x2', x2)\n    .attr('y1', y1)\n    .attr('y2', y2)\n    .attr('stroke', 'black');\n}\n\nvar mgDrawAxis = {};\n\nmgDrawAxis.categorical = function (args, axisArgs) {\n  var ns = axisArgs.namespace;\n\n  categoricalLabels(args, axisArgs);\n  categoricalGuides(args, axisArgs);\n};\n\nmgDrawAxis.numerical = function (args, axisArgs) {\n  var namespace = axisArgs.namespace;\n  var axisName = namespace + '_axis';\n  var axisClass = 'mg-' + namespace + '-axis';\n  var svg = mg_get_svg_child_of(args.target);\n\n  mg_selectAll_and_remove(svg, '.' + axisClass);\n\n  if (!args[axisName]) {\n    return this;\n  }\n\n  var g = mg_add_g(svg, axisClass);\n\n  processScaleTicks(args, namespace);\n  initializeAxisRim(g, args, axisArgs);\n  addTickLines(g, args, axisArgs);\n  addNumericalLabels(g, args, axisArgs);\n\n  // add label\n  if (args[namespace + '_label']) {\n    axisArgs.label(svg.select('.mg-' + namespace + '-axis'), args);\n  }\n\n  // add rugs\n  if (args[namespace + '_rug']) {\n    rug(args, axisArgs);\n  }\n\n  if (args.show_bar_zero) {\n    mg_bar_add_zero_line(args);\n  }\n\n  return this;\n};\n\nfunction axisFactory (args) {\n  var axisArgs = {};\n  axisArgs.type = 'numerical';\n\n  this.namespace = function (ns) {\n    // take the ns in the scale, and use it to\n    axisArgs.namespace = ns;\n    return this;\n  };\n\n  this.rug = function (tf) {\n    axisArgs.rug = tf;\n    return this;\n  };\n\n  this.label = function (tf) {\n    axisArgs.label = tf;\n    return this;\n  };\n\n  this.type = function (t) {\n    axisArgs.type = t;\n    return this;\n  };\n\n  this.position = function (pos) {\n    axisArgs.position = pos;\n    return this;\n  };\n\n  this.zeroLine = function (tf) {\n    axisArgs.zeroLine = tf;\n    return this;\n  };\n\n  this.draw = function () {\n    mgDrawAxis[axisArgs.type](args, axisArgs);\n    return this;\n  };\n\n  return this;\n\n}\n\nMG.axis_factory = axisFactory;\n\n/* ================================================================================ */\n/* ================================================================================ */\n/* ================================================================================ */\n\nfunction y_rug (args) {\n  'use strict';\n\n  if (!args.y_rug) {\n    return;\n  }\n\n  args.rug_buffer_size = args.chart_type === 'point'\n    ? args.buffer / 2\n    : args.buffer * 2 / 3;\n\n  var rug = mg_make_rug(args, 'mg-y-rug');\n\n  rug.attr('x1', args.left + 1)\n    .attr('x2', args.left + args.rug_buffer_size)\n    .attr('y1', args.scalefns.yf)\n    .attr('y2', args.scalefns.yf);\n\n  mg_add_color_accessor_to_rug(rug, args, 'mg-y-rug-mono');\n}\n\nMG.y_rug = y_rug;\n\nfunction mg_change_y_extents_for_bars (args, my) {\n  if (args.chart_type === 'bar') {\n    my.min = 0;\n    my.max = d3.max(args.data[0], function (d) {\n      var trio = [];\n      trio.push(d[args.y_accessor]);\n\n      if (args.baseline_accessor !== null) {\n        trio.push(d[args.baseline_accessor]);\n      }\n\n      if (args.predictor_accessor !== null) {\n        trio.push(d[args.predictor_accessor]);\n      }\n\n      return Math.max.apply(null, trio);\n    });\n  }\n  return my;\n}\n\nfunction mg_compute_yax_format (args) {\n  var yax_format = args.yax_format;\n  if (!yax_format) {\n    if (args.format === 'count') {\n      // increase decimals if we have small values, useful for realtime data\n      if (args.processed.max_y < 0.0001) {\n        args.decimals = 6;\n      } else if (args.processed.max_y < 0.1) {\n        args.decimals = 4;\n      }\n\n      yax_format = function (d) {\n        var pf;\n\n        if (d < 1.0 && d > -1.0 && d !== 0) {\n          // don't scale tiny values\n          pf = d3.format(',.' + args.decimals + 'f');\n        } else if (d < 1000) {\n          pf = d3.format(',.0f');\n        } else {\n          pf = d3.format(',.2s');\n        }\n\n        // are we adding units after the value or before?\n        if (args.yax_units_append) {\n          return pf(d) + args.yax_units;\n        } else {\n          return args.yax_units + pf(d);\n        }\n      };\n    } else { // percentage\n      yax_format = function (d_) {\n        var n = d3.format('.0%');\n        return n(d_);\n      };\n    }\n  }\n  return yax_format;\n}\n\nfunction mg_bar_add_zero_line (args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var extents = args.scales.X.domain();\n  if (0 >= extents[0] && extents[1] >= 0) {\n    var r = args.scales.Y.range();\n    var g = args.categorical_groups.length\n      ? args.scales.YGROUP(args.categorical_groups[args.categorical_groups.length - 1])\n      : args.scales.YGROUP();\n\n    svg.append('svg:line')\n      .attr('x1', args.scales.X(0))\n      .attr('x2', args.scales.X(0))\n      .attr('y1', r[0] + mg_get_plot_top(args))\n      .attr('y2', r[r.length - 1] + g)\n      .attr('stroke', 'black')\n      .attr('opacity', .2);\n  }\n}\n\nfunction set_min_max_y (args) {\n  // flatten data\n  // remove weird data, if log.\n  var data = mg_flatten_array(args.data);\n\n  if (args.y_scale_type === 'log') {\n    data = data.filter(function (d) {\n      return d[args.y_accessor] > 0;\n    });\n  }\n\n  if (args.baselines) {\n    data = data.concat(args.baselines);\n  }\n\n  var extents = d3.extent(data, function (d) {\n    return d[args.y_accessor];\n  });\n\n  var my = {};\n  my.min = extents[0];\n  my.max = extents[1];\n  // the default case is for the y-axis to start at 0, unless we explicitly want it\n  // to start at an arbitrary number or from the data's minimum value\n  if (my.min >= 0 && !args.min_y && !args.min_y_from_data) {\n    my.min = 0;\n  }\n\n  mg_change_y_extents_for_bars(args, my);\n  my.min = (args.min_y !== null) ? args.min_y : my.min;\n\n  my.max = (args.max_y !== null) ? args.max_y : (my.max < 0) ? my.max + (my.max - my.max * args.inflator) : my.max * args.inflator;\n\n  if (args.y_scale_type !== 'log' && my.min < 0) {\n    my.min = my.min - (my.min - my.min * args.inflator);\n  }\n\n  if (!args.min_y && args.min_y_from_data) {\n    var buff = (my.max - my.min) * .01;\n    my.min = extents[0] - buff;\n    my.max = extents[1] + buff;\n  }\n  args.processed.min_y = my.min;\n  args.processed.max_y = my.max;\n}\n\nfunction mg_y_domain_range (args, scale) {\n  scale.domain([args.processed.min_y, args.processed.max_y])\n    .range([mg_get_plot_bottom(args), args.top]);\n  return scale;\n}\n\nfunction mg_define_y_scales (args) {\n  var scale = args.y_scale_type === 'log' ? d3.scaleLog() : d3.scaleLinear();\n  if (args.y_scale_type === 'log') {\n    if (args.chart_type === 'histogram') {\n      // log histogram plots should start just below 1\n      // so that bins with single counts are visible\n      args.processed.min_y = 0.2;\n    } else {\n      if (args.processed.min_y <= 0) {\n        args.processed.min_y = 1;\n      }\n    }\n  }\n  args.scales.Y = mg_y_domain_range(args, scale);\n  args.scales.Y.clamp(args.y_scale_type === 'log');\n\n  // used for ticks and such, and designed to be paired with log or linear\n  args.scales.Y_axis = mg_y_domain_range(args, d3.scaleLinear());\n}\n\nfunction mg_add_y_label (g, args) {\n  if (args.y_label) {\n    g.append('text')\n      .attr('class', 'label')\n      .attr('x', function () {\n        return -1 * (mg_get_plot_top(args) +\n        ((mg_get_plot_bottom(args)) - (mg_get_plot_top(args))) / 2);\n      })\n      .attr('y', function () {\n        return args.left / 2;\n      })\n      .attr('dy', '0.4em')\n      .attr('text-anchor', 'middle')\n      .text(function (d) {\n        return args.y_label;\n      })\n      .attr('transform', function (d) {\n        return 'rotate(-90)';\n      });\n  }\n}\n\nfunction mg_add_y_axis_rim (g, args) {\n  var tick_length = args.processed.y_ticks.length;\n  if (!args.x_extended_ticks && !args.y_extended_ticks && tick_length) {\n    var y1scale, y2scale;\n\n    if (args.axes_not_compact && args.chart_type !== 'bar') {\n      y1scale = args.height - args.bottom;\n      y2scale = args.top;\n    } else if (tick_length) {\n      y1scale = args.scales.Y(args.processed.y_ticks[0]).toFixed(2);\n      y2scale = args.scales.Y(args.processed.y_ticks[tick_length - 1]).toFixed(2);\n    } else {\n      y1scale = 0;\n      y2scale = 0;\n    }\n\n    g.append('line')\n      .attr('x1', args.left)\n      .attr('x2', args.left)\n      .attr('y1', y1scale)\n      .attr('y2', y2scale);\n  }\n}\n\nfunction mg_add_y_axis_tick_lines (g, args) {\n  g.selectAll('.mg-yax-ticks')\n    .data(args.processed.y_ticks).enter()\n    .append('line')\n    .classed('mg-extended-yax-ticks', args.y_extended_ticks)\n    .attr('x1', args.left)\n    .attr('x2', function () {\n      return (args.y_extended_ticks) ? args.width - args.right : args.left - args.yax_tick_length;\n    })\n    .attr('y1', function (d) {\n      return args.scales.Y(d).toFixed(2);\n    })\n    .attr('y2', function (d) {\n      return args.scales.Y(d).toFixed(2);\n    });\n}\n\nfunction mg_add_y_axis_tick_labels (g, args) {\n  var yax_format = mg_compute_yax_format(args);\n  g.selectAll('.mg-yax-labels')\n    .data(args.processed.y_ticks).enter()\n    .append('text')\n    .attr('x', args.left - args.yax_tick_length * 3 / 2)\n    .attr('dx', -3)\n    .attr('y', function (d) {\n      return args.scales.Y(d).toFixed(2);\n    })\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'end')\n    .text(function (d) {\n      var o = yax_format(d);\n      return o;\n    });\n}\n\n// TODO ought to be deprecated, only used by histogram\nfunction y_axis (args) {\n  if (!args.processed) {\n    args.processed = {};\n  }\n\n  var svg = mg_get_svg_child_of(args.target);\n  MG.call_hook('y_axis.process_min_max', args, args.processed.min_y, args.processed.max_y);\n  mg_selectAll_and_remove(svg, '.mg-y-axis');\n\n  if (!args.y_axis) {\n    return this;\n  }\n\n  var g = mg_add_g(svg, 'mg-y-axis');\n  mg_add_y_label(g, args);\n  mg_process_scale_ticks(args, 'y');\n  mg_add_y_axis_rim(g, args);\n  mg_add_y_axis_tick_lines(g, args);\n  mg_add_y_axis_tick_labels(g, args);\n\n  if (args.y_rug) {\n    y_rug(args);\n  }\n\n  return this;\n}\n\nMG.y_axis = y_axis;\n\nfunction mg_add_categorical_labels (args) {\n  var svg = mg_get_svg_child_of(args.target);\n  mg_selectAll_and_remove(svg, '.mg-y-axis');\n  var g = mg_add_g(svg, 'mg-y-axis');\n  var group_g;(args.categorical_groups.length ? args.categorical_groups : ['1']).forEach(function (group) {\n    group_g = mg_add_g(g, 'mg-group-' + mg_normalize(group));\n\n    if (args.ygroup_accessor !== null) {\n      mg_add_group_label(group_g, group, args);\n    } else {\n      var labels = mg_add_graphic_labels(group_g, group, args);\n      mg_rotate_labels(labels, args.rotate_y_labels);\n    }\n  });\n}\n\nfunction mg_add_graphic_labels (g, group, args) {\n  return g.selectAll('text').data(args.scales.Y.domain()).enter().append('svg:text')\n    .attr('x', args.left - args.buffer)\n    .attr('y', function (d) {\n      return args.scales.YGROUP(group) + args.scales.Y(d) + args.scales.Y.bandwidth() / 2;\n    })\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'end')\n    .text(String);\n}\n\nfunction mg_add_group_label (g, group, args) {\n  g.append('svg:text')\n    .classed('mg-barplot-group-label', true)\n    .attr('x', args.left - args.buffer)\n    .attr('y', args.scales.YGROUP(group) + args.scales.YGROUP.bandwidth() / 2)\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'end')\n    .text(group);\n}\n\nfunction mg_draw_group_lines (args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var groups = args.scales.YGROUP.domain();\n  var first = groups[0];\n  var last = groups[groups.length - 1];\n\n  svg.select('.mg-category-guides').selectAll('mg-group-lines')\n    .data(groups)\n    .enter().append('line')\n      .attr('x1', mg_get_plot_left(args))\n      .attr('x2', mg_get_plot_left(args))\n      .attr('y1', function (d) {\n        return args.scales.YGROUP(d);\n      })\n      .attr('y2', function (d) {\n        return args.scales.YGROUP(d) + args.ygroup_height;\n      })\n      .attr('stroke-width', 1);\n}\n\nfunction mg_y_categorical_show_guides (args) {\n  // for each group\n  // for each data point\n  var svg = mg_get_svg_child_of(args.target);\n  var alreadyPlotted = [];\n  args.data[0].forEach(function (d) {\n    if (alreadyPlotted.indexOf(d[args.y_accessor]) === -1) {\n      svg.select('.mg-category-guides').append('line')\n        .attr('x1', mg_get_plot_left(args))\n        .attr('x2', mg_get_plot_right(args))\n        .attr('y1', args.scalefns.yf(d) + args.scalefns.ygroupf(d))\n        .attr('y2', args.scalefns.yf(d) + args.scalefns.ygroupf(d))\n        .attr('stroke-dasharray', '2,1');\n    }\n  });\n}\n\nfunction y_axis_categorical (args) {\n  if (!args.y_axis) {\n    return this;\n  }\n\n  mg_add_categorical_labels(args);\n  // mg_draw_group_scaffold(args);\n  if (args.show_bar_zero) mg_bar_add_zero_line(args);\n  if (args.ygroup_accessor) mg_draw_group_lines(args);\n  if (args.y_categorical_show_guides) mg_y_categorical_show_guides(args);\n  return this;\n}\n\nMG.y_axis_categorical = y_axis_categorical;\n\nfunction x_rug(args) {\n  'use strict';\n\n  if(!args.x_rug) {\n    return;\n  }\n\n  args.rug_buffer_size = args.chart_type === 'point'\n    ? args.buffer / 2\n    : args.buffer;\n\n  var rug = mg_make_rug(args, 'mg-x-rug');\n\n  rug.attr('x1', args.scalefns.xf)\n    .attr('x2', args.scalefns.xf)\n    .attr('y1', args.height - args.bottom - args.rug_buffer_size)\n    .attr('y2', args.height - args.bottom);\n\n  mg_add_color_accessor_to_rug(rug, args, 'mg-x-rug-mono');\n}\n\nMG.x_rug = x_rug;\n\nfunction mg_add_processed_object(args) {\n  if (!args.processed) {\n    args.processed = {};\n  }\n}\n\n// TODO ought to be deprecated, only used by histogram\nfunction x_axis(args) {\n  'use strict';\n\n  var svg = mg_get_svg_child_of(args.target);\n  mg_add_processed_object(args);\n\n  mg_select_xax_format(args);\n  mg_selectAll_and_remove(svg, '.mg-x-axis');\n\n  if (!args.x_axis) {\n    return this;\n  }\n\n  var g = mg_add_g(svg, 'mg-x-axis');\n\n  mg_add_x_ticks(g, args);\n  mg_add_x_tick_labels(g, args);\n  if (args.x_label) { mg_add_x_label(g, args); }\n  if (args.x_rug) { x_rug(args); }\n\n  return this;\n}\n\nMG.x_axis = x_axis;\n\nfunction x_axis_categorical(args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var additional_buffer = 0;\n  if (args.chart_type === 'bar') {\n    additional_buffer = args.buffer + 5;\n  }\n\n  mg_add_categorical_scale(args, 'X', args.categorical_variables.reverse(), args.left, mg_get_plot_right(args) - additional_buffer);\n  mg_add_scale_function(args, 'xf', 'X', 'value');\n  mg_selectAll_and_remove(svg, '.mg-x-axis');\n\n  var g = mg_add_g(svg, 'mg-x-axis');\n\n  if (!args.x_axis) {\n    return this;\n  }\n\n  mg_add_x_axis_categorical_labels(g, args, additional_buffer);\n  return this;\n}\n\nfunction mg_add_x_axis_categorical_labels(g, args, additional_buffer) {\n  var labels = g.selectAll('text')\n    .data(args.categorical_variables)\n    .enter()\n    .append('text');\n\n  labels\n    .attr('x', function(d) {\n      return args.scales.X(d) + args.scales.X.bandwidth() / 2 + (args.buffer) * args.bar_outer_padding_percentage + (additional_buffer / 2);\n    })\n    .attr('y', mg_get_plot_bottom(args))\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'middle')\n    .text(String);\n\n  if (args.truncate_x_labels) {\n    labels.each(function(d, idx) {\n      var elem = this, width = args.scales.X.bandwidth();\n      truncate_text(elem, d, width);\n    });\n  }\n  mg_rotate_labels(labels, args.rotate_x_labels);\n}\n\nMG.x_axis_categorical = x_axis_categorical;\n\nfunction mg_point_add_color_scale(args) {\n  var color_domain, color_range;\n\n  if (args.color_accessor !== null) {\n    color_domain = mg_get_color_domain(args);\n    color_range = mg_get_color_range(args);\n\n    if (args.color_type === 'number') {\n      args.scales.color = d3.scaleLinear()\n        .domain(color_domain)\n        .range(color_range)\n        .clamp(true);\n    } else {\n      args.scales.color = args.color_range !== null\n        ? d3.scaleOrdinal().range(color_range)\n        : (color_domain.length > 10\n          ? d3.scaleOrdinal(d3.schemeCategory20)\n          : d3.scaleOrdinal(d3.schemeCategory10));\n\n      args.scales.color.domain(color_domain);\n    }\n    mg_add_scale_function(args, 'color', 'color', args.color_accessor);\n  }\n}\n\nfunction mg_get_color_domain(args) {\n  var color_domain;\n  if (args.color_domain === null) {\n    if (args.color_type === 'number') {\n      color_domain = d3.extent(args.data[0], function(d) {\n        return d[args.color_accessor];\n      });\n    } else if (args.color_type === 'category') {\n      color_domain = d3.set(args.data[0]\n          .map(function(d) {\n            return d[args.color_accessor];\n        }))\n        .values();\n\n      color_domain.sort();\n    }\n  } else {\n    color_domain = args.color_domain;\n  }\n  return color_domain;\n}\n\nfunction mg_get_color_range(args) {\n  var color_range;\n  if (args.color_range === null) {\n    if (args.color_type === 'number') {\n      color_range = ['blue', 'red'];\n    } else {\n      color_range = null;\n    }\n  } else {\n    color_range = args.color_range;\n  }\n  return color_range;\n}\n\nfunction mg_point_add_size_scale(args) {\n  var min_size, max_size, size_domain, size_range;\n  if (args.size_accessor !== null) {\n    size_domain = mg_get_size_domain(args);\n    size_range = mg_get_size_range(args);\n\n    args.scales.size = d3.scaleLinear()\n      .domain(size_domain)\n      .range(size_range)\n      .clamp(true);\n\n    mg_add_scale_function(args, 'size', 'size', args.size_accessor);\n  }\n}\n\nfunction mg_get_size_domain(args) {\n  return (args.size_domain === null)\n    ? d3.extent(args.data[0], function(d) { return d[args.size_accessor]; })\n    : args.size_domain;\n}\n\nfunction mg_get_size_range(args) {\n  var size_range;\n  if (args.size_range === null) {\n    size_range = [1, 5];\n  } else {\n    size_range = args.size_range;\n  }\n  return size_range;\n}\n\nfunction mg_add_x_label(g, args) {\n  if (args.x_label) {\n    g.append('text')\n      .attr('class', 'label')\n      .attr('x', function() {\n        return mg_get_plot_left(args) + (mg_get_plot_right(args) - mg_get_plot_left(args)) / 2;\n      })\n      .attr('dx', args.x_label_nudge_x != null ? args.x_label_nudge_x : 0)\n      .attr('y', function() {\n        var xAxisTextElement = d3.select(args.target)\n          .select('.mg-x-axis text').node().getBoundingClientRect();\n        return mg_get_bottom(args) + args.xax_tick_length * (7 / 3) + xAxisTextElement.height * 0.8 + 10;\n      })\n      .attr('dy', '.5em')\n      .attr('text-anchor', 'middle')\n      .text(function(d) {\n        return args.x_label;\n      });\n  }\n}\n\nfunction mg_default_bar_xax_format(args) {\n  return function(d) {\n    if (d < 1.0 && d > -1.0 && d !== 0) {\n      // don't scale tiny values\n      return args.xax_units + d.toFixed(args.decimals);\n    } else {\n      var pf = d3.format(',.0f');\n      return args.xax_units + pf(d);\n    }\n  };\n}\n\nfunction mg_get_time_frame(diff) {\n  // diff should be (max_x - min_x) / 1000, in other words, the difference in seconds.\n  var time_frame;\n  if (mg_milisec_diff(diff)) {\n    time_frame = 'millis';\n  } else if (mg_sec_diff(diff)) {\n    time_frame = 'seconds';\n  } else if (mg_day_diff(diff)) {\n    time_frame = 'less-than-a-day';\n  } else if (mg_four_days(diff)) {\n    time_frame = 'four-days';\n  } else if (mg_many_days(diff)) { // a handful of months?\n    time_frame = 'many-days';\n  } else if (mg_many_months(diff)) {\n    time_frame = 'many-months';\n  } else if (mg_years(diff)) {\n    time_frame = 'years';\n  } else {\n    time_frame = 'default';\n  }\n  return time_frame;\n}\n\nfunction mg_milisec_diff(diff) {\n  return diff < 10;\n}\n\nfunction mg_sec_diff(diff) {\n  return diff < 60;\n}\n\nfunction mg_day_diff(diff) {\n  return diff / (60 * 60) <= 24;\n}\n\nfunction mg_four_days(diff) {\n  return diff / (60 * 60) <= 24 * 4;\n}\n\nfunction mg_many_days(diff) {\n  return diff / (60 * 60 * 24) <= 93;\n}\n\nfunction mg_many_months(diff) {\n  return diff / (60 * 60 * 24) < 365 * 2;\n}\n\nfunction mg_years(diff) {\n  return diff / (60 * 60 * 24) >= 365 * 2;\n}\n\nfunction mg_get_time_format(utc, diff) {\n  var main_time_format;\n  if (mg_milisec_diff(diff)) {\n    main_time_format = MG.time_format(utc, '%M:%S.%L');\n  } else if (mg_sec_diff(diff)) {\n    main_time_format = MG.time_format(utc, '%M:%S');\n  } else if (mg_day_diff(diff)) {\n    main_time_format = MG.time_format(utc, '%H:%M');\n  } else if (mg_four_days(diff)) {\n    main_time_format = MG.time_format(utc, '%H:%M');\n  } else if (mg_many_days(diff)) {\n    main_time_format = MG.time_format(utc, '%b %d');\n  } else if (mg_many_months(diff)) {\n    main_time_format = MG.time_format(utc, '%b');\n  } else {\n    main_time_format = MG.time_format(utc, '%Y');\n  }\n  return main_time_format;\n}\n\nfunction mg_process_time_format(args) {\n  var diff;\n  var main_time_format;\n  var time_frame;\n\n  if (args.time_series) {\n    diff = (args.processed.max_x - args.processed.min_x) / 1000;\n    time_frame = mg_get_time_frame(diff);\n    main_time_format = mg_get_time_format(args.utc_time, diff);\n  }\n\n  args.processed.main_x_time_format = main_time_format;\n  args.processed.x_time_frame = time_frame;\n}\n\nfunction mg_default_xax_format(args) {\n  if (args.xax_format) {\n    return args.xax_format;\n  }\n\n  var data = args.processed.original_data || args.data;\n  var flattened = mg_flatten_array(data)[0];\n  var test_point_x = flattened[args.processed.original_x_accessor || args.x_accessor];\n  if (test_point_x === undefined) {\n    test_point_x = flattened;\n  }\n\n  return function(d) {\n    mg_process_time_format(args);\n\n    if (mg_is_date(test_point_x)) {\n      return args.processed.main_x_time_format(new Date(d));\n    } else if (typeof test_point_x === 'number') {\n      var is_float = d % 1 !== 0;\n      var pf;\n\n      if (is_float) {\n        pf = d3.format(',.' + args.decimals + 'f');\n      } else if (d < 1000) {\n        pf = d3.format(',.0f');\n      } else {\n        pf = d3.format(',.2s');\n      }\n      return args.xax_units + pf(d);\n    } else {\n      return args.xax_units + d;\n    }\n  };\n}\n\nfunction mg_add_x_ticks(g, args) {\n  mg_process_scale_ticks(args, 'x');\n  mg_add_x_axis_rim(args, g);\n  mg_add_x_axis_tick_lines(args, g);\n}\n\nfunction mg_add_x_axis_rim(args, g) {\n  var tick_length = args.processed.x_ticks.length;\n  var last_i = args.scales.X.ticks(args.xax_count).length - 1;\n\n  if (!args.x_extended_ticks) {\n    g.append('line')\n      .attr('x1', function() {\n        if (args.xax_count === 0) {\n          return mg_get_plot_left(args);\n        } else if (args.axes_not_compact && args.chart_type !== 'bar') {\n          return args.left;\n        } else {\n          return (args.scales.X(args.scales.X.ticks(args.xax_count)[0])).toFixed(2);\n        }\n      })\n      .attr('x2', function() {\n        if (args.xax_count === 0 || (args.axes_not_compact && args.chart_type !== 'bar')) {\n          return mg_get_right(args);\n        } else {\n          return args.scales.X(args.scales.X.ticks(args.xax_count)[last_i]).toFixed(2);\n        }\n      })\n      .attr('y1', args.height - args.bottom)\n      .attr('y2', args.height - args.bottom);\n  }\n}\n\nfunction mg_add_x_axis_tick_lines(args, g) {\n  g.selectAll('.mg-xax-ticks')\n    .data(args.processed.x_ticks).enter()\n    .append('line')\n    .attr('x1', function(d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('x2', function(d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('y1', args.height - args.bottom)\n    .attr('y2', function() {\n      return (args.x_extended_ticks) ? args.top : args.height - args.bottom + args.xax_tick_length;\n    })\n    .attr('class', function() {\n      if (args.x_extended_ticks) {\n        return 'mg-extended-xax-ticks';\n      }\n    })\n    .classed('mg-xax-ticks', true);\n}\n\nfunction mg_add_x_tick_labels(g, args) {\n  mg_add_primary_x_axis_label(args, g);\n  mg_add_secondary_x_axis_label(args, g);\n}\n\nfunction mg_add_primary_x_axis_label(args, g) {\n  var labels = g.selectAll('.mg-xax-labels')\n    .data(args.processed.x_ticks).enter()\n    .append('text')\n    .attr('x', function(d) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('y', (args.height - args.bottom + args.xax_tick_length * 7 / 3).toFixed(2))\n    .attr('dy', '.50em')\n    .attr('text-anchor', 'middle');\n\n  if (args.time_series && args.european_clock) {\n    labels.append('tspan').classed('mg-european-hours', true).text(function(_d, i) {\n      var d = new Date(_d);\n      if (i === 0) return d3.timeFormat('%H')(d);\n      else return '';\n    });\n    labels.append('tspan').classed('mg-european-minutes-seconds', true).text(function(_d, i) {\n      var d = new Date(_d);\n      return ':' + args.processed.xax_format(d);\n    });\n  } else {\n    labels.text(function(d) {\n      return args.xax_units + args.processed.xax_format(d);\n    });\n  }\n\n  // CHECK TO SEE IF OVERLAP for labels. If so,\n  // remove half of them. This is a dirty hack.\n  // We will need to figure out a more principled way of doing this.\n  if (mg_elements_are_overlapping(labels)) {\n    labels.filter(function(d, i) {\n      return (i + 1) % 2 === 0;\n    }).remove();\n\n    var svg = mg_get_svg_child_of(args.target);\n    svg.selectAll('.mg-xax-ticks')\n      .filter(function(d, i) {\n        return (i + 1) % 2 === 0;\n      })\n      .remove();\n  }\n}\n\nfunction mg_add_secondary_x_axis_label(args, g) {\n  if (args.time_series && (args.show_years || args.show_secondary_x_label)) {\n    var tf = mg_get_yformat_and_secondary_time_function(args);\n    mg_add_secondary_x_axis_elements(args, g, tf.timeframe, tf.yformat, tf.secondary);\n  }\n}\n\nfunction mg_get_yformat_and_secondary_time_function(args) {\n  var tf = {};\n  tf.timeframe = args.processed.x_time_frame;\n  switch (tf.timeframe) {\n    case 'millis':\n    case 'seconds':\n      tf.secondary = d3.timeDays;\n      if (args.european_clock) tf.yformat = MG.time_format(args.utc_time, '%b %d');\n      else tf.yformat = MG.time_format(args.utc_time, '%I %p');\n      break;\n    case 'less-than-a-day':\n      tf.secondary = d3.timeDays;\n      tf.yformat = MG.time_format(args.utc_time, '%b %d');\n      break;\n    case 'four-days':\n      tf.secondary = d3.timeDays;\n      tf.yformat = MG.time_format(args.utc_time, '%b %d');\n      break;\n    case 'many-days':\n      tf.secondary = d3.timeYears;\n      tf.yformat = MG.time_format(args.utc_time, '%Y');\n      break;\n    case 'many-months':\n      tf.secondary = d3.timeYears;\n      tf.yformat = MG.time_format(args.utc_time, '%Y');\n      break;\n    default:\n      tf.secondary = d3.timeYears;\n      tf.yformat = MG.time_format(args.utc_time, '%Y');\n  }\n  return tf;\n}\n\nfunction mg_add_secondary_x_axis_elements(args, g, time_frame, yformat, secondary_function) {\n  var years = secondary_function(args.processed.min_x, args.processed.max_x);\n  if (years.length === 0) {\n    var first_tick = args.scales.X.ticks(args.xax_count)[0];\n    years = [first_tick];\n  }\n\n  var yg = mg_add_g(g, 'mg-year-marker');\n  if (time_frame === 'default' && args.show_year_markers) {\n    mg_add_year_marker_line(args, yg, years, yformat);\n  }\n  if (time_frame != 'years') mg_add_year_marker_text(args, yg, years, yformat);\n}\n\nfunction mg_add_year_marker_line(args, g, years, yformat) {\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('line')\n    .attr('x1', function(d) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('x2', function(d) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('y1', mg_get_top(args))\n    .attr('y2', mg_get_bottom(args));\n}\n\nfunction mg_add_year_marker_text(args, g, years, yformat) {\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('text')\n    .attr('x', function(d, i) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('y', function() {\n      var xAxisTextElement = d3.select(args.target)\n        .select('.mg-x-axis text').node().getBoundingClientRect();\n      return (mg_get_bottom(args) + args.xax_tick_length * 7 / 3) + (xAxisTextElement.height * 0.8);\n    })\n    .attr('dy', '.50em')\n    .attr('text-anchor', 'middle')\n    .text(function(d) {\n      return yformat(new Date(d));\n    });\n}\n\nfunction mg_min_max_x_for_nonbars(mx, args, data) {\n  var extent_x = d3.extent(data, function(d) {\n    return d[args.x_accessor];\n  });\n  mx.min = extent_x[0];\n  mx.max = extent_x[1];\n}\n\nfunction mg_min_max_x_for_bars(mx, args, data) {\n  mx.min = d3.min(data, function(d) {\n    var trio = [\n      d[args.x_accessor],\n      (d[args.baseline_accessor]) ? d[args.baseline_accessor] : 0,\n      (d[args.predictor_accessor]) ? d[args.predictor_accessor] : 0\n    ];\n    return Math.min.apply(null, trio);\n  });\n\n  if (mx.min > 0) mx.min = 0;\n\n  mx.max = d3.max(data, function(d) {\n    var trio = [\n      d[args.x_accessor],\n      (d[args.baseline_accessor]) ? d[args.baseline_accessor] : 0,\n      (d[args.predictor_accessor]) ? d[args.predictor_accessor] : 0\n    ];\n    return Math.max.apply(null, trio);\n  });\n  return mx;\n}\n\nfunction mg_min_max_x_for_dates(mx) {\n  var yesterday = MG.clone(mx.min).setDate(mx.min.getDate() - 1);\n  var tomorrow = MG.clone(mx.min).setDate(mx.min.getDate() + 1);\n  mx.min = yesterday;\n  mx.max = tomorrow;\n}\n\nfunction mg_min_max_x_for_numbers(mx) {\n  // TODO do we want to rewrite this?\n  mx.min = mx.min - 1;\n  mx.max = mx.max + 1;\n}\n\nfunction mg_min_max_x_for_strings(mx) {\n  // TODO shouldn't be allowing strings here to be coerced into numbers\n  mx.min = Number(mx.min) - 1;\n  mx.max = Number(mx.max) + 1;\n}\n\nfunction mg_force_xax_count_to_be_two(args) {\n  args.xax_count = 2;\n}\n\nfunction mg_sort_through_data_type_and_set_x_min_max_accordingly(mx, args, data) {\n  if (args.chart_type === 'line' || args.chart_type === 'point' || args.chart_type === 'histogram') {\n    mg_min_max_x_for_nonbars(mx, args, data);\n\n  } else if (args.chart_type === 'bar') {\n    mg_min_max_x_for_bars(mx, args, data);\n  }\n  // if data set is of length 1, expand the range so that we can build the x-axis\n  if (mx.min === mx.max && !(args.min_x && args.max_x)) {\n    if (mg_is_date(mx.min)) {\n      mg_min_max_x_for_dates(mx);\n    } else if (typeof min_x === 'number') {\n      mg_min_max_x_for_numbers(mx);\n    } else if (typeof min_x === 'string') {\n      mg_min_max_x_for_strings(mx);\n    }\n    // force xax_count to be 2\n    mg_force_xax_count_to_be_two(args);\n  }\n}\n\nfunction mg_select_xax_format(args) {\n  var c = args.chart_type;\n  if (!args.processed.xax_format) {\n    if (args.xax_format) {\n      args.processed.xax_format = args.xax_format;\n    } else {\n      if (c === 'line' || c === 'point' || c === 'histogram') {\n        args.processed.xax_format = mg_default_xax_format(args);\n      } else if (c === 'bar') {\n        args.processed.xax_format = mg_default_bar_xax_format(args);\n      }\n    }\n  }\n}\n\nfunction mg_merge_args_with_defaults(args) {\n  var defaults = {\n    target: null,\n    title: null,\n    description: null\n  };\n\n  if (!args) {\n    args = {};\n  }\n\n  if (!args.processed) {\n    args.processed = {};\n  }\n\n  args = merge_with_defaults(args, defaults);\n  return args;\n}\n\nfunction mg_is_time_series(args) {\n  var first_elem = mg_flatten_array(args.processed.original_data || args.data)[0];\n  args.time_series = mg_is_date(first_elem[args.processed.original_x_accessor || args.x_accessor]);\n}\n\nfunction mg_init_compute_width(args) {\n  var svg_width = args.width;\n  if (args.full_width) {\n    svg_width = get_width(args.target);\n  }\n  if (args.x_axis_type === 'categorical' && svg_width === null) {\n    svg_width = mg_categorical_calculate_height(args, 'x');\n  }\n\n  args.width = svg_width;\n}\n\nfunction mg_init_compute_height(args) {\n  var svg_height = args.height;\n  if (args.full_height) {\n    svg_height = get_height(args.target);\n  }\n  if (args.y_axis_type === 'categorical' && svg_height === null) {\n    svg_height = mg_categorical_calculate_height(args, 'y');\n  }\n\n  args.height = svg_height;\n}\n\nfunction mg_remove_svg_if_chart_type_has_changed(svg, args) {\n  if ((!svg.selectAll('.mg-main-line').empty() && args.chart_type !== 'line') ||\n    (!svg.selectAll('.mg-points').empty() && args.chart_type !== 'point') ||\n    (!svg.selectAll('.mg-histogram').empty() && args.chart_type !== 'histogram') ||\n    (!svg.selectAll('.mg-barplot').empty() && args.chart_type !== 'bar')\n  ) {\n    svg.remove();\n  }\n}\n\nfunction mg_add_svg_if_it_doesnt_exist(svg, args) {\n  if (mg_get_svg_child_of(args.target).empty()) {\n    svg = d3.select(args.target)\n      .append('svg')\n      .classed('linked', args.linked)\n      .attr('width', args.width)\n      .attr('height', args.height);\n  }\n  return svg;\n}\n\nfunction mg_add_clip_path_for_plot_area(svg, args) {\n  svg.selectAll('.mg-clip-path').remove();\n  svg.append('defs')\n    .attr('class', 'mg-clip-path')\n    .append('clipPath')\n    .attr('id', 'mg-plot-window-' + mg_target_ref(args.target))\n    .append('svg:rect')\n    .attr('x', mg_get_left(args))\n    .attr('y', mg_get_top(args))\n    .attr('width', args.width - args.left - args.right - args.buffer)\n    .attr('height', args.height - args.top - args.bottom - args.buffer + 1);\n}\n\nfunction mg_adjust_width_and_height_if_changed(svg, args) {\n  if (args.width !== Number(svg.attr('width'))) {\n    svg.attr('width', args.width);\n  }\n  if (args.height !== Number(svg.attr('height'))) {\n    svg.attr('height', args.height);\n  }\n}\n\nfunction mg_set_viewbox_for_scaling(svg, args) {\n  // we need to reconsider how we handle automatic scaling\n  svg.attr('viewBox', '0 0 ' + args.width + ' ' + args.height);\n  if (args.full_width || args.full_height) {\n    svg.attr('preserveAspectRatio', 'xMinYMin meet');\n  }\n}\n\nfunction mg_remove_missing_classes_and_text(svg) {\n  // remove missing class\n  svg.classed('mg-missing', false);\n\n  // remove missing text\n  svg.selectAll('.mg-missing-text').remove();\n  svg.selectAll('.mg-missing-pane').remove();\n}\n\nfunction mg_remove_outdated_lines(svg, args) {\n  // if we're updating an existing chart and we have fewer lines than\n  // before, remove the outdated lines, e.g. if we had 3 lines, and we're calling\n  // data_graphic() on the same target with 2 lines, remove the 3rd line\n\n  var i = 0;\n\n  if (svg.selectAll('.mg-main-line').nodes().length >= args.data.length) {\n    // now, the thing is we can't just remove, say, line3 if we have a custom\n    // line-color map, instead, see which are the lines to be removed, and delete those\n    if (args.custom_line_color_map.length > 0) {\n      var array_full_series = function(len) {\n        var arr = new Array(len);\n        for (var i = 0; i < arr.length; i++) { arr[i] = i + 1; }\n        return arr;\n      };\n\n      // get an array of lines ids to remove\n      var lines_to_remove = arr_diff(\n        array_full_series(args.max_data_size),\n        args.custom_line_color_map);\n\n      for (i = 0; i < lines_to_remove.length; i++) {\n        svg.selectAll('.mg-main-line.mg-line' + lines_to_remove[i] + '-color')\n          .remove();\n      }\n    } else {\n      // if we don't have a custom line-color map, just remove the lines from the end\n      var num_of_new = args.data.length;\n      var num_of_existing = (svg.selectAll('.mg-main-line').nodes()) ? svg.selectAll('.mg-main-line').nodes().length : 0;\n\n      for (i = num_of_existing; i > num_of_new; i--) {\n        svg.selectAll('.mg-main-line.mg-line' + i + '-color')\n          .remove();\n      }\n    }\n  }\n}\n\nfunction mg_raise_container_error(container, args) {\n  if (container.empty()) {\n    console.warn('The specified target element \"' + args.target + '\" could not be found in the page. The chart will not be rendered.');\n    return;\n  }\n}\n\nfunction categoricalInitialization(args, ns) {\n  var which = ns === 'x' ? args.width : args.height;\n  mg_categorical_count_number_of_groups(args, ns);\n  mg_categorical_count_number_of_lanes(args, ns);\n  mg_categorical_calculate_group_length(args, ns, which);\n  if (which) mg_categorical_calculate_bar_thickness(args, ns);\n}\n\n\nfunction mg_categorical_count_number_of_groups(args, ns) {\n  var accessor_string = ns + 'group_accessor';\n  var accessor = args[accessor_string];\n  args.categorical_groups = [];\n  if (accessor) {\n    var data = args.data[0];\n    args.categorical_groups = d3.set(data.map(function(d) {\n      return d[accessor] })).values();\n  }\n}\n\nfunction mg_categorical_count_number_of_lanes(args, ns) {\n  var accessor_string = ns + 'group_accessor';\n  var groupAccessor = args[accessor_string];\n\n  args.total_bars = args.data[0].length;\n  if (groupAccessor) {\n    var group_bars = count_array_elements(pluck(args.data[0], groupAccessor));\n    group_bars = d3.max(Object.keys(group_bars).map(function(d) {\n      return group_bars[d] }));\n    args.bars_per_group = group_bars;\n  } else {\n    args.bars_per_group = args.data[0].length;\n  }\n}\n\nfunction mg_categorical_calculate_group_length(args, ns, which) {\n  var groupHeight = ns + 'group_height';\n  if (which) {\n    var gh = ns === 'y' ?\n      (args.height - args.top - args.bottom - args.buffer * 2) / (args.categorical_groups.length || 1) :\n      (args.width - args.left - args.right - args.buffer * 2) / (args.categorical_groups.length || 1);\n\n    args[groupHeight] = gh;\n  } else {\n    var step = (1 + args[ns + '_padding_percentage']) * args.bar_thickness;\n    args[groupHeight] = args.bars_per_group * step + args[ns + '_outer_padding_percentage'] * 2 * step; //args.bar_thickness + (((args.bars_per_group-1) * args.bar_thickness) * (args.bar_padding_percentage + args.bar_outer_padding_percentage*2));\n  }\n}\n\nfunction mg_categorical_calculate_bar_thickness(args, ns) {\n  // take one group height.\n  var step = (args[ns + 'group_height']) / (args.bars_per_group + args[ns + '_outer_padding_percentage']);\n  args.bar_thickness = step - (step * args[ns + '_padding_percentage']);\n}\n\nfunction mg_categorical_calculate_height(args, ns) {\n  var groupContribution = (args[ns + 'group_height']) * (args.categorical_groups.length || 1);\n\n  var marginContribution = ns === 'y'\n    ? args.top + args.bottom + args.buffer * 2\n    : args.left + args.right + args.buffer * 2;\n\n  return groupContribution + marginContribution +\n    (args.categorical_groups.length * args[ns + 'group_height'] * (args[ns + 'group_padding_percentage'] + args[ns + 'group_outer_padding_percentage']));\n}\n\nfunction mg_barchart_extrapolate_group_and_thickness_from_height(args) {\n  // we need to set args.bar_thickness, group_height\n}\n\nfunction init(args) {\n  'use strict';\n  args = arguments[0];\n  args = mg_merge_args_with_defaults(args);\n  // If you pass in a dom element for args.target, the expectation\n  // of a string elsewhere will break.\n  var container = d3.select(args.target);\n  mg_raise_container_error(container, args);\n\n  var svg = container.selectAll('svg');\n\n  // some things that will need to be calculated if we have a categorical axis.\n  if (args.y_axis_type === 'categorical') { categoricalInitialization(args, 'y'); }\n  if (args.x_axis_type === 'categorical') { categoricalInitialization(args, 'x'); }\n\n  mg_is_time_series(args);\n  mg_init_compute_width(args);\n  mg_init_compute_height(args);\n\n  mg_remove_svg_if_chart_type_has_changed(svg, args);\n  svg = mg_add_svg_if_it_doesnt_exist(svg, args);\n\n  mg_add_clip_path_for_plot_area(svg, args);\n  mg_adjust_width_and_height_if_changed(svg, args);\n  mg_set_viewbox_for_scaling(svg, args);\n  mg_remove_missing_classes_and_text(svg);\n  chart_title(args);\n  mg_remove_outdated_lines(svg, args);\n\n  return this;\n}\n\nMG.init = init;\n\nfunction mg_return_label(d) {\n  return d.label;\n}\n\nfunction mg_remove_existing_markers(svg) {\n  svg.selectAll('.mg-markers').remove();\n  svg.selectAll('.mg-baselines').remove();\n}\n\nfunction mg_in_range(args) {\n  return function(d) {\n    return (args.scales.X(d[args.x_accessor]) >= mg_get_plot_left(args)) && (args.scales.X(d[args.x_accessor]) <= mg_get_plot_right(args));\n  };\n}\n\nfunction mg_x_position(args) {\n  return function(d) {\n    return args.scales.X(d[args.x_accessor]);\n  };\n}\n\nfunction mg_x_position_fixed(args) {\n  var _mg_x_pos = mg_x_position(args);\n  return function(d) {\n    return _mg_x_pos(d).toFixed(2);\n  };\n}\n\nfunction mg_y_position_fixed(args) {\n  var _mg_y_pos = args.scales.Y;\n  return function(d) {\n    return _mg_y_pos(d.value).toFixed(2);\n  };\n}\n\nfunction mg_place_annotations(checker, class_name, args, svg, line_fcn, text_fcn) {\n  var g;\n  if (checker) {\n    g = svg.append('g').attr('class', class_name);\n    line_fcn(g, args);\n    text_fcn(g, args);\n  }\n}\n\nfunction mg_place_markers(args, svg) {\n  mg_place_annotations(args.markers, 'mg-markers', args, svg, mg_place_marker_lines, mg_place_marker_text);\n}\n\nfunction mg_place_baselines(args, svg) {\n  mg_place_annotations(args.baselines, 'mg-baselines', args, svg, mg_place_baseline_lines, mg_place_baseline_text);\n}\n\nfunction mg_place_marker_lines(gm, args) {\n  var x_pos_fixed = mg_x_position_fixed(args);\n  gm.selectAll('.mg-markers')\n    .data(args.markers.filter(mg_in_range(args)))\n    .enter()\n    .append('line')\n    .attr('x1', x_pos_fixed)\n    .attr('x2', x_pos_fixed)\n    .attr('y1', args.top)\n    .attr('y2', mg_get_plot_bottom(args))\n    .attr('class', function(d) {\n      return d.lineclass;\n    })\n    .attr('stroke-dasharray', '3,1');\n}\n\nfunction mg_place_marker_text(gm, args) {\n  gm.selectAll('.mg-markers')\n    .data(args.markers.filter(mg_in_range(args)))\n    .enter()\n    .append('text')\n      .attr('class', function(d) {\n        return d.textclass || ''; })\n      .classed('mg-marker-text', true)\n      .attr('x', mg_x_position(args))\n      .attr('y', args.x_axis_position === 'bottom' ? mg_get_top(args) * 0.95 : mg_get_bottom(args) + args.buffer)\n      .attr('text-anchor', 'middle')\n      .text(mg_return_label)\n      .each(function(d) {\n        if (d.click) {\n          d3.select(this).style('cursor', 'pointer')\n            .on('click', d.click);\n        }\n      });\n\n  mg_prevent_horizontal_overlap(gm.selectAll('.mg-marker-text').nodes(), args);\n}\n\nfunction mg_place_baseline_lines(gb, args) {\n  var y_pos = mg_y_position_fixed(args);\n  gb.selectAll('.mg-baselines')\n    .data(args.baselines)\n    .enter().append('line')\n    .attr('x1', mg_get_plot_left(args))\n    .attr('x2', mg_get_plot_right(args))\n    .attr('y1', y_pos)\n    .attr('y2', y_pos);\n}\n\nfunction mg_place_baseline_text(gb, args) {\n  var y_pos = mg_y_position_fixed(args);\n  gb.selectAll('.mg-baselines')\n    .data(args.baselines)\n    .enter().append('text')\n    .attr('x', mg_get_plot_right(args))\n    .attr('y', y_pos)\n    .attr('dy', -3)\n    .attr('text-anchor', 'end')\n    .text(mg_return_label);\n}\n\nfunction markers(args) {\n  'use strict';\n\n  var svg = mg_get_svg_child_of(args.target);\n  mg_remove_existing_markers(svg);\n  mg_place_markers(args, svg);\n  mg_place_baselines(args, svg);\n  return this;\n}\n\nMG.markers = markers;\n\nfunction mg_clear_mouseover_container(svg) {\n  svg.selectAll('.mg-active-datapoint-container').selectAll('*').remove();\n}\n\nfunction mg_setup_mouseover_container(svg, args) {\n  svg.select('.mg-active-datapoint').remove();\n  var text_anchor = args.mouseover_align === 'right'\n    ? 'end'\n    : (args.mouseover_align === 'left'\n      ? 'start'\n      : 'middle');\n\n  var mouseover_x = (args.mouseover_align === 'right')\n    ? mg_get_plot_right(args)\n    : (args.mouseover_align === 'left'\n      ? mg_get_plot_left(args)\n      : (args.width - args.left - args.right) / 2 + args.left);\n\n  var active_datapoint = svg.select('.mg-active-datapoint-container')\n    .append('text')\n    .attr('class', 'mg-active-datapoint')\n    .attr('xml:space', 'preserve')\n    .attr('text-anchor', text_anchor);\n\n  // set the rollover text's position; if we have markers on two lines,\n  // nudge up the rollover text a bit\n  var active_datapoint_y_nudge = 0.75;\n\n  var y_position = (args.x_axis_position === 'bottom')\n    ? mg_get_top(args) * active_datapoint_y_nudge\n    : mg_get_bottom(args) + args.buffer * 3;\n\n  if (args.markers) {\n    var yPos;\n    svg.selectAll('.mg-marker-text')\n      .each(function() {\n        if (!yPos) {\n          yPos = d3.select(this).attr('y');\n        } else if (yPos !== d3.select(this).attr('y')) {\n          active_datapoint_y_nudge = 0.56;\n        }\n      });\n  }\n\n  active_datapoint\n    .attr('transform', 'translate(' + mouseover_x + ',' + (y_position) + ')');\n}\n\nfunction mg_mouseover_tspan(svg, text) {\n  var tspan = '';\n  var cl = null;\n  if (arguments.length === 3) cl = arguments[2];\n  tspan = svg.append('tspan').text(text);\n  if (cl !== null) tspan.classed(cl, true);\n  this.tspan = tspan;\n\n  this.bold = function() {\n    this.tspan.attr('font-weight', 'bold');\n    return this;\n  };\n\n  this.font_size = function(pts) {\n    this.tspan.attr('font-size', pts);\n    return this;\n  }\n\n  this.x = function(x) {\n    this.tspan.attr('x', x);\n    return this;\n  };\n  this.y = function(y) {\n    this.tspan.attr('y', y);\n    return this;\n  };\n  this.elem = function() {\n    return this.tspan;\n  };\n  return this;\n}\n\nfunction mg_reset_text_container(svg) {\n  var textContainer = svg.select('.mg-active-datapoint');\n  textContainer\n    .selectAll('*')\n    .remove();\n  return textContainer;\n}\n\nfunction mg_mouseover_row(row_number, container, rargs) {\n  var lineHeight = 1.1;\n  this.rargs = rargs;\n\n  var rrr = container.append('tspan')\n    .attr('x', 0)\n    .attr('y', (row_number * lineHeight) + 'em');\n\n  this.text = function(text) {\n    return mg_mouseover_tspan(rrr, text);\n  }\n  return this;\n}\n\nfunction mg_mouseover_text(args, rargs) {\n  var lineHeight = 1.1;\n  this.row_number = 0;\n  this.rargs = rargs;\n  mg_setup_mouseover_container(rargs.svg, args);\n\n  this.text_container = mg_reset_text_container(rargs.svg);\n\n  this.mouseover_row = function(rargs) {\n    var that = this;\n    var rrr = mg_mouseover_row(that.row_number, that.text_container, rargs);\n    that.row_number += 1;\n    return rrr;\n  }\n\n  return this;\n}\n\nfunction MG_WindowResizeTracker() {\n  var targets = [];\n\n  var Observer;\n  if (typeof MutationObserver !== \"undefined\") {\n    Observer = MutationObserver;\n  } else if (typeof WebKitMutationObserver !== \"undefined\") {\n    Observer = WebKitMutationObserver;\n  }\n\n  function window_listener() {\n    targets.forEach(function(target) {\n      var svg = d3.select(target).select('svg');\n\n      // skip if svg is not visible\n      if (!svg.empty() && (svg.node().parentNode.offsetWidth > 0 || svg.node().parentNode.offsetHeight > 0)) {\n        var aspect = svg.attr('width') !== 0 ? (svg.attr('height') / svg.attr('width')) : 0;\n\n        var newWidth = get_width(target);\n\n        svg.attr('width', newWidth);\n        svg.attr('height', aspect * newWidth);\n      }\n    });\n  }\n\n  function remove_target(target) {\n    var index = targets.indexOf(target);\n    if (index !== -1) {\n      targets.splice(index, 1);\n    }\n\n    if (targets.length === 0) {\n      window.removeEventListener('resize', window_listener, true);\n    }\n  }\n\n  return {\n    add_target: function(target) {\n      if (targets.length === 0) {\n        window.addEventListener('resize', window_listener, true);\n      }\n\n      if (targets.indexOf(target) === -1) {\n        targets.push(target);\n\n        if (Observer) {\n          var observer = new Observer(function(mutations) {\n            var targetNode = d3.select(target).node();\n\n            if (!targetNode || mutations.some(\n                function(mutation) {\n                  for (var i = 0; i < mutation.removedNodes.length; i++) {\n                    if (mutation.removedNodes[i] === targetNode) {\n                      return true;\n                    }\n                  }\n                })) {\n              observer.disconnect();\n              remove_target(target);\n            }\n          });\n\n          observer.observe(d3.select(target).node().parentNode, { childList: true });\n        }\n      }\n    }\n  };\n}\n\nvar mg_window_resize_tracker = new MG_WindowResizeTracker();\n\nfunction mg_window_listeners(args) {\n  mg_if_aspect_ratio_resize_svg(args);\n}\n\nfunction mg_if_aspect_ratio_resize_svg(args) {\n  // have we asked the svg to fill a div, if so resize with div\n  if (args.full_width || args.full_height) {\n    mg_window_resize_tracker.add_target(args.target);\n  }\n}\n\nif (mg_jquery_exists()) {\n    /*!\n     * Bootstrap v3.3.1 (http://getbootstrap.com)\n     * Copyright 2011-2014 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     */\n\n    /*!\n     * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=c3834cc5b59ef727da53)\n     * Config saved to config.json and https://gist.github.com/c3834cc5b59ef727da53\n     */\n\n    /* ========================================================================\n     * Bootstrap: dropdown.js v3.3.1\n     * http://getbootstrap.com/javascript/#dropdowns\n     * ========================================================================\n     * Copyright 2011-2014 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n\n    +function ($) {\n      'use strict';\n\n      if(typeof $().dropdown == 'function')\n        return true;\n\n      // DROPDOWN CLASS DEFINITION\n      // =========================\n\n      var backdrop = '.dropdown-backdrop';\n      var toggle   = '[data-toggle=\"dropdown\"]';\n      var Dropdown = function (element) {\n        $(element).on('click.bs.dropdown', this.toggle);\n      };\n\n      Dropdown.VERSION = '3.3.1';\n\n      Dropdown.prototype.toggle = function (e) {\n        var $this = $(this);\n\n        if ($this.is('.disabled, :disabled')) return;\n\n        var $parent  = getParent($this);\n        var isActive = $parent.hasClass('open');\n\n        clearMenus();\n\n        if (!isActive) {\n          if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n            // if mobile we use a backdrop because click events don't delegate\n            $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus);\n          }\n\n          var relatedTarget = { relatedTarget: this };\n          $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));\n\n          if (e.isDefaultPrevented()) return;\n\n          $this\n            .trigger('focus')\n            .attr('aria-expanded', 'true');\n\n          $parent\n            .toggleClass('open')\n            .trigger('shown.bs.dropdown', relatedTarget);\n        }\n\n        return false;\n      };\n\n      Dropdown.prototype.keydown = function (e) {\n        if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;\n\n        var $this = $(this);\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if ($this.is('.disabled, :disabled')) return;\n\n        var $parent  = getParent($this);\n        var isActive = $parent.hasClass('open');\n\n        if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n          if (e.which == 27) $parent.find(toggle).trigger('focus');\n          return $this.trigger('click');\n        }\n\n        var desc = ' li:not(.divider):visible a';\n        var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc);\n\n        if (!$items.length) return;\n\n        var index = $items.index(e.target);\n\n        if (e.which == 38 && index > 0)                 index--;                        // up\n        if (e.which == 40 && index < $items.length - 1) index++;                        // down\n        if (!~index)                                      index = 0;\n\n        $items.eq(index).trigger('focus');\n      };\n\n      function clearMenus(e) {\n        if (e && e.which === 3) return;\n        $(backdrop).remove();\n        $(toggle).each(function () {\n          var $this         = $(this);\n          var $parent       = getParent($this);\n          var relatedTarget = { relatedTarget: this };\n\n          if (!$parent.hasClass('open')) return;\n\n          $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));\n\n          if (e.isDefaultPrevented()) return;\n\n          $this.attr('aria-expanded', 'false');\n          $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget);\n        });\n      }\n\n      function getParent($this) {\n        var selector = $this.attr('data-target');\n\n        if (!selector) {\n          selector = $this.attr('href');\n          selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n        }\n\n        var $parent = selector && $(selector);\n\n        return $parent && $parent.length ? $parent : $this.parent();\n      }\n\n\n      // DROPDOWN PLUGIN DEFINITION\n      // ==========================\n\n      function Plugin(option) {\n        return this.each(function () {\n          var $this = $(this);\n          var data  = $this.data('bs.dropdown');\n\n          if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)));\n          if (typeof option == 'string') data[option].call($this);\n        });\n      }\n\n      var old = $.fn.dropdown;\n\n      $.fn.dropdown             = Plugin;\n      $.fn.dropdown.Constructor = Dropdown;\n\n\n      // DROPDOWN NO CONFLICT\n      // ====================\n\n      $.fn.dropdown.noConflict = function () {\n        $.fn.dropdown = old;\n        return this;\n      };\n\n\n      // APPLY TO STANDARD DROPDOWN ELEMENTS\n      // ===================================\n\n      $(document)\n        .on('click.bs.dropdown.data-api', clearMenus)\n        .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation(); })\n        .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n        .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n        .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n        .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown);\n\n    }(jQuery);\n}\n\nMG.button_layout = function(target) {\n  'use strict';\n  this.target = target;\n  this.feature_set = {};\n  this.public_name = {};\n  this.sorters = {};\n  this.manual = [];\n  this.manual_map = {};\n  this.manual_callback = {};\n\n  this._strip_punctuation = function(s) {\n    var punctuationless = s.replace(/[^a-zA-Z0-9 _]+/g, '');\n    var finalString = punctuationless.replace(/ +?/g, '');\n    return finalString;\n  };\n\n  this.data = function(data) {\n    this._data = data;\n    return this;\n  };\n\n  this.manual_button = function(feature, feature_set, callback) {\n    this.feature_set[feature] = feature_set;\n    this.manual_map[this._strip_punctuation(feature)] = feature;\n    this.manual_callback[feature] = callback; // the default is going to be the first feature.\n    return this;\n  };\n\n  this.button = function(feature) {\n    if (arguments.length > 1) {\n      this.public_name[feature] = arguments[1];\n    }\n\n    if (arguments.length > 2) {\n      this.sorters[feature] = arguments[2];\n    }\n\n    this.feature_set[feature] = [];\n    return this;\n  };\n\n  this.callback = function(callback) {\n    this._callback = callback;\n    return this;\n  };\n\n  this.display = function() {\n    var callback = this._callback;\n    var manual_callback = this.manual_callback;\n    var manual_map = this.manual_map;\n\n    var d, f, features, feat;\n    features = Object.keys(this.feature_set);\n\n    var mapDtoF = function(f) {\n      return d[f]; };\n\n    var i;\n\n    // build out this.feature_set with this.data\n    for (i = 0; i < this._data.length; i++) {\n      d = this._data[i];\n      f = features.map(mapDtoF);\n      for (var j = 0; j < features.length; j++) {\n        feat = features[j];\n        if (this.feature_set[feat].indexOf(f[j]) === -1) {\n          this.feature_set[feat].push(f[j]);\n        }\n      }\n    }\n\n    for (feat in this.feature_set) {\n      if (this.sorters.hasOwnProperty(feat)) {\n        this.feature_set[feat].sort(this.sorters[feat]);\n      }\n    }\n\n    $(this.target).empty();\n\n    $(this.target).append(\"<div class='col-lg-12 segments text-center'></div>\");\n\n    var dropdownLiAClick = function() {\n      var k = $(this).data('key');\n      var feature = $(this).data('feature');\n      var manual_feature;\n      $('.' + feature + '-btns button.btn span.title').html(k);\n      if (!manual_map.hasOwnProperty(feature)) {\n        callback(feature, k);\n      } else {\n        manual_feature = manual_map[feature];\n        manual_callback[manual_feature](k);\n      }\n\n      return false;\n    };\n\n    for (var feature in this.feature_set) {\n      features = this.feature_set[feature];\n      $(this.target + ' div.segments').append(\n        '<div class=\"btn-group ' + this._strip_punctuation(feature) + '-btns text-left\">' + // This never changes.\n        '<button type=\"button\" class=\"btn btn-default btn-lg dropdown-toggle\" data-toggle=\"dropdown\">' +\n        \"<span class='which-button'>\" + (this.public_name.hasOwnProperty(feature) ? this.public_name[feature] : feature) + \"</span>\" +\n        \"<span class='title'>\" + (this.manual_callback.hasOwnProperty(feature) ? this.feature_set[feature][0] : 'all') + \"</span>\" + // if a manual button, don't default to all in label.\n        '<span class=\"caret\"></span>' +\n        '</button>' +\n        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n        (!this.manual_callback.hasOwnProperty(feature) ? '<li><a href=\"#\" data-feature=\"' + feature + '\" data-key=\"all\">All</a></li>' : \"\") +\n        (!this.manual_callback.hasOwnProperty(feature) ? '<li class=\"divider\"></li>' : \"\") +\n        '</ul>' + '</div>');\n\n      for (i = 0; i < features.length; i++) {\n        if (features[i] !== 'all' && features[i] !== undefined) { // strange bug with undefined being added to manual buttons.\n          $(this.target + ' div.' + this._strip_punctuation(feature) + '-btns ul.dropdown-menu').append(\n            '<li><a href=\"#\" data-feature=\"' + this._strip_punctuation(feature) + '\" data-key=\"' + features[i] + '\">' + features[i] + '</a></li>'\n          );\n        }\n      }\n\n      $('.' + this._strip_punctuation(feature) + '-btns .dropdown-menu li a').on('click', dropdownLiAClick);\n    }\n\n    return this;\n  };\n\n  return this;\n};\n\n(function() {\n  'use strict';\n\n  function mg_line_color_text(elem, d, args) {\n    elem.classed('mg-hover-line' + d.line_id + '-color', args.colors === null)\n      .attr('fill', args.colors === null ? '' : args.colors[d.line_id - 1]);\n  }\n\n  function mg_line_graph_generators(args, plot, svg) {\n    mg_add_line_generator(args, plot);\n    mg_add_area_generator(args, plot);\n    mg_add_flat_line_generator(args, plot);\n    mg_add_confidence_band_generator(args, plot, svg);\n  }\n\n  function mg_add_confidence_band_generator(args, plot, svg) {\n    plot.existing_band = svg.selectAll('.mg-confidence-band').nodes();\n    if (args.show_confidence_band) {\n      plot.confidence_area = d3.area()\n        .defined(plot.line.defined())\n        .x(args.scalefns.xf)\n        .y0(function(d) {\n          var l = args.show_confidence_band[0];\n          if (d[l] != undefined) {\n            return args.scales.Y(d[l]);\n          } else {\n            return args.scales.Y(d[args.y_accessor]);\n          }\n        })\n        .y1(function(d) {\n          var u = args.show_confidence_band[1];\n          if (d[u] != undefined) {\n            return args.scales.Y(d[u]);\n          } else {\n            return args.scales.Y(d[args.y_accessor]);\n          }\n        })\n        .curve(args.interpolate);\n    }\n  }\n\n  function mg_add_area_generator(args, plot) {\n    plot.area = d3.area()\n      .defined(plot.line.defined())\n      .x(args.scalefns.xf)\n      .y0(args.scales.Y.range()[0])\n      .y1(args.scalefns.yf)\n      .curve(args.interpolate);\n  }\n\n  function mg_add_flat_line_generator(args, plot) {\n    plot.flat_line = d3.line()\n      .defined(function(d) {\n        return (d['_missing'] === undefined || d['_missing'] !== true) && d[args.y_accessor] !== null;\n      })\n      .x(args.scalefns.xf)\n      .y(function() {\n        return args.scales.Y(plot.data_median); })\n      .curve(args.interpolate);\n  }\n\n  function mg_add_line_generator(args, plot) {\n    plot.line = d3.line()\n      .x(args.scalefns.xf)\n      .y(args.scalefns.yf)\n      .curve(args.interpolate);\n\n    // if missing_is_zero is not set, then hide data points that fall in missing\n    // data ranges or that have been explicitly identified as missing in the\n    // data source.\n    if (!args.missing_is_zero) {\n      // a line is defined if the _missing attrib is not set to true\n      // and the y-accessor is not null\n      plot.line = plot.line.defined(function(d) {\n        return (d['_missing'] === undefined || d['_missing'] !== true) && d[args.y_accessor] !== null;\n      });\n    }\n  }\n\n  function mg_add_confidence_band(args, plot, svg, which_line) {\n    if (args.show_confidence_band) {\n      var confidenceBand;\n      if (svg.select('.mg-confidence-band-' + which_line).empty()) {\n        svg.append('path')\n          .attr('class', 'mg-confidence-band mg-confidence-band-' + which_line)\n      }\n\n      // transition this line's confidence band\n      confidenceBand = svg.select('.mg-confidence-band-' + which_line);\n\n      confidenceBand\n        .transition()\n        .duration(function() {\n          return (args.transition_on_update) ? 1000 : 0;\n        })\n        .attr('d', plot.confidence_area(args.data[which_line - 1]))\n        .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')')\n    }\n  }\n\n  function mg_add_area(args, plot, svg, which_line, line_id) {\n    var areas = svg.selectAll('.mg-main-area.mg-area' + line_id);\n    if (plot.display_area) {\n      // if area already exists, transition it\n      if (!areas.empty()) {\n        svg.node().appendChild(areas.node());\n\n        areas.transition()\n          .duration(plot.update_transition_duration)\n          .attr('d', plot.area(args.data[which_line]))\n          .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n      } else { // otherwise, add the area\n        svg.append('path')\n          .classed('mg-main-area', true)\n          .classed('mg-area' + line_id, true)\n          .classed('mg-area' + line_id + '-color', args.colors === null)\n          .attr('d', plot.area(args.data[which_line]))\n          .attr('fill', args.colors === null ? '' : args.colors[line_id - 1])\n          .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n      }\n    } else if (!areas.empty()) {\n      areas.remove();\n    }\n  }\n\n  function mg_default_color_for_path(this_path, line_id) {\n    this_path.classed('mg-line' + (line_id) + '-color', true);\n  }\n\n  function mg_color_line(args, this_path, which_line, line_id) {\n    if (args.colors) {\n      // for now, if args.colors is not an array, then keep moving as if nothing happened.\n      // if args.colors is not long enough, default to the usual line_id color.\n      if (args.colors.constructor === Array) {\n        this_path.attr('stroke', args.colors[which_line]);\n        if (args.colors.length < which_line + 1) {\n          // Go with default coloring.\n          // this_path.classed('mg-line' + (line_id) + '-color', true);\n          mg_default_color_for_path(this_path, line_id);\n        }\n      } else {\n        // this_path.classed('mg-line' + (line_id) + '-color', true);\n        mg_default_color_for_path(this_path, line_id);\n      }\n    } else {\n      // this is the typical workflow\n      // this_path.classed('mg-line' + (line_id) + '-color', true);\n      mg_default_color_for_path(this_path, line_id);\n    }\n  }\n\n  function mg_add_line_element(args, plot, this_path, which_line) {\n    if (args.animate_on_load) {\n      plot.data_median = d3.median(args.data[which_line], function(d) {\n        return d[args.y_accessor]; });\n      this_path.attr('d', plot.flat_line(args.data[which_line]))\n        .transition()\n        .duration(1000)\n        .attr('d', plot.line(args.data[which_line]))\n        .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n    } else { // or just add the line\n      this_path.attr('d', plot.line(args.data[which_line]))\n        .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n    }\n  }\n\n  function mg_add_line(args, plot, svg, existing_line, which_line, line_id) {\n    if (!existing_line.empty()) {\n      svg.node().appendChild(existing_line.node());\n\n      var lineTransition = existing_line.transition()\n        .duration(plot.update_transition_duration);\n\n      if (!plot.display_area && args.transition_on_update && !args.missing_is_hidden) {\n        lineTransition.attrTween('d', path_tween(plot.line(args.data[which_line]), 4));\n      } else {\n        lineTransition.attr('d', plot.line(args.data[which_line]));\n      }\n    } else { // otherwise...\n      // if we're animating on load, animate the line from its median value\n      var this_path = svg.append('path')\n        .attr('class', 'mg-main-line mg-line' + line_id);\n\n      mg_color_line(args, this_path, which_line, line_id);\n      mg_add_line_element(args, plot, this_path, which_line);\n    }\n  }\n\n  function mg_add_legend_element(args, plot, which_line, line_id) {\n    var this_legend;\n    if (args.legend) {\n      if (is_array(args.legend)) {\n        this_legend = args.legend[which_line];\n      } else if (is_function(args.legend)) {\n        this_legend = args.legend(args.data[which_line]);\n      }\n\n      if (args.legend_target) {\n        if (args.colors && args.colors.constructor === Array) {\n          plot.legend_text = \"<span style='color:\" + args.colors[which_line] + \"'>&mdash; \" +\n            this_legend + '&nbsp; </span>' + plot.legend_text;\n        } else {\n          plot.legend_text = \"<span class='mg-line\" + line_id + \"-legend-color'>&mdash; \" +\n            this_legend + '&nbsp; </span>' + plot.legend_text;\n        }\n      } else {\n        var anchor_point, anchor_orientation, dx;\n        if (args.y_axis_position === 'left') {\n          anchor_point = args.data[which_line][args.data[which_line].length - 1];\n          anchor_orientation = 'start';\n          dx = args.buffer;\n        } else {\n          anchor_point = args.data[which_line][0];\n          anchor_orientation = 'end';\n          dx = -args.buffer;\n        }\n        var legend_text = plot.legend_group.append('svg:text')\n          .attr('x', args.scalefns.xf(anchor_point))\n          .attr('dx', dx)\n          .attr('y', args.scalefns.yf(anchor_point))\n          .attr('dy', '.35em')\n          .attr('font-size', 10)\n          .attr('text-anchor', anchor_orientation)\n          .attr('font-weight', '300')\n          .text(this_legend);\n\n        if (args.colors && args.colors.constructor === Array) {\n          if (args.colors.length < which_line + 1) {\n            legend_text.classed('mg-line' + (line_id) + '-legend-color', true);\n          } else {\n            legend_text.attr('fill', args.colors[which_line]);\n          }\n        } else {\n          legend_text.classed('mg-line' + (line_id) + '-legend-color', true);\n        }\n\n        mg_prevent_vertical_overlap(plot.legend_group.selectAll('.mg-line-legend text').nodes(), args);\n      }\n    }\n  }\n\n  function mg_plot_legend_if_legend_target(target, legend) {\n    if (target) {\n      d3.select(target).html(legend);\n    }\n  }\n\n  function mg_add_legend_group(args, plot, svg) {\n    if (args.legend) plot.legend_group = mg_add_g(svg, 'mg-line-legend');\n  }\n\n  function mg_remove_existing_line_rollover_elements(svg) {\n    // remove the old rollovers if they already exist\n    mg_selectAll_and_remove(svg, '.mg-rollover-rect');\n    mg_selectAll_and_remove(svg, '.mg-voronoi');\n\n    // remove the old rollover text and circle if they already exist\n    mg_selectAll_and_remove(svg, '.mg-active-datapoint');\n    mg_selectAll_and_remove(svg, '.mg-line-rollover-circle');\n    //mg_selectAll_and_remove(svg, '.mg-active-datapoint-container');\n  }\n\n  function mg_add_rollover_circle(args, svg) {\n    // append circle\n    var circle = svg.selectAll('.mg-line-rollover-circle')\n      .data(args.data)\n      .enter().append('circle')\n      .attr('cx', 0)\n      .attr('cy', 0)\n      .attr('r', 0);\n\n    if (args.colors && args.colors.constructor === Array) {\n      circle\n        .attr('class', function(d) {\n          return 'mg-line' + d.line_id;\n        })\n        .attr('fill', function(d, i) {\n          return args.colors[i];\n        })\n        .attr('stroke', function(d, i) {\n          return args.colors[i];\n        });\n    } else {\n      circle.attr('class', function(d, i) {\n        return [\n          'mg-line' + d.line_id,\n          'mg-line' + d.line_id + '-color',\n          'mg-area' + d.line_id + '-color'\n        ].join(' ');\n      });\n    }\n    circle.classed('mg-line-rollover-circle', true);\n  }\n\n  function mg_set_unique_line_id_for_each_series(args) {\n    // update our data by setting a unique line id for each series\n    // increment from 1... unless we have a custom increment series\n    var line_id = 1;\n    for (var i = 0; i < args.data.length; i++) {\n      for (var j = 0; j < args.data[i].length; j++) {\n        // if custom line-color map is set, use that instead of line_id\n        if (args.custom_line_color_map.length > 0) {\n          args.data[i][j].line_id = args.custom_line_color_map[i];\n        } else {\n          args.data[i][j].line_id = line_id;\n        }\n      }\n      line_id++;\n    }\n  }\n\n  function mg_nest_data_for_voronoi(args) {\n    return d3.merge(args.data);\n  }\n\n  function mg_line_class_string(args) {\n    return function(d) {\n      var class_string;\n\n      if (args.linked) {\n        var v = d[args.x_accessor];\n        var formatter = MG.time_format(args.utc_time, args.linked_format);\n\n        // only format when x-axis is date\n        var id = (typeof v === 'number') ? (d.line_id - 1) : formatter(v);\n        class_string = 'roll_' + id + ' mg-line' + d.line_id;\n\n        if (args.color === null) {\n          class_string += ' mg-line' + d.line_id + '-color';\n        }\n        return class_string;\n\n      } else {\n        class_string = 'mg-line' + d.line_id;\n        if (args.color === null) class_string += ' mg-line' + d.line_id + '-color';\n        return class_string;\n      }\n    };\n  }\n\n  function mg_add_voronoi_rollover(args, svg, rollover_on, rollover_off, rollover_move) {\n    var voronoi = d3.voronoi()\n      .x(function(d) {\n        return args.scales.X(d[args.x_accessor]).toFixed(2); })\n      .y(function(d) {\n        return args.scales.Y(d[args.y_accessor]).toFixed(2); })\n      .extent([\n        [args.buffer, args.buffer + args.title_y_position],\n        [args.width - args.buffer, args.height - args.buffer]\n      ]);\n\n    var g = mg_add_g(svg, 'mg-voronoi');\n    g.selectAll('path')\n      .data(voronoi.polygons(mg_nest_data_for_voronoi(args)))\n      .enter()\n      .append('path')\n      .filter(function(d) {\n        return d !== undefined && d.length > 0; })\n      .attr('d', function(d) {\n        return d == null ? null : 'M' + d.join('L') + 'Z'; })\n      .datum(function(d) {\n        return d == null ? null : d.data; }) // because of d3.voronoi, reassign d\n      .attr('class', mg_line_class_string(args))\n      .on('mouseover', rollover_on)\n      .on('mouseout', rollover_off)\n      .on('mousemove', rollover_move);\n\n    mg_configure_voronoi_rollover(args, svg);\n  }\n\n  function nest_data_for_aggregate_rollover(args) {\n    var data_nested = d3.nest()\n      .key(function(d) {\n        return d[args.x_accessor]; })\n      .entries(d3.merge(args.data));\n    data_nested.forEach(function(entry) {\n      var datum = entry.values[0];\n      entry.key = datum[args.x_accessor];\n    });\n\n    if (args.x_sort) {\n      return data_nested.sort(function(a, b) {\n        return new Date(a.key) - new Date(b.key); });\n    } else {\n      return data_nested;\n    }\n  }\n\n  function mg_add_aggregate_rollover(args, svg, rollover_on, rollover_off, rollover_move) {\n    // Undo the keys getting coerced to strings, by setting the keys from the values\n    // This is necessary for when we have X axis keys that are things like\n    var data_nested = nest_data_for_aggregate_rollover(args);\n\n    var xf = data_nested.map(function(di) {\n      return args.scales.X(di.key);\n    });\n\n    var g = svg.append('g')\n      .attr('class', 'mg-rollover-rect');\n\n    g.selectAll('.mg-rollover-rects')\n      .data(data_nested).enter()\n      .append('rect')\n      .attr('x', function(d, i) {\n        if (xf.length === 1) return mg_get_plot_left(args);\n        else if (i === 0) return xf[i].toFixed(2);\n        else return ((xf[i - 1] + xf[i]) / 2).toFixed(2);\n      })\n      .attr('y', args.top)\n      .attr('width', function(d, i) {\n        if (xf.length === 1) return mg_get_plot_right(args);\n        else if (i === 0) return ((xf[i + 1] - xf[i]) / 2).toFixed(2);\n        else if (i === xf.length - 1) return ((xf[i] - xf[i - 1]) / 2).toFixed(2);\n        else return ((xf[i + 1] - xf[i - 1]) / 2).toFixed(2);\n      })\n      .attr('class', function(d) {\n        var line_classes = d.values.map(function(datum) {\n          var lc = mg_line_class(datum.line_id);\n          if (args.colors === null) lc += ' ' + mg_line_color_class(datum.line_id);\n          return lc;\n        }).join(' ');\n        if (args.linked && d.values.length > 0) {\n          line_classes += ' ' + mg_rollover_id_class(mg_rollover_format_id(d.values[0], 0, args));\n        }\n\n        return line_classes;\n      })\n      .attr('height', args.height - args.bottom - args.top - args.buffer)\n      .attr('opacity', 0)\n      .on('mouseover', rollover_on)\n      .on('mouseout', rollover_off)\n      .on('mousemove', rollover_move);\n\n    mg_configure_aggregate_rollover(args, svg);\n  }\n\n  function mg_configure_singleton_rollover(args, svg) {\n    svg.select('.mg-rollover-rect rect')\n      .on('mouseover')(args.data[0][0], 0);\n  }\n\n  function mg_configure_voronoi_rollover(args, svg) {\n    for (var i = 0; i < args.data.length; i++) {\n      var j = i + 1;\n\n      if (args.custom_line_color_map.length > 0 &&\n        args.custom_line_color_map[i] !== undefined) {\n        j = args.custom_line_color_map[i];\n      }\n\n      if (args.data[i].length === 1 && !svg.selectAll('.mg-voronoi .mg-line' + j).empty()) {\n        svg.selectAll('.mg-voronoi .mg-line' + j)\n          .on('mouseover')(args.data[i][0], 0);\n\n        svg.selectAll('.mg-voronoi .mg-line' + j)\n          .on('mouseout')(args.data[i][0], 0);\n      }\n    }\n  }\n\n  function mg_line_class(line_id) {\n    return 'mg-line' + line_id;\n  }\n\n  function mg_line_color_class(line_id) {\n    return 'mg-line' + line_id + '-color';\n  }\n\n  function mg_rollover_id_class(id) {\n    return 'roll_' + id;\n  }\n\n  function mg_rollover_format_id(d, i, args) {\n    var v = d[args.x_accessor];\n    var formatter = MG.time_format(args.utc_time, args.linked_format);\n    // only format when x-axis is date\n    var id = (typeof v === 'number') ? i : formatter(v);\n    return id;\n  }\n\n  function mg_add_single_line_rollover(args, svg, rollover_on, rollover_off, rollover_move) {\n    // set to 1 unless we have a custom increment series\n    var line_id = 1;\n    if (args.custom_line_color_map.length > 0) {\n      line_id = args.custom_line_color_map[0];\n    }\n\n    var g = svg.append('g')\n      .attr('class', 'mg-rollover-rect');\n\n    var xf = args.data[0].map(args.scalefns.xf);\n\n    g.selectAll('.mg-rollover-rects')\n      .data(args.data[0]).enter()\n      .append('rect')\n      .attr('class', function(d, i) {\n        var cl = mg_line_color_class(line_id) + ' ' + mg_line_class(d.line_id);\n        if (args.linked) cl += cl + ' ' + mg_rollover_id_class(mg_rollover_format_id(d, i, args));\n        return cl;\n      })\n      .attr('x', function(d, i) {\n        // if data set is of length 1\n        if (xf.length === 1) return mg_get_plot_left(args);\n        else if (i === 0) return xf[i].toFixed(2);\n        else return ((xf[i - 1] + xf[i]) / 2).toFixed(2);\n      })\n      .attr('y', function(d, i) {\n        return (args.data.length > 1) ? args.scalefns.yf(d) - 6 // multi-line chart sensitivity\n          : args.top;\n      })\n      .attr('width', function(d, i) {\n        // if data set is of length 1\n        if (xf.length === 1) return mg_get_plot_right(args);\n        else if (i === 0) return ((xf[i + 1] - xf[i]) / 2).toFixed(2);\n        else if (i === xf.length - 1) return ((xf[i] - xf[i - 1]) / 2).toFixed(2);\n        else return ((xf[i + 1] - xf[i - 1]) / 2).toFixed(2);\n      })\n      .attr('height', function(d, i) {\n        return (args.data.length > 1) ? 12 // multi-line chart sensitivity\n          : args.height - args.bottom - args.top - args.buffer;\n      })\n      .attr('opacity', 0)\n      .on('mouseover', rollover_on)\n      .on('mouseout', rollover_off)\n      .on('mousemove', rollover_move);\n\n    if (mg_is_singleton(args)) {\n      mg_configure_singleton_rollover(args, svg);\n    }\n  }\n\n  function mg_configure_aggregate_rollover(args, svg) {\n    var rect = svg.selectAll('.mg-rollover-rect rect');\n    var rect_first = rect.nodes()[0][0] || rect.nodes()[0];\n    if (args.data.filter(function(d) { return d.length === 1; }).length > 0) {\n      rect.on('mouseover')(rect_first.__data__, 0);\n    }\n  }\n\n  function mg_is_standard_multiline(args) {\n    return args.data.length > 1 && !args.aggregate_rollover;\n  }\n\n  function mg_is_aggregated_rollover(args) {\n    return args.data.length > 1 && args.aggregate_rollover;\n  }\n\n  function mg_is_singleton(args) {\n    return args.data.length === 1 && args.data[0].length === 1;\n  }\n\n  function mg_draw_all_line_elements(args, plot, svg) {\n    mg_remove_dangling_bands(plot, svg);\n\n    for (var i = args.data.length - 1; i >= 0; i--) {\n      var this_data = args.data[i];\n\n      // passing the data for the current line\n      MG.call_hook('line.before_each_series', [this_data, args]);\n\n      // override increment if we have a custom increment series\n      var line_id = i + 1;\n      if (args.custom_line_color_map.length > 0) {\n        line_id = args.custom_line_color_map[i];\n      }\n\n      args.data[i].line_id = line_id;\n\n      if (this_data.length === 0) {\n        continue;\n      }\n      var existing_line = svg.select('path.mg-main-line.mg-line' + (line_id));\n\n      mg_add_confidence_band(args, plot, svg, line_id);\n      mg_add_area(args, plot, svg, i, line_id);\n      mg_add_line(args, plot, svg, existing_line, i, line_id);\n      mg_add_legend_element(args, plot, i, line_id);\n\n      // passing the data for the current line\n      MG.call_hook('line.after_each_series', [this_data, existing_line, args]);\n    }\n  }\n\n  function mg_remove_dangling_bands(plot, svg) {\n    if (plot.existing_band[0] && plot.existing_band[0].length > svg.selectAll('.mg-main-line').node().length) {\n      svg.selectAll('.mg-confidence-band').remove();\n    }\n  }\n\n  function mg_line_main_plot(args) {\n    var plot = {};\n    var svg = mg_get_svg_child_of(args.target);\n\n    // remove any old legends if they exist\n    mg_selectAll_and_remove(svg, '.mg-line-legend');\n    mg_add_legend_group(args, plot, svg);\n\n    plot.data_median = 0;\n    plot.update_transition_duration = (args.transition_on_update) ? 1000 : 0;\n    plot.display_area = args.area && !args.use_data_y_min && args.data.length <= 1 && args.aggregate_rollover === false;\n    plot.legend_text = '';\n    mg_line_graph_generators(args, plot, svg);\n    plot.existing_band = svg.selectAll('.mg-confidence-band').nodes();\n\n    // should we continue with the default line render? A `line.all_series` hook should return false to prevent the default.\n    var continueWithDefault = MG.call_hook('line.before_all_series', [args]);\n    if (continueWithDefault !== false) {\n      mg_draw_all_line_elements(args, plot, svg);\n    }\n\n    mg_plot_legend_if_legend_target(args.legend_target, plot.legend_text);\n  }\n\n  function mg_line_rollover_setup(args, graph) {\n    var svg = mg_get_svg_child_of(args.target);\n\n    if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n      mg_add_g(svg, 'mg-active-datapoint-container');\n    }\n\n    mg_remove_existing_line_rollover_elements(svg);\n    mg_add_rollover_circle(args, svg);\n    mg_set_unique_line_id_for_each_series(args);\n\n    if (mg_is_standard_multiline(args)) {\n      mg_add_voronoi_rollover(args, svg, graph.rolloverOn(args), graph.rolloverOff(args), graph.rolloverMove(args));\n    } else if (mg_is_aggregated_rollover(args)) {\n      mg_add_aggregate_rollover(args, svg, graph.rolloverOn(args), graph.rolloverOff(args), graph.rolloverMove(args));\n    } else {\n      mg_add_single_line_rollover(args, svg, graph.rolloverOn(args), graph.rolloverOff(args), graph.rolloverMove(args));\n    }\n  }\n\n  function mg_update_rollover_circle(args, svg, d) {\n    if (args.aggregate_rollover && args.data.length > 1) {\n      // hide the circles in case a non-contiguous series is present\n      svg.selectAll('circle.mg-line-rollover-circle')\n        .style('opacity', 0);\n\n      d.values.forEach(function(datum) {\n        if (mg_data_in_plot_bounds(datum, args)) mg_update_aggregate_rollover_circle(args, svg, datum);\n      });\n    } else if ((args.missing_is_hidden && d['_missing']) || d[args.y_accessor] === null) {\n      // disable rollovers for hidden parts of the line\n      // recall that hidden parts are missing data ranges and possibly also\n      // data points that have been explicitly identified as missing\n      return;\n    } else {\n      // show circle on mouse-overed rect\n      if (mg_data_in_plot_bounds(d, args)) {\n        mg_update_generic_rollover_circle(args, svg, d);\n      }\n    }\n  }\n\n  function mg_update_aggregate_rollover_circle(args, svg, datum) {\n    svg.select('circle.mg-line-rollover-circle.mg-line' + datum.line_id)\n      .attr('cx', args.scales.X(datum[args.x_accessor]).toFixed(2))\n      .attr('cy', args.scales.Y(datum[args.y_accessor]).toFixed(2))\n      .attr('r', args.point_size)\n      .style('opacity', 1);\n  }\n\n  function mg_update_generic_rollover_circle(args, svg, d) {\n    svg.selectAll('circle.mg-line-rollover-circle.mg-line' + d.line_id)\n      .classed('mg-line-rollover-circle', true)\n      .attr('cx', function() {\n        return args.scales.X(d[args.x_accessor]).toFixed(2);\n      })\n      .attr('cy', function() {\n        return args.scales.Y(d[args.y_accessor]).toFixed(2);\n      })\n      .attr('r', args.point_size)\n      .style('opacity', 1);\n  }\n\n  function mg_trigger_linked_mouseovers(args, d, i) {\n    if (args.linked && !MG.globals.link) {\n      MG.globals.link = true;\n      if (!args.aggregate_rollover || d.value !== undefined || d.values.length > 0) {\n        var datum = d.values ? d.values[0] : d;\n        var id = mg_rollover_format_id(datum, i, args);\n        // trigger mouseover on matching line in .linked charts\n        d3.selectAll('.' + mg_line_class(datum.line_id) + '.' + mg_rollover_id_class(id))\n          .each(function(d) {\n            d3.select(this)\n              .on('mouseover')(d, i);\n          });\n      }\n    }\n  }\n\n  function mg_trigger_linked_mouseouts(args, d, i) {\n    if (args.linked && MG.globals.link) {\n      MG.globals.link = false;\n\n      var formatter = MG.time_format(args.utc_time, args.linked_format);\n      var datums = d.values ? d.values : [d];\n      datums.forEach(function(datum) {\n        var v = datum[args.x_accessor];\n        var id = (typeof v === 'number') ? i : formatter(v);\n\n        // trigger mouseout on matching line in .linked charts\n        d3.selectAll('.roll_' + id)\n          .each(function(d) {\n            d3.select(this)\n              .on('mouseout')(d);\n          });\n      });\n    }\n  }\n\n  function mg_remove_active_data_points_for_aggregate_rollover(args, svg) {\n    svg.selectAll('circle.mg-line-rollover-circle').filter(function(circle) {\n        return circle.length > 1;\n      })\n      .style('opacity', 0);\n  }\n\n  function mg_remove_active_data_points_for_generic_rollover(args, svg, d) {\n    svg.selectAll('circle.mg-line-rollover-circle.mg-line' + d.line_id)\n      .style('opacity', function() {\n        var id = d.line_id - 1;\n\n        if (args.custom_line_color_map.length > 0 &&\n          args.custom_line_color_map.indexOf(d.line_id) !== undefined\n        ) {\n          id = args.custom_line_color_map.indexOf(d.line_id);\n        }\n\n        if (args.data[id].length === 1) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n  }\n\n  function mg_remove_active_text(svg) {\n    svg.select('.mg-active-datapoint').text('');\n  }\n\n  function lineChart(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      if (!args.data || args.data.length === 0) {\n        args.internal_error = 'No data was supplied';\n        internal_error(args);\n        return this;\n      } else {\n        args.internal_error = undefined;\n      }\n\n      raw_data_transformation(args);\n      process_line(args);\n\n      MG.call_hook('line.before_destroy', this);\n\n      init(args);\n\n      // TODO incorporate markers into calculation of x scales\n      new MG.scale_factory(args)\n        .namespace('x')\n        .numericalDomainFromData()\n        .numericalRange('bottom')\n\n      var baselines = (args.baselines || []).map(function(d) {\n        return d[args.y_accessor];\n      });\n\n      new MG.scale_factory(args)\n        .namespace('y')\n        .zeroBottom(true)\n        .inflateDomain(true)\n        .numericalDomainFromData(baselines)\n        .numericalRange('left');\n\n      var svg = mg_get_svg_child_of(args.target);\n\n      if (args.x_axis) {\n        new MG.axis_factory(args)\n          .namespace('x')\n          .type('numerical')\n          .position(args.x_axis_position)\n          .rug(x_rug(args))\n          .label(mg_add_x_label)\n          .draw();\n      }\n\n      if (args.y_axis) {\n        new MG.axis_factory(args)\n          .namespace('y')\n          .type('numerical')\n          .position(args.y_axis_position)\n          .rug(y_rug(args))\n          .label(mg_add_y_label)\n          .draw();\n      }\n\n      this.markers();\n      this.mainPlot();\n      this.rollover();\n      this.windowListeners();\n\n      MG.call_hook('line.after_init', this);\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      mg_line_main_plot(args);\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      return this;\n    };\n\n    this.rollover = function() {\n      var that = this;\n      mg_line_rollover_setup(args, that);\n      MG.call_hook('line.after_rollover', args);\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n      var fmt = mg_get_rollover_time_format(args);\n\n      return function(d, i) {\n        mg_update_rollover_circle(args, svg, d);\n        mg_trigger_linked_mouseovers(args, d, i);\n\n        svg.selectAll('text')\n          .filter(function(g, j) {\n            return d === g;\n          })\n          .attr('opacity', 0.3);\n\n        // update rollover text except for missing data points\n        if (args.show_rollover_text &&\n            !((args.missing_is_hidden && d['_missing']) || d[args.y_accessor] === null)\n          ) {\n          var mouseover = mg_mouseover_text(args, { svg: svg });\n          var row = mouseover.mouseover_row();\n          if (args.aggregate_rollover) {\n            row.text((args.aggregate_rollover && args.data.length > 1\n              ? mg_format_x_aggregate_mouseover\n              : mg_format_x_mouseover)(args, d));\n          }\n\n          var pts = args.aggregate_rollover && args.data.length > 1\n            ? d.values\n            : [d];\n\n          pts.forEach(function(di) {\n            if (args.aggregate_rollover) {\n              row = mouseover.mouseover_row();\n            }\n\n            if (args.legend) {\n              mg_line_color_text(row.text(args.legend[di.line_id - 1] + '  ').bold().elem(), di, args);\n            }\n\n            mg_line_color_text(row.text('\\u2014  ').elem(), di, args);\n            if (!args.aggregate_rollover) {\n              row.text(mg_format_x_mouseover(args, di));\n            }\n\n            row.text(mg_format_y_mouseover(args, di, args.time_series === false));\n          })\n        }\n\n        if (args.mouseover) {\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        mg_trigger_linked_mouseouts(args, d, i);\n        if (args.aggregate_rollover) {\n          mg_remove_active_data_points_for_aggregate_rollover(args, svg);\n        } else {\n          mg_remove_active_data_points_for_generic_rollover(args, svg, d);\n        }\n\n        if (args.data[0].length > 1) {\n          mg_clear_mouseover_container(svg);\n        }\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  MG.register('line', lineChart);\n}).call(this);\n\n(function() {\n  'use strict';\n\n  function histogram(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      raw_data_transformation(args);\n      process_histogram(args);\n      init(args);\n\n      new MG.scale_factory(args)\n        .namespace('x')\n        .numericalDomainFromData()\n        .numericalRange('bottom');\n\n      var baselines = (args.baselines || []).map(function(d) {\n        return d[args.y_accessor]\n      });\n\n      new MG.scale_factory(args)\n        .namespace('y')\n        .zeroBottom(true)\n        .inflateDomain(true)\n        .numericalDomainFromData(baselines)\n        .numericalRange('left');\n\n      x_axis(args);\n      y_axis(args);\n\n      this.mainPlot();\n      this.markers();\n      this.rollover();\n      this.windowListeners();\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      var svg = mg_get_svg_child_of(args.target);\n\n      //remove the old histogram, add new one\n      svg.selectAll('.mg-histogram').remove();\n\n      var g = svg.append('g')\n        .attr('class', 'mg-histogram');\n\n      var bar = g.selectAll('.mg-bar')\n        .data(args.data[0])\n        .enter().append('g')\n        .attr('class', 'mg-bar')\n        .attr('transform', function(d) {\n          return \"translate(\" + args.scales.X(d[args.x_accessor]).toFixed(2) + \",\" + args.scales.Y(d[args.y_accessor]).toFixed(2) + \")\";\n        });\n\n      //draw bars\n      bar.append('rect')\n        .attr('x', 1)\n        .attr('width', function(d, i) {\n          if (args.data[0].length === 1) {\n            return (args.scalefns.xf(args.data[0][0]) - args.bar_margin).toFixed(0);\n          } else if (i !== args.data[0].length - 1) {\n            return (args.scalefns.xf(args.data[0][i + 1]) - args.scalefns.xf(d)).toFixed(0);\n          } else {\n            return (args.scalefns.xf(args.data[0][1]) - args.scalefns.xf(args.data[0][0])).toFixed(0);\n          }\n        })\n        .attr('height', function(d) {\n          if (d[args.y_accessor] === 0) {\n            return 0;\n          }\n\n          return (args.height - args.bottom - args.buffer - args.scales.Y(d[args.y_accessor])).toFixed(2);\n        });\n\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      return this;\n    };\n\n    this.rollover = function() {\n      var svg = mg_get_svg_child_of(args.target);\n\n      if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n        mg_add_g(svg, 'mg-active-datapoint-container');\n      }\n\n      //remove the old rollovers if they already exist\n      svg.selectAll('.mg-rollover-rect').remove();\n      svg.selectAll('.mg-active-datapoint').remove();\n\n      var g = svg.append('g')\n        .attr('class', 'mg-rollover-rect');\n\n      //draw rollover bars\n      var bar = g.selectAll('.mg-bar')\n        .data(args.data[0])\n        .enter().append('g')\n        .attr('class', function(d, i) {\n          if (args.linked) {\n            return 'mg-rollover-rects roll_' + i;\n          } else {\n            return 'mg-rollover-rects';\n          }\n        })\n        .attr('transform', function(d) {\n          return \"translate(\" + (args.scales.X(d[args.x_accessor])) + \",\" + 0 + \")\";\n        });\n\n      bar.append('rect')\n        .attr('x', 1)\n        .attr('y', args.buffer + args.title_y_position)\n        .attr('width', function(d, i) {\n          //if data set is of length 1\n          if (args.data[0].length === 1) {\n            return (args.scalefns.xf(args.data[0][0]) - args.bar_margin).toFixed(0);\n          } else if (i !== args.data[0].length - 1) {\n            return (args.scalefns.xf(args.data[0][i + 1]) - args.scalefns.xf(d)).toFixed(0);\n          } else {\n            return (args.scalefns.xf(args.data[0][1]) - args.scalefns.xf(args.data[0][0])).toFixed(0);\n          }\n        })\n        .attr('height', function(d) {\n          return args.height;\n        })\n        .attr('opacity', 0)\n        .on('mouseover', this.rolloverOn(args))\n        .on('mouseout', this.rolloverOff(args))\n        .on('mousemove', this.rolloverMove(args));\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        svg.selectAll('text')\n          .filter(function(g, j) {\n            return d === g;\n          })\n          .attr('opacity', 0.3);\n\n        var fmt = args.processed.xax_format || MG.time_format(args.utc_time, '%b %e, %Y');\n        var num = format_rollover_number(args);\n\n        svg.selectAll('.mg-bar rect')\n          .filter(function(d, j) {\n            return j === i;\n          })\n          .classed('active', true);\n\n        //trigger mouseover on all matching bars\n        if (args.linked && !MG.globals.link) {\n          MG.globals.link = true;\n\n          //trigger mouseover on matching bars in .linked charts\n          d3.selectAll('.mg-rollover-rects.roll_' + i + ' rect')\n            .each(function(d) { //use existing i\n              d3.select(this).on('mouseover')(d, i);\n            });\n        }\n\n        //update rollover text\n        if (args.show_rollover_text) {\n          var mo = mg_mouseover_text(args, { svg: svg });\n          var row = mo.mouseover_row();\n          row.text('\\u259F  ').elem()\n            .classed('hist-symbol', true);\n\n          row.text(mg_format_x_mouseover(args, d)); // x\n          row.text(mg_format_y_mouseover(args, d, args.time_series === false));\n        }\n\n        if (args.mouseover) {\n          mg_setup_mouseover_container(svg, args);\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        if (args.linked && MG.globals.link) {\n          MG.globals.link = false;\n\n          //trigger mouseout on matching bars in .linked charts\n          d3.selectAll('.mg-rollover-rects.roll_' + i + ' rect')\n            .each(function(d) { //use existing i\n              d3.select(this).on('mouseout')(d, i);\n            });\n        }\n\n        //reset active bar\n        svg.selectAll('.mg-bar rect')\n          .classed('active', false);\n\n        //reset active data point text\n        mg_clear_mouseover_container(svg);\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    binned: false,\n    bins: null,\n    processed_x_accessor: 'x',\n    processed_y_accessor: 'y',\n    processed_dx_accessor: 'dx',\n    bar_margin: 1\n  };\n\n  MG.register('histogram', histogram, defaults);\n}).call(this);\n\nfunction point_mouseover(args, svg, d) {\n  var mouseover = mg_mouseover_text(args, { svg: svg });\n  var row = mouseover.mouseover_row();\n\n  if (args.color_accessor !== null && args.color_type === 'category') {\n    var label = d[args.color_accessor];\n    row.text(label + '  ').bold().elem().attr('fill', args.scalefns.colorf(d));\n  }\n\n  mg_color_point_mouseover(args, row.text('\\u25CF   ').elem(), d); // point shape\n\n  row.text(mg_format_x_mouseover(args, d)); // x\n  row.text(mg_format_y_mouseover(args, d, args.time_series === false));\n}\n\nfunction mg_color_point_mouseover(args, elem, d) {\n  if (args.color_accessor !== null) {\n    elem.attr('fill', args.scalefns.colorf(d));\n    elem.attr('stroke', args.scalefns.colorf(d));\n  } else {\n    elem.classed('mg-points-mono', true);\n  }\n}\n\n\n(function() {\n  'use strict';\n\n  function mg_filter_out_plot_bounds(data, args) {\n    // max_x, min_x, max_y, min_y;\n    var x = args.x_accessor;\n    var y = args.y_accessor;\n    var new_data = data.filter(function(d) {\n      return (args.min_x === null || d[x] >= args.min_x) &&\n        (args.max_x === null || d[x] <= args.max_x) &&\n        (args.min_y === null || d[y] >= args.min_y) &&\n        (args.max_y === null || d[y] <= args.max_y);\n    })\n    return new_data;\n  }\n\n  function pointChart(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      // infer y_axis and x_axis type;\n      args.x_axis_type = mg_infer_type(args, 'x');\n      args.y_axis_type = mg_infer_type(args, 'y');\n\n      raw_data_transformation(args);\n\n      process_point(args);\n      init(args);\n\n      var xMaker, yMaker;\n\n      if (args.x_axis_type === 'categorical') {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.xgroup_height], args.xgroup_accessor === null);\n\n        if (args.xgroup_accessor) {\n          new MG.scale_factory(args)\n            .namespace('xgroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('bottom');\n\n        } else {\n          args.scales.XGROUP = function(d) {\n            return mg_get_plot_left(args) };\n          args.scalefns.xgroupf = function(d) {\n            return mg_get_plot_left(args) };\n        }\n\n        args.scalefns.xoutf = function(d) {\n          return args.scalefns.xf(d) + args.scalefns.xgroupf(d)\n        };\n      } else {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .inflateDomain(true)\n          .zeroBottom(args.y_axis_type === 'categorical')\n          .numericalDomainFromData((args.baselines || []).map(function(d) {\n            return d[args.x_accessor] }))\n          .numericalRange('bottom');\n\n        args.scalefns.xoutf = args.scalefns.xf;\n      }\n\n      // y-scale generation. This needs to get simplified.\n      if (args.y_axis_type === 'categorical') {\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .zeroBottom(true)\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.ygroup_height], true);\n\n        if (args.ygroup_accessor) {\n\n          new MG.scale_factory(args)\n            .namespace('ygroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('left');\n\n        } else {\n          args.scales.YGROUP = function() {\n            return mg_get_plot_top(args) };\n          args.scalefns.ygroupf = function(d) {\n            return mg_get_plot_top(args) };\n\n        }\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) + args.scalefns.ygroupf(d) };\n\n      } else {\n        var baselines = (args.baselines || []).map(function(d) {\n          return d[args.y_accessor] });\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .inflateDomain(true)\n          .zeroBottom(args.x_axis_type === 'categorical')\n          .numericalDomainFromData(baselines)\n          .numericalRange('left');\n\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) };\n      }\n\n      /////// COLOR accessor\n      if (args.color_accessor !== null) {\n        var colorScale = MG.scale_factory(args).namespace('color');\n        if (args.color_type === 'number') {\n          // do the color scale.\n          // etiher get color range, or what.\n          colorScale\n            .numericalDomainFromData(mg_get_color_domain(args))\n            .numericalRange(mg_get_color_range(args))\n            .clamp(true);\n        } else {\n          if (args.color_domain) {\n            colorScale\n              .categoricalDomain(args.color_domain)\n              .categoricalRange(args.color_range);\n          } else {\n            colorScale\n              .categoricalDomainFromData()\n              .categoricalColorRange();\n          }\n        }\n      }\n\n      if (args.size_accessor) {\n        new MG.scale_factory(args).namespace('size')\n          .numericalDomainFromData()\n          .numericalRange(mg_get_size_range(args))\n          .clamp(true);\n      }\n\n      new MG.axis_factory(args)\n        .namespace('x')\n        .type(args.x_axis_type)\n        .zeroLine(args.y_axis_type === 'categorical')\n        .position(args.x_axis_position)\n        .rug(x_rug(args))\n        .label(mg_add_x_label)\n        .draw();\n\n      new MG.axis_factory(args)\n        .namespace('y')\n        .type(args.y_axis_type)\n        .zeroLine(args.x_axis_type === 'categorical')\n        .position(args.y_axis_position)\n        .rug(y_rug(args))\n        .label(mg_add_y_label)\n        .draw();\n\n      this.mainPlot();\n      this.markers();\n      this.rollover();\n      this.windowListeners();\n\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      if (args.least_squares) {\n        add_ls(args);\n      }\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      var svg = mg_get_svg_child_of(args.target);\n      var g;\n\n      var data = mg_filter_out_plot_bounds(args.data[0], args);\n      //remove the old points, add new one\n      svg.selectAll('.mg-points').remove();\n\n      g = svg.append('g')\n        .classed('mg-points', true);\n\n\n      var pts = g.selectAll('circle')\n        .data(data)\n        .enter().append('circle')\n        .attr('class', function(d, i) {\n          return 'path-' + i;\n        })\n        .attr('cx', args.scalefns.xoutf)\n        .attr('cy', function(d) {\n          return args.scalefns.youtf(d);\n        });\n\n      //are we coloring our points, or just using the default color?\n      if (args.color_accessor !== null) {\n        pts.attr('fill', args.scalefns.colorf);\n        pts.attr('stroke', args.scalefns.colorf);\n      } else {\n        pts.classed('mg-points-mono', true);\n      }\n\n      if (args.size_accessor !== null) {\n        pts.attr('r', args.scalefns.sizef);\n      } else {\n        pts.attr('r', args.point_size);\n      }\n\n      return this;\n    };\n\n    this.rollover = function() {\n      var svg = mg_get_svg_child_of(args.target);\n\n      if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n        mg_add_g(svg, 'mg-active-datapoint-container');\n      }\n\n      //remove the old rollovers if they already exist\n      svg.selectAll('.mg-voronoi').remove();\n\n      //add rollover paths\n      var voronoi = d3.voronoi()\n        .x(args.scalefns.xoutf)\n        .y(args.scalefns.youtf)\n        .extent([\n          [args.buffer, args.buffer + args.title_y_position],\n          [args.width - args.buffer, args.height - args.buffer]\n        ]);\n\n      var paths = svg.append('g')\n        .attr('class', 'mg-voronoi');\n\n      paths.selectAll('path')\n        .data(voronoi.polygons(mg_filter_out_plot_bounds(args.data[0], args)))\n        .enter().append('path')\n        .attr('d', function(d) {\n          return d == null ? null : 'M' + d.join(',') + 'Z'; })\n        .attr('class', function(d, i) {\n          return 'path-' + i;\n        })\n        .style('fill-opacity', 0)\n        .on('mouseover', this.rolloverOn(args))\n        .on('mouseout', this.rolloverOff(args))\n        .on('mousemove', this.rolloverMove(args));\n\n      if (args.data[0].length === 1) {\n        point_mouseover(args, svg, args.data[0][0]);\n      }\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        svg.selectAll('.mg-points circle')\n          .classed('selected', false);\n\n        //highlight active point\n        var pts = svg.selectAll('.mg-points circle.path-' + i)\n          .classed('selected', true);\n\n        if (args.size_accessor) {\n          pts.attr('r', function(di) {\n            return args.scalefns.sizef(di) + args.active_point_size_increase;\n          });\n        } else {\n          pts.attr('r', args.point_size + args.active_point_size_increase);\n        }\n\n        //trigger mouseover on all points for this class name in .linked charts\n        if (args.linked && !MG.globals.link) {\n          MG.globals.link = true;\n\n          //trigger mouseover on matching point in .linked charts\n          d3.selectAll('.mg-voronoi .path-' + i)\n            .each(function() {\n              d3.select(this).on('mouseover')(d, i);\n            });\n        }\n\n        if (args.show_rollover_text) {\n          point_mouseover(args, svg, d.data);\n        }\n\n        if (args.mouseover) {\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        if (args.linked && MG.globals.link) {\n          MG.globals.link = false;\n\n          d3.selectAll('.mg-voronoi .path-' + i)\n            .each(function() {\n              d3.select(this).on('mouseout')(d, i);\n            });\n        }\n\n        //reset active point\n        var pts = svg.selectAll('.mg-points circle')\n          .classed('unselected', false)\n          .classed('selected', false);\n\n        if (args.size_accessor) {\n          pts.attr('r', args.scalefns.sizef);\n        } else {\n          pts.attr('r', args.point_size);\n        }\n\n        //reset active data point text\n        if (args.data[0].length > 1) mg_clear_mouseover_container(svg);\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.update = function(args) {\n      return this;\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    y_padding_percentage: 0.05, // for categorical scales\n    y_outer_padding_percentage: .2, // for categorical scales\n    ygroup_padding_percentage: 0, // for categorical scales\n    ygroup_outer_padding_percentage: 0, // for categorical scales\n    x_padding_percentage: 0.05, // for categorical scales\n    x_outer_padding_percentage: .2, // for categorical scales\n    xgroup_padding_percentage: 0, // for categorical scales\n    xgroup_outer_padding_percentage: 0, // for categorical scales\n    y_categorical_show_guides: true,\n    x_categorical_show_guides: true,\n    buffer: 16,\n    ls: false,\n    lowess: false,\n    point_size: 2.5,\n    label_accessor: null,\n    size_accessor: null,\n    color_accessor: null,\n    size_range: null, // when we set a size_accessor option, this array determines the size range, e.g. [1,5]\n    color_range: null, // e.g. ['blue', 'red'] to color different groups of points\n    size_domain: null,\n    color_domain: null,\n    active_point_size_increase: 1,\n    color_type: 'number' // can be either 'number' - the color scale is quantitative - or 'category' - the color scale is qualitative.\n  };\n\n  MG.register('point', pointChart, defaults);\n}).call(this);\n\n(function() {\n  'use strict';\n\n  // TODO add styles to stylesheet instead\n  function scaffold(args) {\n    var svg = mg_get_svg_child_of(args.target);\n    // main margins\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.top)\n      .attr('y2', args.top)\n      .attr('stroke', 'black');\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.height-args.bottom)\n      .attr('y2', args.height-args.bottom)\n      .attr('stroke', 'black');\n\n    svg.append('line')\n      .attr('x1', args.left)\n      .attr('x2', args.left)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'black');\n\n    svg.append('line')\n      .attr('x1', args.width-args.right)\n      .attr('x2', args.width-args.right)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'black');\n\n    // plot area margins\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.height-args.bottom-args.buffer)\n      .attr('y2', args.height-args.bottom-args.buffer)\n      .attr('stroke', 'gray');\n\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.top+args.buffer)\n      .attr('y2', args.top+args.buffer)\n      .attr('stroke', 'gray');\n\n    svg.append('line')\n      .attr('x1', args.left + args.buffer)\n      .attr('x2', args.left + args.buffer)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'gray');\n    svg.append('line')\n      .attr('x1', args.width -args.right - args.buffer)\n      .attr('x2', args.width -args.right - args.buffer)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'gray');\n  }\n\n  // barchart re-write.\n  function mg_targeted_legend(args) {\n    var labels;\n    var plot = '';\n    if (args.legend_target) {\n\n      var div = d3.select(args.legend_target).append('div').classed('mg-bar-target-legend', true);\n      \n      if (args.orientation == 'horizontal') labels = args.scales.Y.domain()\n      else labels = args.scales.X.domain();\n\n      labels.forEach(function(label) {\n        var outer_span = div.append('span').classed('mg-bar-target-element', true);\n        outer_span.append('span')\n          .classed('mg-bar-target-legend-shape', true)\n          .style('color', args.scales.COLOR(label))\n          .text('\\u25FC ');\n        outer_span.append('span')\n          .classed('mg-bar-target-legend-text', true)\n          .text(label);\n\n      });\n    }\n  }\n\n  function legend_on_graph(svg, args) {\n    // draw each element at the top right\n    // get labels\n\n    var labels;\n    if (args.orientation=='horizontal') labels = args.scales.Y.domain()\n    else labels = args.scales.X.domain();\n\n    var lineCount = 0;\n    var lineHeight = 1.1;\n    var g = svg.append('g').classed(\"mg-bar-legend\", true);\n    var textContainer = g.append('text');\n\n    //\n\n    textContainer\n      .selectAll('*')\n      .remove();\n    textContainer\n      .attr('width', args.right)\n      .attr('height', 100)\n      .attr('text-anchor', 'start');\n\n    labels.forEach(function(label) {\n      var sub_container = textContainer.append('tspan')\n        .attr('x', mg_get_plot_right(args))\n        .attr('y', args.height / 2)\n        .attr('dy', (lineCount * lineHeight) + 'em');\n      sub_container.append('tspan')\n        .text('\\u25a0 ')\n        .attr('fill', args.scales.COLOR(label))\n        .attr('font-size', 20)\n      sub_container.append('tspan')\n        .text(label)\n        .attr('font-weight', 300)\n        .attr('font-size', 10);\n      lineCount++;\n    })\n\n    // d.values.forEach(function (datum) {\n    //   formatted_y = mg_format_y_rollover(args, num, datum);\n\n    //   if (args.y_rollover_format !== null) {\n    //     formatted_y = number_rollover_format(args.y_rollover_format, datum, args.y_accessor);\n    //   } else {\n    //     formatted_y = args.yax_units + num(datum[args.y_accessor]);\n    //   }\n\n    //   sub_container = textContainer.append('tspan').attr('x', 0).attr('y', (lineCount * lineHeight) + 'em');\n    //   formatted_y = mg_format_y_rollover(args, num, datum);\n    //   mouseover_tspan(sub_container, '\\u2014  ')\n    //     .color(args, datum);\n    //   mouseover_tspan(sub_container, formatted_x + ' ' + formatted_y);\n\n    //   lineCount++;\n    // });\n  }\n\n  function barChart(args) {\n    this.args = args;\n\n    this.init = function(args) {\n      this.args = args;\n      args.x_axis_type = mg_infer_type(args, 'x');\n      args.y_axis_type = mg_infer_type(args, 'y');\n\n      // this is specific to how rects work in svg, let's keep track of the bar orientation to\n      // plot appropriately.\n      if (args.x_axis_type == 'categorical') {\n        args.orientation = 'vertical';\n      } else if (args.y_axis_type == 'categorical') {\n        args.orientation = 'horizontal';\n      } else if (args.x_axis_type != 'categorical' && args.y_axis_type != 'categorical') {\n        // histogram.\n        args.orientation = 'vertical';\n      }\n\n      raw_data_transformation(args);\n\n      process_point(args);\n      init(args);\n\n      var xMaker, yMaker;\n\n      if (args.x_axis_type === 'categorical') {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.xgroup_height], args.xgroup_accessor === null);\n\n        if (args.xgroup_accessor) {\n          new MG.scale_factory(args)\n            .namespace('xgroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('bottom');\n\n        } else {\n          args.scales.XGROUP = function(d) {\n            return mg_get_plot_left(args) };\n          args.scalefns.xgroupf = function(d) {\n            return mg_get_plot_left(args) };\n        }\n\n        args.scalefns.xoutf = function(d) {\n          return args.scalefns.xf(d) + args.scalefns.xgroupf(d)\n        };\n      } else {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .inflateDomain(true)\n          .zeroBottom(args.y_axis_type === 'categorical')\n          .numericalDomainFromData((args.baselines || []).map(function(d) {\n            return d[args.x_accessor] }))\n          .numericalRange('bottom');\n\n        args.scalefns.xoutf = args.scalefns.xf;\n      }\n\n      // y-scale generation. This needs to get simplified.\n      if (args.y_axis_type === 'categorical') {\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .zeroBottom(true)\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.ygroup_height], true);\n\n        if (args.ygroup_accessor) {\n\n          new MG.scale_factory(args)\n            .namespace('ygroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('left');\n\n        } else {\n          args.scales.YGROUP = function() {\n            return mg_get_plot_top(args) };\n          args.scalefns.ygroupf = function(d) {\n            return mg_get_plot_top(args) };\n\n        }\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) + args.scalefns.ygroupf(d) };\n\n      } else {\n        var baselines = (args.baselines || []).map(function(d) {\n          return d[args.y_accessor] });\n\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .inflateDomain(true)\n          .zeroBottom(args.x_axis_type === 'categorical')\n          .numericalDomainFromData(baselines)\n          .numericalRange('left');\n\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) };\n      }\n\n      if (args.ygroup_accessor !== null) {\n        args.ycolor_accessor = args.y_accessor;\n        MG.scale_factory(args)\n          .namespace('ycolor')\n          .scaleName('color')\n          .categoricalDomainFromData()\n          .categoricalColorRange();\n      }\n\n      if (args.xgroup_accessor !== null) {\n        args.xcolor_accessor = args.x_accessor;\n        MG.scale_factory(args)\n          .namespace('xcolor')\n          .scaleName('color')\n          .categoricalDomainFromData()\n          .categoricalColorRange();\n      }\n\n      // if (args.ygroup_accessor !== null) {\n      //   MG.scale_factory(args)\n      //     .namespace('ygroup')\n      //     .categoricalDomainFromData()\n      //     .categoricalColorRange();\n      // }\n\n      new MG.axis_factory(args)\n        .namespace('x')\n        .type(args.x_axis_type)\n        .zeroLine(args.y_axis_type === 'categorical')\n        .position(args.x_axis_position)\n        .draw();\n\n      new MG.axis_factory(args)\n        .namespace('y')\n        .type(args.y_axis_type)\n        .zeroLine(args.x_axis_type === 'categorical')\n        .position(args.y_axis_position)\n        .draw();\n\n      //mg_categorical_group_color_scale(args);\n\n      this.mainPlot();\n      this.markers();\n      this.rollover();\n      this.windowListeners();\n      //scaffold(args)\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      var svg = mg_get_svg_child_of(args.target);\n      var data = args.data[0];\n      var barplot = svg.select('g.mg-barplot');\n      var fresh_render = barplot.empty();\n\n      var bars;\n      var predictor_bars;\n      var pp, pp0;\n      var baseline_marks;\n\n      var perform_load_animation = fresh_render && args.animate_on_load;\n      var should_transition = perform_load_animation || args.transition_on_update;\n      var transition_duration = args.transition_duration || 1000;\n\n      // draw the plot on first render\n      if (fresh_render) {\n        barplot = svg.append('g')\n          .classed('mg-barplot', true);\n      }\n\n      bars = barplot.selectAll('.mg-bar')\n        .data(data)\n        .enter()\n        .append('rect')\n          .classed('mg-bar', true)\n          .classed('default-bar', args.scales.hasOwnProperty('COLOR') ? false : true);\n\n      // TODO - reimplement\n\n      // reference_accessor {}\n\n      // if (args.predictor_accessor) {\n      //   predictor_bars = barplot.selectAll('.mg-bar-prediction')\n      //     .data(data.filter(function(d) {\n      //       return d.hasOwnProperty(args.predictor_accessor) }));\n\n      //   predictor_bars.exit().remove();\n\n      //   predictor_bars.enter().append('rect')\n      //     .classed('mg-bar-prediction', true);\n      // }\n\n      // if (args.baseline_accessor) {\n      //   baseline_marks = barplot.selectAll('.mg-bar-baseline')\n      //     .data(data.filter(function(d) {\n      //       return d.hasOwnProperty(args.baseline_accessor) }));\n\n      //   baseline_marks.exit().remove();\n\n      //   baseline_marks.enter().append('line')\n      //     .classed('mg-bar-baseline', true);\n      // }\n\n      var appropriate_size;\n\n      // setup transitions\n      // if (should_transition) {\n      //   bars = bars.transition()\n      //     .duration(transition_duration);\n\n      //   if (predictor_bars) {\n      //     predictor_bars = predictor_bars.transition()\n      //       .duration(transition_duration);\n      //   }\n\n      //   if (baseline_marks) {\n      //     baseline_marks = baseline_marks.transition()\n      //       .duration(transition_duration);\n      //   }\n      // }\n\n      //appropriate_size = args.scales.Y_ingroup.rangeBand()/1.5;\n      var length, width, length_type, width_type, length_coord, width_coord,\n          length_scalefn, width_scalefn, length_scale, width_scale,\n          length_accessor, width_accessor, length_coord_map, width_coord_map,\n          length_map, width_map;\n\n      var reference_length_map, reference_length_coord_fn;\n\n      if (args.orientation == 'vertical') {\n        length = 'height';\n        width = 'width';\n        length_type = args.y_axis_type;\n        width_type = args.x_axis_type;\n        length_coord = 'y';\n        width_coord = 'x';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        width_scalefn  = width_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        length_scale   = args.scales.Y;\n        width_scale     = args.scales.X;\n        length_accessor = args.y_accessor;\n        width_accessor = args.x_accessor;\n\n        length_coord_map = function(d) {\n          var l;\n          l = length_scalefn(d);\n          if (d[length_accessor] < 0) {\n            l = length_scale(0);\n          }\n          return l;\n        }\n\n        length_map = function(d) {\n          return Math.abs(length_scalefn(d) - length_scale(0));\n        }\n\n        reference_length_map = function(d) {\n          return Math.abs(length_scale(d[args.reference_accessor]) - length_scale(0));\n        }\n\n        reference_length_coord_fn = function(d){\n          return length_scale(d[args.reference_accessor]);\n        }\n      }\n\n      if (args.orientation == 'horizontal') {\n        length = 'width';\n        width = 'height';\n        length_type = args.x_axis_type;\n        width_type = args.y_axis_type;\n        length_coord = 'x';\n        width_coord = 'y';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        width_scalefn = width_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        length_scale = args.scales.X;\n        width_scale = args.scales.Y;\n        length_accessor = args.x_accessor;\n        width_accessor = args.y_accessor;\n\n        length_coord_map = function(d) {\n          var l;\n          l = length_scale(0);\n          return l;\n        }\n\n        length_map = function(d) {\n          return Math.abs(length_scalefn(d) - length_scale(0));\n        }\n\n        reference_length_map = function(d) {\n          return Math.abs(length_scale(d[args.reference_accessor]) - length_scale(0));\n        }\n\n        reference_length_coord_fn = function(d){\n          return length_scale(0);\n        }\n      }\n\n      // if (perform_load_animation) {\n      //   bars.attr(length, 0);\n\n      //   if (predictor_bars) {\n      //     predictor_bars.attr(length, 0);\n      //   }\n\n      //   // if (baseline_marks) {\n      //   //   baseline_marks.attr({\n      //   //     x1: args.scales.X(0),\n      //   //     x2: args.scales.X(0)\n      //   //   });\n      //   // }\n      // }\n\n      bars.attr(length_coord, length_coord_map);\n\n      // bars.attr(length_coord, 40)\n      //bars.attr(width_coord, 70)\n\n\n\n      bars.attr(width_coord, function(d) {\n        var w;\n        if (width_type == 'categorical') {\n          w = width_scalefn(d);\n        } else {\n          w = width_scale(0);\n          if (d[width_accessor] < 0) {\n            w = width_scalefn(d);\n          }\n        }\n        w = w - args.bar_thickness/2;\n        return w;\n      });\n\n      if (args.scales.COLOR) {\n        bars.attr('fill', args.scalefns.colorf)\n      }\n\n      bars\n        .attr(length, length_map)\n        .attr(width, function(d) {\n          return args.bar_thickness;\n      });\n\n\n\n\n      if (args.reference_accessor !== null) {\n        var reference_data = data.filter(function(d){\n          return d.hasOwnProperty(args.reference_accessor);\n        })\n        var reference_bars = barplot.selectAll('.mg-categorical-reference')\n          .data(reference_data)\n          .enter()\n          .append('rect');\n\n        reference_bars\n          .attr(length_coord, reference_length_coord_fn)\n          .attr(width_coord, function(d) {\n            return width_scalefn(d) - args.reference_thickness/2\n          })\n          .attr(length, reference_length_map)\n          .attr(width, args.reference_thickness);\n      }\n\n      if (args.comparison_accessor !== null) {\n        var comparison_thickness = null;\n        if (args.comparison_thickness === null) {\n          comparison_thickness = args.bar_thickness/2;\n        } else {\n          comparison_thickness = args.comparison_thickness;\n        }\n\n\n        var comparison_data = data.filter(function(d) {\n          return d.hasOwnProperty(args.comparison_accessor);\n        })\n        var comparison_marks = barplot.selectAll('.mg-categorical-comparison')\n          .data(comparison_data)\n          .enter()\n          .append('line');\n\n        comparison_marks\n          .attr(length_coord + '1', function(d){return length_scale(d[args.comparison_accessor])})\n          .attr(length_coord + '2', function(d){return length_scale(d[args.comparison_accessor])})\n          .attr(width_coord + '1',  function(d){\n            return width_scalefn(d) - comparison_thickness/2;\n          })\n          .attr(width_coord + '2', function(d) {\n            return width_scalefn(d) + comparison_thickness/2;\n          })\n          .attr('stroke', 'black')\n          .attr('stroke-width', args.comparison_width);\n      }\n\n        //bars.attr(width_coord, );\n        // bars.attr('width', 50);\n        // bars.attr('height', 50);\n        // bars.attr('y', function(d){\n        //   var y = args.scales.Y(0);\n        //   if (d[args.y_accessor] < 0) {\n        //     y = args.scalefns.yf(d);\n        //   }\n        //   return y;\n        // });\n\n        // bars.attr('x', function(d){\n        //   return 40;\n        // })\n\n        // bars.attr('width', function(d){\n        //   return 100;\n        // });\n\n        // bars.attr('height', 100);\n\n        // bars.attr('fill', 'black');\n        // bars.attr('x', function(d) {\n        //   var x = args.scales.X(0);\n        //   if (d[args.x_accessor] < 0) {\n        //     x = args.scalefns.xf(d);\n        //   }\n        //   return x;\n        // })\n        // TODO - reimplement.\n        // if (args.predictor_accessor) {\n        //   predictor_bars\n        //     .attr('x', args.scales.X(0))\n        //     .attr('y', function(d) {\n        //       return args.scalefns.ygroupf(d) + args.scalefns.yf(d) + args.scales.Y.rangeBand() * (7 / 16) // + pp0 * appropriate_size/(pp*2) + appropriate_size / 2;\n        //     })\n        //     .attr('height', args.scales.Y.rangeBand() / 8) //appropriate_size / pp)\n        //     .attr('width', function(d) {\n        //       return args.scales.X(d[args.predictor_accessor]) - args.scales.X(0);\n        //     });\n        // }\n\n      // TODO - reimplement.\n      //   if (args.baseline_accessor) {\n\n      //     baseline_marks\n      //       .attr('x1', function(d) {\n      //         return args.scales.X(d[args.baseline_accessor]); })\n      //       .attr('x2', function(d) {\n      //         return args.scales.X(d[args.baseline_accessor]); })\n      //       .attr('y1', function(d) {\n      //         return args.scalefns.ygroupf(d) + args.scalefns.yf(d) + args.scales.Y.rangeBand() / 4\n      //       })\n      //       .attr('y2', function(d) {\n      //         return args.scalefns.ygroupf(d) + args.scalefns.yf(d) + args.scales.Y.rangeBand() * 3 / 4\n      //       });\n      //   }\n        if (args.legend || (args.color_accessor !== null && args.ygroup_accessor !== args.color_accessor)) {\n        if (!args.legend_target) legend_on_graph(svg, args);\n        else mg_targeted_legend(args);\n      }\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      return this;\n    };\n\n    this.rollover = function() {\n      var svg = mg_get_svg_child_of(args.target);\n      var g;\n\n      if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n        mg_add_g(svg, 'mg-active-datapoint-container');\n      }\n\n      //remove the old rollovers if they already exist\n      svg.selectAll('.mg-rollover-rect').remove();\n      svg.selectAll('.mg-active-datapoint').remove();\n\n      // get orientation\n      var length, width, length_type, width_type, length_coord, width_coord,\n        length_scalefn, width_scalefn, length_scale, width_scale,\n        length_accessor, width_accessor;\n\n      var length_coord_map, width_coord_map, length_map, width_map;\n\n      if (args.orientation == 'vertical') {\n        length = 'height';\n        width = 'width';\n        length_type = args.y_axis_type;\n        width_type = args.x_axis_type;\n        length_coord = 'y';\n        width_coord = 'x';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        width_scalefn  = width_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        length_scale   = args.scales.Y;\n        width_scale     = args.scales.X;\n        length_accessor = args.y_accessor;\n        width_accessor = args.x_accessor;\n\n        length_coord_map = function(d){\n          return mg_get_plot_top(args);\n        }\n\n        length_map = function(d) {\n          return args.height -args.top-args.bottom-args.buffer*2\n        }\n      }\n\n      if (args.orientation == 'horizontal') {\n        length = 'width';\n        width = 'height';\n        length_type = args.x_axis_type;\n        width_type = args.y_axis_type;\n        length_coord = 'x';\n        width_coord = 'y';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        width_scalefn = width_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        length_scale = args.scales.X;\n        width_scale = args.scales.Y;\n        length_accessor = args.x_accessor;\n        width_accessor = args.y_accessor;\n\n        length_coord_map = function(d){\n          var l;\n          l = length_scale(0);\n          return l;\n        }\n\n        length_map = function(d) {\n          return args.width -args.left-args.right-args.buffer*2\n        }\n      }\n\n      //rollover text\n      var rollover_x, rollover_anchor;\n      if (args.rollover_align === 'right') {\n        rollover_x = args.width - args.right;\n        rollover_anchor = 'end';\n      } else if (args.rollover_align === 'left') {\n        rollover_x = args.left;\n        rollover_anchor = 'start';\n      } else {\n        rollover_x = (args.width - args.left - args.right) / 2 + args.left;\n        rollover_anchor = 'middle';\n      }\n\n      svg.append('text')\n        .attr('class', 'mg-active-datapoint')\n        .attr('xml:space', 'preserve')\n        .attr('x', rollover_x)\n        .attr('y', args.top * 0.75)\n        .attr('dy', '.35em')\n        .attr('text-anchor', rollover_anchor);\n\n      g = svg.append('g')\n        .attr('class', 'mg-rollover-rect');\n\n      //draw rollover bars\n      var bars = g.selectAll(\".mg-bar-rollover\")\n        .data(args.data[0]).enter()\n        .append(\"rect\")\n        .attr('class', 'mg-bar-rollover');\n\n      bars.attr('opacity', 0)\n        .attr(length_coord, length_coord_map)\n        .attr(width_coord, function(d) {\n          var w;\n          if (width_type == 'categorical') {\n            w = width_scalefn(d);\n          } else {\n            w = width_scale(0);\n            if (d[width_accessor] < 0) {\n              w = width_scalefn(d);\n            }\n          }\n          w = w - args.bar_thickness/2;\n          return w;\n        });\n\n      bars.attr(length, length_map)\n      bars.attr(width, function(d) {\n        return args.bar_thickness;\n      });\n\n      bars\n        .on('mouseover', this.rolloverOn(args))\n        .on('mouseout', this.rolloverOff(args))\n        .on('mousemove', this.rolloverMove(args));\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n      var label_accessor = this.is_vertical ? args.x_accessor : args.y_accessor;\n      var data_accessor = this.is_vertical ? args.y_accessor : args.x_accessor;\n      var label_units = this.is_vertical ? args.yax_units : args.xax_units;\n\n      return function(d, i) {\n\n        var fmt = MG.time_format(args.utc_time, '%b %e, %Y');\n        var num = format_rollover_number(args);\n\n        //highlight active bar\n        var bar = svg.selectAll('g.mg-barplot .mg-bar')\n          .filter(function(d, j) {\n            return j === i;\n          }).classed('active', true);\n\n        if (args.scales.hasOwnProperty('COLOR')) {\n          bar.attr('fill', d3.rgb(args.scalefns.colorf(d)).darker());\n        } else {\n          bar.classed('default-active', true);\n        }\n\n        //update rollover text\n        if (args.show_rollover_text) {\n          var mouseover = mg_mouseover_text(args, { svg: svg });\n          var row = mouseover.mouseover_row();\n\n          if (args.ygroup_accessor) row.text(d[args.ygroup_accessor] + '   ').bold();\n\n          row.text(mg_format_x_mouseover(args, d));\n          row.text(args.y_accessor + ': ' + d[args.y_accessor]);\n          if (args.predictor_accessor || args.baseline_accessor) {\n            row = mouseover.mouseover_row();\n\n            if (args.predictor_accessor) row.text(mg_format_data_for_mouseover(args, d, null, args.predictor_accessor, false))\n            if (args.baseline_accessor) row.text(mg_format_data_for_mouseover(args, d, null, args.baseline_accessor, false))\n          }\n        }\n        if (args.mouseover) {\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        //reset active bar\n        var bar = svg.selectAll('g.mg-barplot .mg-bar.active').classed('active', false);\n\n        if (args.scales.hasOwnProperty('COLOR')) {\n          bar.attr('fill', args.scalefns.colorf(d));\n        } else {\n          bar.classed('default-active', false);\n        }\n\n        //reset active data point text\n        svg.select('.mg-active-datapoint')\n          .text('');\n\n        mg_clear_mouseover_container(svg);\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    y_padding_percentage: 0.05, // for categorical scales\n    y_outer_padding_percentage: .2, // for categorical scales\n    ygroup_padding_percentage: 0, // for categorical scales\n    ygroup_outer_padding_percentage: 0, // for categorical scales\n    x_padding_percentage: 0.05, // for categorical scales\n    x_outer_padding_percentage: .2, // for categorical scales\n    xgroup_padding_percentage: 0, // for categorical scales\n    xgroup_outer_padding_percentage: 0, // for categorical scales\n    buffer: 16,\n    y_accessor: 'factor',\n    x_accessor: 'value',\n    reference_accessor: null,\n    comparison_accessor: null,\n    secondary_label_accessor: null,\n    color_accessor: null,\n    color_type: 'category',\n    color_domain: null,\n    reference_thickness: 1,\n    comparison_width: 3,\n    comparison_thickness: null,\n    legend: false,\n    legend_target: null,\n    mouseover_align: 'right',\n    baseline_accessor: null,\n    predictor_accessor: null,\n    predictor_proportion: 5,\n    show_bar_zero: true,\n    binned: true,\n    truncate_x_labels: true,\n    truncate_y_labels: true\n  };\n\n  MG.register('bar', barChart, defaults);\n\n}).call(this);\n\n/*\nData Tables\n\nAlong with histograms, bars, lines, and scatters, a simple data table can take you far.\nWe often just want to look at numbers, organized as a table, where columns are variables,\nand rows are data points. Sometimes we want a cell to have a small graphic as the main\ncolumn element, in which case we want small multiples. sometimes we want to\n\nvar table = New data_table(data)\n        .target('div#data-table')\n        .title({accessor: 'point_name', align: 'left'})\n        .description({accessor: 'description'})\n        .number({accessor: ''})\n\n*/\n\nMG.data_table = function(args) {\n  'use strict';\n  this.args = args;\n  this.args.standard_col = { width: 150, font_size: 12, font_weight: 'normal' };\n  this.args.columns = [];\n  this.formatting_options = [\n    ['color', 'color'],\n    ['font-weight', 'font_weight'],\n    ['font-style', 'font_style'],\n    ['font-size', 'font_size']\n  ];\n\n  this._strip_punctuation = function(s) {\n    var punctuationless = s.replace(/[^a-zA-Z0-9 _]+/g, '');\n    var finalString = punctuationless.replace(/ +?/g, '');\n    return finalString;\n  };\n\n  this._format_element = function(element, value, args) {\n    this.formatting_options.forEach(function(fo) {\n      var attr = fo[0];\n      var key = fo[1];\n      if (args[key]) element.style(attr,\n        typeof args[key] === 'string' ||\n        typeof args[key] === 'number' ?\n        args[key] : args[key](value));\n    });\n  };\n\n  this._add_column = function(_args, arg_type) {\n    var standard_column = this.args.standard_col;\n    var args = merge_with_defaults(MG.clone(_args), MG.clone(standard_column));\n    args.type = arg_type;\n    this.args.columns.push(args);\n  };\n\n  this.target = function() {\n    var target = arguments[0];\n    this.args.target = target;\n    return this;\n  };\n\n  this.title = function() {\n    this._add_column(arguments[0], 'title');\n    return this;\n  };\n\n  this.text = function() {\n    this._add_column(arguments[0], 'text');\n    return this;\n  };\n\n  this.bullet = function() {\n    /*\n    text label\n    main value\n    comparative measure\n    any number of ranges\n\n    additional args:\n    no title\n    xmin, xmax\n    format: percentage\n    xax_formatter\n    */\n    return this;\n  };\n\n  this.sparkline = function() {\n    return this;\n  };\n\n  this.number = function() {\n    this._add_column(arguments[0], 'number');\n    return this;\n  };\n\n  this.display = function() {\n    var args = this.args;\n\n    chart_title(args);\n\n    var target = args.target;\n    var table = d3.select(target).append('table').classed('mg-data-table', true);\n    var colgroup = table.append('colgroup');\n    var thead = table.append('thead');\n    var tbody = table.append('tbody');\n    var this_column;\n    var this_title;\n\n    var tr, th, td_accessor, td_type, td_value, th_text, td_text, td;\n    var col;\n    var h;\n\n    tr = thead.append('tr');\n\n    for (h = 0; h < args.columns.length; h++) {\n      var this_col = args.columns[h];\n      td_type = this_col.type;\n      th_text = this_col.label;\n      th_text = th_text === undefined ? '' : th_text;\n      th = tr.append('th')\n        .style('width', this_col.width)\n        .style('text-align', td_type === 'title' ? 'left' : 'right')\n        .text(th_text);\n\n      if (args.show_tooltips && this_col.description && mg_jquery_exists()) {\n        th.append('i')\n          .classed('fa', true)\n          .classed('fa-question-circle', true)\n          .classed('fa-inverse', true);\n\n        $(th.node()).popover({\n          html: true,\n          animation: false,\n          content: this_col.description,\n          trigger: 'hover',\n          placement: 'top',\n          container: $(th.node())\n        });\n      }\n    }\n\n    for (h = 0; h < args.columns.length; h++) {\n      col = colgroup.append('col');\n      if (args.columns[h].type === 'number') {\n        col.attr('align', 'char').attr('char', '.');\n      }\n    }\n\n    for (var i = 0; i < args.data.length; i++) {\n      tr = tbody.append('tr');\n      for (var j = 0; j < args.columns.length; j++) {\n        this_column = args.columns[j];\n        td_accessor = this_column.accessor;\n        td_value = td_text = args.data[i][td_accessor];\n        td_type = this_column.type;\n\n        if (td_type === 'number') {\n          //td_text may need to be rounded\n          if (this_column.hasOwnProperty('round') && !this_column.hasOwnProperty('format')) {\n            // round according to the number value in this_column.round\n            td_text = d3.format('0,.' + this_column.round + 'f')(td_text);\n          }\n\n          if (this_column.hasOwnProperty('value_formatter')) {\n            // provide a function that formats the text according to the function this_column.format.\n            td_text = this_column.value_formatter(td_text);\n          }\n\n          if (this_column.hasOwnProperty('format')) {\n            // this is a shorthand for percentage formatting, and others if need be.\n            // supported: 'percentage', 'count', 'temperature'\n\n            if (this_column.round) {\n              td_text = Math.round(td_text, this_column.round);\n            }\n\n            var this_format = this_column.format;\n            var formatter;\n\n            if (this_format === 'percentage') formatter = d3.format('.0%');\n            if (this_format === 'count') formatter = d3.format(',.0f');\n            if (this_format === 'temperature') formatter = function(t) {\n              return t + '°'; };\n\n            td_text = formatter(td_text);\n          }\n\n          if (this_column.hasOwnProperty('currency')) {\n            // this is another shorthand for formatting according to a currency amount, which gets appended to front of number\n            td_text = this_column.currency + td_text;\n          }\n        }\n\n        td = tr.append('td')\n          .classed('table-' + td_type, true)\n          .classed('table-' + td_type + '-' + this._strip_punctuation(td_accessor), true)\n          .attr('data-value', td_value)\n          .style('width', this_column.width)\n          .style('text-align', td_type === 'title' || td_type === 'text' ? 'left' : 'right');\n\n        this._format_element(td, td_value, this_column);\n\n        if (td_type === 'title') {\n          this_title = td.append('div').text(td_text);\n          this._format_element(this_title, td_text, this_column);\n\n          if (args.columns[j].hasOwnProperty('secondary_accessor')) {\n            td.append('div')\n              .text(args.data[i][args.columns[j].secondary_accessor])\n              .classed(\"secondary-title\", true);\n          }\n        } else {\n          td.text(td_text);\n        }\n      }\n    }\n\n    return this;\n  };\n\n  return this;\n};\n\n(function() {\n  'use strict';\n\n  function mg_missing_add_text(svg, args) {\n    svg.selectAll('.mg-missing-text').data([args.missing_text])\n      .enter().append('text')\n      .attr('class', 'mg-missing-text')\n      .attr('x', args.width / 2)\n      .attr('y', args.height / 2)\n      .attr('dy', '.50em')\n      .attr('text-anchor', 'middle')\n      .text(args.missing_text);\n  }\n\n  function mg_missing_x_scale(args) {\n    args.scales.X = d3.scaleLinear()\n      .domain([0, args.data.length])\n      .range([mg_get_plot_left(args), mg_get_plot_right(args)]);\n    args.scalefns.yf = function(di) {\n      return args.scales.Y(di.y); };\n  }\n\n  function mg_missing_y_scale(args) {\n    args.scales.Y = d3.scaleLinear()\n      .domain([-2, 2])\n      .range([args.height - args.bottom - args.buffer * 2, args.top]);\n    args.scalefns.xf = function(di) {\n      return args.scales.X(di.x); };\n  }\n\n  function mg_make_fake_data(args) {\n    var data = [];\n    for (var x = 1; x <= 50; x++) {\n      data.push({ 'x': x, 'y': Math.random() - (x * 0.03) });\n    }\n    args.data = data;\n  }\n\n  function mg_add_missing_background_rect(g, args) {\n    g.append('svg:rect')\n      .classed('mg-missing-background', true)\n      .attr('x', args.buffer)\n      .attr('y', args.buffer + args.title_y_position * 2)\n      .attr('width', args.width - args.buffer * 2)\n      .attr('height', args.height - args.buffer * 2 - args.title_y_position * 2)\n      .attr('rx', 15)\n      .attr('ry', 15);\n  }\n\n  function mg_missing_add_line(g, args) {\n    var line = d3.line()\n      .x(args.scalefns.xf)\n      .y(args.scalefns.yf)\n      .curve(args.interpolate);\n\n    g.append('path')\n      .attr('class', 'mg-main-line mg-line1-color')\n      .attr('d', line(args.data));\n  }\n\n  function mg_missing_add_area(g, args) {\n    var area = d3.area()\n      .x(args.scalefns.xf)\n      .y0(args.scales.Y.range()[0])\n      .y1(args.scalefns.yf)\n      .curve(args.interpolate);\n\n    g.append('path')\n      .attr('class', 'mg-main-area mg-area1-color')\n      .attr('d', area(args.data));\n  }\n\n  function mg_remove_all_children(args) {\n    d3.select(args.target).selectAll('svg *').remove();\n  }\n\n  function mg_missing_remove_legend(args) {\n    if (args.legend_target) {\n      d3.select(args.legend_target).html('');\n    }\n  }\n\n  function missingData(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      mg_init_compute_width(args);\n      mg_init_compute_height(args);\n\n      // create svg if one doesn't exist\n\n      var container = d3.select(args.target);\n      mg_raise_container_error(container, args);\n      var svg = container.selectAll('svg');\n      mg_remove_svg_if_chart_type_has_changed(svg, args);\n      svg = mg_add_svg_if_it_doesnt_exist(svg, args);\n      mg_adjust_width_and_height_if_changed(svg, args);\n      mg_set_viewbox_for_scaling(svg, args);\n      mg_remove_all_children(args);\n\n      svg.classed('mg-missing', true);\n      mg_missing_remove_legend(args);\n\n      chart_title(args);\n\n      // are we adding a background placeholder\n      if (args.show_missing_background) {\n        mg_make_fake_data(args);\n        mg_missing_x_scale(args);\n        mg_missing_y_scale(args);\n        var g = mg_add_g(svg, 'mg-missing-pane');\n\n        mg_add_missing_background_rect(g, args);\n        mg_missing_add_line(g, args);\n        mg_missing_add_area(g, args);\n      }\n\n      mg_missing_add_text(svg, args);\n\n      this.windowListeners();\n\n      return this;\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    top: 40, // the size of the top margin\n    bottom: 30, // the size of the bottom margin\n    right: 10, // size of the right margin\n    left: 0, // size of the left margin\n    buffer: 8, // the buffer between the actual chart area and the margins\n    legend_target: '',\n    width: 350,\n    height: 220,\n    missing_text: 'Data currently missing or unavailable',\n    scalefns: {},\n    scales: {},\n    show_tooltips: true,\n    show_missing_background: true\n  };\n\n  MG.register('missing-data', missingData, defaults);\n}).call(this);\n\nfunction mg_process_scale_ticks(args, axis) {\n  var accessor;\n  var scale_ticks;\n  var max;\n\n  if (axis === 'x') {\n    accessor = args.x_accessor;\n    scale_ticks = args.scales.X.ticks(args.xax_count);\n    max = args.processed.max_x;\n  } else if (axis === 'y') {\n    accessor = args.y_accessor;\n    scale_ticks = args.scales.Y.ticks(args.yax_count)\n    max = args.processed.max_y;\n  }\n\n  function log10(val) {\n    if (val === 1000) {\n      return 3;\n    }\n    if (val === 1000000) {\n      return 7;\n    }\n    return Math.log(val) / Math.LN10;\n  }\n\n  if ((axis === 'x' && args.x_scale_type === 'log') || (axis === 'y' && args.y_scale_type === 'log')) {\n    // get out only whole logs\n    scale_ticks = scale_ticks.filter(function(d) {\n      return Math.abs(log10(d)) % 1 < 1e-6 || Math.abs(log10(d)) % 1 > 1 - 1e-6;\n    });\n  }\n\n  // filter out fraction ticks if our data is ints and if xmax > number of generated ticks\n  var number_of_ticks = scale_ticks.length;\n\n  // is our data object all ints?\n  var data_is_int = true;\n  args.data.forEach(function(d, i) {\n    d.forEach(function(d, i) {\n      if (d[accessor] % 1 !== 0) {\n        data_is_int = false;\n        return false;\n      }\n    });\n  });\n\n  if (data_is_int && number_of_ticks > max && args.format === 'count') {\n    // remove non-integer ticks\n    scale_ticks = scale_ticks.filter(function(d) {\n      return d % 1 === 0;\n    });\n  }\n\n  if (axis === 'x') {\n    args.processed.x_ticks = scale_ticks;\n  } else if (axis === 'y') {\n    args.processed.y_ticks = scale_ticks;\n  }\n}\n\nfunction raw_data_transformation(args) {\n  'use strict';\n\n  // dupe our data so we can modify it without adverse effect\n  args.data = MG.clone(args.data);\n\n  // we need to account for a few data format cases:\n  // #0 {bar1:___, bar2:___}                                    // single object (for, say, bar charts)\n  // #1 [{key:__, value:__}, ...]                               // unnested obj-arrays\n  // #2 [[{key:__, value:__}, ...], [{key:__, value:__}, ...]]  // nested obj-arrays\n  // #3 [[4323, 2343],..]                                       // unnested 2d array\n  // #4 [[[4323, 2343],..] , [[4323, 2343],..]]                 // nested 2d array\n  args.single_object = false; // for bar charts.\n  args.array_of_objects = false;\n  args.array_of_arrays = false;\n  args.nested_array_of_arrays = false;\n  args.nested_array_of_objects = false;\n\n  // is the data object a nested array?\n\n  if (is_array_of_arrays(args.data)) {\n    args.nested_array_of_objects = args.data.map(function(d) {\n      return is_array_of_objects_or_empty(d);\n    }); // Case #2\n    args.nested_array_of_arrays = args.data.map(function(d) {\n      return is_array_of_arrays(d);\n    }); // Case #4\n  } else {\n    args.array_of_objects = is_array_of_objects(args.data); // Case #1\n    args.array_of_arrays = is_array_of_arrays(args.data); // Case #3\n  }\n\n  if (args.chart_type === 'line') {\n    if (args.array_of_objects || args.array_of_arrays) {\n      args.data = [args.data];\n    }\n  } else {\n    if (!(mg_is_array(args.data[0]))) {\n      args.data = [args.data];\n    }\n  }\n  // if the y_accessor is an array, break it up and store the result in args.data\n  mg_process_multiple_x_accessors(args);\n  mg_process_multiple_y_accessors(args);\n\n  // if user supplies keyword in args.color, change to arg.colors.\n  // this is so that the API remains fairly sensible and legible.\n  if (args.color !== undefined) {\n    args.colors = args.color;\n  }\n\n  // if user has supplied args.colors, and that value is a string, turn it into an array.\n  if (args.colors !== null && typeof args.colors === 'string') {\n    args.colors = [args.colors];\n  }\n\n  // sort x-axis data\n  if (args.chart_type === 'line' && args.x_sort === true) {\n    for (var i = 0; i < args.data.length; i++) {\n      args.data[i].sort(function(a, b) {\n        return a[args.x_accessor] - b[args.x_accessor];\n      });\n    }\n  }\n\n  return this;\n}\n\nfunction mg_process_multiple_accessors(args, which_accessor) {\n  // turns an array of accessors into ...\n  if (mg_is_array(args[which_accessor])) {\n    args.data = args.data.map(function(_d) {\n      return args[which_accessor].map(function(ya) {\n        return _d.map(function(di) {\n          di = MG.clone(di);\n\n          if (di[ya] === undefined) {\n            return undefined;\n          }\n\n          di['multiline_' + which_accessor] = di[ya];\n          return di;\n        }).filter(function(di) {\n          return di !== undefined;\n        });\n      });\n    })[0];\n    args[which_accessor] = 'multiline_' + which_accessor;\n  }\n}\n\nfunction mg_process_multiple_x_accessors(args) {\n  mg_process_multiple_accessors(args, 'x_accessor');\n}\n\nfunction mg_process_multiple_y_accessors(args) {\n  mg_process_multiple_accessors(args, 'y_accessor');\n}\n\nMG.raw_data_transformation = raw_data_transformation;\n\nfunction process_line(args) {\n  'use strict';\n\n  var time_frame;\n\n  // do we have a time-series?\n  var is_time_series = d3.sum(args.data.map(function(series) {\n    return series.length > 0 && mg_is_date(series[0][args.x_accessor]);\n  })) > 0;\n\n  // are we replacing missing y values with zeros?\n  if ((args.missing_is_zero || args.missing_is_hidden) && args.chart_type === 'line' && is_time_series) {\n    for (var i = 0; i < args.data.length; i++) {\n      // we need to have a dataset of length > 2, so if it's less than that, skip\n      if (args.data[i].length <= 1) {\n        continue;\n      }\n\n      var first = args.data[i][0];\n      var last = args.data[i][args.data[i].length - 1];\n\n      // initialize our new array for storing the processed data\n      var processed_data = [];\n\n      // we'll be starting from the day after our first date\n      var start_date = MG.clone(first[args.x_accessor]).setDate(first[args.x_accessor].getDate() + 1);\n\n      // if we've set a max_x, add data points up to there\n      var from = (args.min_x) ? args.min_x : start_date;\n      var upto = (args.max_x) ? args.max_x : last[args.x_accessor];\n\n      time_frame = mg_get_time_frame((upto - from) / 1000);\n\n      if (['four-days', 'many-days', 'many-months', 'years', 'default'].indexOf(time_frame) !== -1 && args.missing_is_hidden_accessor === null) {\n        for (var d = new Date(from); d <= upto; d.setDate(d.getDate() + 1)) {\n          var o = {};\n          d.setHours(0, 0, 0, 0);\n\n          // add the first date item, we'll be starting from the day after our first date\n          if (Date.parse(d) === Date.parse(new Date(start_date))) {\n            processed_data.push(MG.clone(args.data[i][0]));\n          }\n\n          // check to see if we already have this date in our data object\n          var existing_o = null;\n          args.data[i].forEach(function(val, i) {\n            if (Date.parse(val[args.x_accessor]) === Date.parse(new Date(d))) {\n              existing_o = val;\n\n              return false;\n            }\n          });\n\n          // if we don't have this date in our data object, add it and set it to zero\n          if (!existing_o) {\n            o[args.x_accessor] = new Date(d);\n            o[args.y_accessor] = 0;\n            o['_missing'] = true; //we want to distinguish between zero-value and missing observations\n            processed_data.push(o);\n          }\n\n          // if the data point has, say, a 'missing' attribute set or if its\n          // y-value is null identify it internally as missing\n          else if (existing_o[args.missing_is_hidden_accessor] || existing_o[args.y_accessor] === null) {\n            existing_o['_missing'] = true;\n            processed_data.push(existing_o);\n          }\n\n          //otherwise, use the existing object for that date\n          else {\n            processed_data.push(existing_o);\n          }\n        }\n      } else {\n        for (var j = 0; j < args.data[i].length; j += 1) {\n          var obj = MG.clone(args.data[i][j]);\n          obj['_missing'] = args.data[i][j][args.missing_is_hidden_accessor];\n          processed_data.push(obj);\n        }\n      }\n\n      // update our date object\n      args.data[i] = processed_data;\n    }\n  }\n\n  return this;\n}\n\nMG.process_line = process_line;\n\nfunction process_histogram(args) {\n  'use strict';\n\n  // if args.binned == false, then we need to bin the data appropriately.\n  // if args.binned == true, then we need to make sure to compute the relevant computed data.\n  // the outcome of either of these should be something in args.computed_data.\n  // the histogram plotting function will be looking there for the data to plot.\n\n  // we need to compute an array of objects.\n  // each object has an x, y, and dx.\n\n  // histogram data is always single dimension\n  var our_data = args.data[0];\n\n  var extracted_data;\n  if (args.binned === false) {\n    // use d3's built-in layout.histogram functionality to compute what you need.\n\n    if (typeof(our_data[0]) === 'object') {\n      // we are dealing with an array of objects. Extract the data value of interest.\n      extracted_data = our_data\n        .map(function(d) {\n          return d[args.x_accessor];\n        });\n    } else if (typeof(our_data[0]) === 'number') {\n      // we are dealing with a simple array of numbers. No extraction needed.\n      extracted_data = our_data;\n    } else {\n      console.log('TypeError: expected an array of numbers, found ' + typeof(our_data[0]));\n      return;\n    }\n\n    var hist = d3.histogram();\n    if (args.bins) {\n      hist.thresholds(args.bins);\n    }\n\n    var bins = hist(extracted_data);\n    args.processed_data = bins.map(function(d) {\n      return { 'x': d.x0, 'y': d.length };\n    });\n  } else {\n    // here, we just need to reconstruct the array of objects\n    // take the x accessor and y accessor.\n    // pull the data as x and y. y is count.\n\n    args.processed_data = our_data.map(function(d) {\n      return { 'x': d[args.x_accessor], 'y': d[args.y_accessor] };\n    });\n\n    var this_pt;\n    var next_pt;\n\n    // we still need to compute the dx component for each data point\n    for (var i = 0; i < args.processed_data.length; i++) {\n      this_pt = args.processed_data[i];\n      if (i === args.processed_data.length - 1) {\n        this_pt.dx = args.processed_data[i - 1].dx;\n      } else {\n        next_pt = args.processed_data[i + 1];\n        this_pt.dx = next_pt.x - this_pt.x;\n      }\n    }\n  }\n\n  // capture the original data and accessors before replacing args.data\n  if (!args.processed) {\n    args.processed = {};\n  }\n  args.processed.original_data = args.data;\n  args.processed.original_x_accessor = args.x_accessor;\n  args.processed.original_y_accessor = args.y_accessor;\n\n  args.data = [args.processed_data];\n  args.x_accessor = args.processed_x_accessor;\n  args.y_accessor = args.processed_y_accessor;\n\n  return this;\n}\n\nMG.process_histogram = process_histogram;\n\n// for use with bar charts, etc.\nfunction process_categorical_variables(args) {\n  'use strict';\n\n  var extracted_data, processed_data = {},\n    pd = [];\n  //var our_data = args.data[0];\n  var label_accessor = args.bar_orientation === 'vertical' ? args.x_accessor : args.y_accessor;\n  var data_accessor = args.bar_orientation === 'vertical' ? args.y_accessor : args.x_accessor;\n\n  return this;\n}\n\nMG.process_categorical_variables = process_categorical_variables;\n\nfunction process_point(args) {\n  'use strict';\n\n  var data = args.data[0];\n  var x = data.map(function(d) {\n    return d[args.x_accessor];\n  });\n  var y = data.map(function(d) {\n    return d[args.y_accessor];\n  });\n\n  if (args.least_squares) {\n    args.ls_line = least_squares(x, y);\n  }\n\n  return this;\n}\n\nMG.process_point = process_point;\n\nfunction add_ls(args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var data = args.data[0];\n  var min_x = d3.min(data, function(d) {\n    return d[args.x_accessor]; });\n  var max_x = d3.max(data, function(d) {\n    return d[args.x_accessor]; });\n\n  d3.select(args.target).selectAll('.mg-least-squares-line').remove();\n\n  svg.append('svg:line')\n    .attr('x1', args.scales.X(min_x))\n    .attr('x2', args.scales.X(max_x))\n    .attr('y1', args.scales.Y(args.ls_line.fit(min_x)))\n    .attr('y2', args.scales.Y(args.ls_line.fit(max_x)))\n    .attr('class', 'mg-least-squares-line');\n}\n\nMG.add_ls = add_ls;\n\nfunction add_lowess(args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var lowess = args.lowess_line;\n\n  var line = d3.svg.line()\n    .x(function(d) {\n      return args.scales.X(d.x); })\n    .y(function(d) {\n      return args.scales.Y(d.y); })\n    .interpolate(args.interpolate);\n\n  svg.append('path')\n    .attr('d', line(lowess))\n    .attr('class', 'mg-lowess-line');\n}\n\nMG.add_lowess = add_lowess;\n\nfunction lowess_robust(x, y, alpha, inc) {\n  // Used http://www.unc.edu/courses/2007spring/biol/145/001/docs/lectures/Oct27.html\n  // for the clear explanation of robust lowess.\n\n  // calculate the the first pass.\n  var _l;\n  var r = [];\n  var yhat = d3.mean(y);\n  var i;\n  for (i = 0; i < x.length; i += 1) { r.push(1); }\n  _l = _calculate_lowess_fit(x, y, alpha, inc, r);\n  var x_proto = _l.x;\n  var y_proto = _l.y;\n\n  // Now, take the fit, recalculate the weights, and re-run LOWESS using r*w instead of w.\n\n  for (i = 0; i < 100; i += 1) {\n    r = d3.zip(y_proto, y).map(function(yi) {\n      return Math.abs(yi[1] - yi[0]);\n    });\n\n    var q = d3.quantile(r.sort(), 0.5);\n\n    r = r.map(function(ri) {\n      return _bisquare_weight(ri / (6 * q));\n    });\n\n    _l = _calculate_lowess_fit(x, y, alpha, inc, r);\n    x_proto = _l.x;\n    y_proto = _l.y;\n  }\n\n  return d3.zip(x_proto, y_proto).map(function(d) {\n    var p = {};\n    p.x = d[0];\n    p.y = d[1];\n    return p;\n  });\n}\n\nMG.lowess_robust = lowess_robust;\n\nfunction lowess(x, y, alpha, inc) {\n  var r = [];\n  for (var i = 0; i < x.length; i += 1) { r.push(1); }\n  var _l = _calculate_lowess_fit(x, y, alpha, inc, r);\n}\n\nMG.lowess = lowess;\n\nfunction least_squares(x_, y_) {\n  var x, y, xi, yi,\n    _x = 0,\n    _y = 0,\n    _xy = 0,\n    _xx = 0;\n\n  var n = x_.length;\n  if (mg_is_date(x_[0])) {\n    x = x_.map(function(d) {\n      return d.getTime();\n    });\n  } else {\n    x = x_;\n  }\n\n  if (mg_is_date(y_[0])) {\n    y = y_.map(function(d) {\n      return d.getTime();\n    });\n  } else {\n    y = y_;\n  }\n\n  var xhat = d3.mean(x);\n  var yhat = d3.mean(y);\n  var numerator = 0,\n    denominator = 0;\n\n  for (var i = 0; i < x.length; i++) {\n    xi = x[i];\n    yi = y[i];\n    numerator += (xi - xhat) * (yi - yhat);\n    denominator += (xi - xhat) * (xi - xhat);\n  }\n\n  var beta = numerator / denominator;\n  var x0 = yhat - beta * xhat;\n\n  return {\n    x0: x0,\n    beta: beta,\n    fit: function(x) {\n      return x0 + x * beta;\n    }\n  };\n}\n\nMG.least_squares = least_squares;\n\nfunction _pow_weight(u, w) {\n  if (u >= 0 && u <= 1) {\n    return Math.pow(1 - Math.pow(u, w), w);\n  } else {\n    return 0;\n  }\n}\n\nfunction _bisquare_weight(u) {\n  return _pow_weight(u, 2);\n}\n\nfunction _tricube_weight(u) {\n  return _pow_weight(u, 3);\n}\n\nfunction _neighborhood_width(x0, xis) {\n  return Array.max(xis.map(function(xi) {\n    return Math.abs(x0 - xi);\n  }));\n}\n\nfunction _manhattan(x1, x2) {\n  return Math.abs(x1 - x2);\n}\n\nfunction _weighted_means(wxy) {\n  var wsum = d3.sum(wxy.map(function(wxyi) {\n    return wxyi.w; }));\n\n  return {\n    xbar: d3.sum(wxy.map(function(wxyi) {\n      return wxyi.w * wxyi.x;\n    })) / wsum,\n    ybar: d3.sum(wxy.map(function(wxyi) {\n      return wxyi.w * wxyi.y;\n    })) / wsum\n  };\n}\n\nfunction _weighted_beta(wxy, xbar, ybar) {\n  var num = d3.sum(wxy.map(function(wxyi) {\n    return Math.pow(wxyi.w, 2) * (wxyi.x - xbar) * (wxyi.y - ybar);\n  }));\n\n  var denom = d3.sum(wxy.map(function(wxyi) {\n    return Math.pow(wxyi.w, 2) * Math.pow(wxyi.x - xbar, 2);\n  }));\n\n  return num / denom;\n}\n\nfunction _weighted_least_squares(wxy) {\n  var ybar, xbar, beta_i, x0;\n\n  var _wm = _weighted_means(wxy);\n\n  xbar = _wm.xbar;\n  ybar = _wm.ybar;\n\n  var beta = _weighted_beta(wxy, xbar, ybar);\n\n  return {\n    beta: beta,\n    xbar: xbar,\n    ybar: ybar,\n    x0: ybar - beta * xbar\n\n  };\n}\n\nfunction _calculate_lowess_fit(x, y, alpha, inc, residuals) {\n  // alpha - smoothing factor. 0 < alpha < 1/\n  //\n  //\n  var k = Math.floor(x.length * alpha);\n\n  var sorted_x = x.slice();\n\n  sorted_x.sort(function(a, b) {\n    if (a < b) {\n      return -1; } else if (a > b) {\n      return 1; }\n\n    return 0;\n  });\n\n  var x_max = d3.quantile(sorted_x, 0.98);\n  var x_min = d3.quantile(sorted_x, 0.02);\n\n  var xy = d3.zip(x, y, residuals).sort();\n\n  var size = Math.abs(x_max - x_min) / inc;\n\n  var smallest = x_min;\n  var largest = x_max;\n  var x_proto = d3.range(smallest, largest, size);\n\n  var xi_neighbors;\n  var x_i, beta_i, x0_i, delta_i, xbar, ybar;\n\n  // for each prototype, find its fit.\n  var y_proto = [];\n\n  for (var i = 0; i < x_proto.length; i += 1) {\n    x_i = x_proto[i];\n\n    // get k closest neighbors.\n    xi_neighbors = xy.map(function(xyi) {\n      return [\n        Math.abs(xyi[0] - x_i),\n        xyi[0],\n        xyi[1],\n        xyi[2]\n      ];\n    }).sort().slice(0, k);\n\n    // Get the largest distance in the neighbor set.\n    delta_i = d3.max(xi_neighbors)[0];\n\n    // Prepare the weights for mean calculation and WLS.\n\n    xi_neighbors = xi_neighbors.map(function(wxy) {\n      return {\n        w: _tricube_weight(wxy[0] / delta_i) * wxy[3],\n        x: wxy[1],\n        y: wxy[2]\n      };\n    });\n\n    // Find the weighted least squares, obviously.\n    var _output = _weighted_least_squares(xi_neighbors);\n\n    x0_i = _output.x0;\n    beta_i = _output.beta;\n\n    //\n    y_proto.push(x0_i + beta_i * x_i);\n  }\n\n  return { x: x_proto, y: y_proto };\n}\n\nfunction format_rollover_number(args) {\n  var num;\n  if (args.format === 'count') {\n    num = function(d) {\n      var is_float = d % 1 !== 0;\n      var pf;\n\n      if (is_float) {\n        pf = d3.format(',.' + args.decimals + 'f');\n      } else {\n        pf = d3.format(',.0f');\n      }\n\n      // are we adding units after the value or before?\n      if (args.yax_units_append) {\n        return pf(d) + args.yax_units;\n      } else {\n        return args.yax_units + pf(d);\n      }\n    };\n  } else {\n    num = function(d_) {\n      var fmt_string = (args.decimals ? '.' + args.decimals : '') + '%';\n      var pf = d3.format(fmt_string);\n      return pf(d_);\n    };\n  }\n  return num;\n}\n\nvar time_rollover_format = function(f, d, accessor, utc) {\n  var fd;\n  if (typeof f === 'string') {\n    fd = MG.time_format(utc, f)(d[accessor]);\n  } else if (typeof f === 'function') {\n    fd = f(d);\n  } else {\n    fd = d[accessor];\n  }\n  return fd;\n}\n\n// define our rollover format for numbers\nvar number_rollover_format = function(f, d, accessor) {\n  var fd;\n  if (typeof f === 'string') {\n    fd = d3.format('s')(d[accessor]);\n  } else if (typeof f === 'function') {\n    fd = f(d);\n  } else {\n    fd = d[accessor];\n  }\n  return fd;\n}\n\nfunction mg_format_y_rollover(args, num, d) {\n  var formatted_y;\n  if (args.y_mouseover !== null) {\n    if (args.aggregate_rollover) {\n      formatted_y = number_rollover_format(args.y_mouseover, d, args.y_accessor);\n    } else {\n      formatted_y = number_rollover_format(args.y_mouseover, d, args.y_accessor);\n    }\n  } else {\n    if (args.time_series) {\n      if (args.aggregate_rollover) {\n        formatted_y = num(d[args.y_accessor]);\n      } else {\n        formatted_y = args.yax_units + num(d[args.y_accessor]);\n      }\n    } else {\n      formatted_y = args.y_accessor + ': ' + args.yax_units + num(d[args.y_accessor]);\n    }\n  }\n  return formatted_y;\n}\n\nfunction mg_format_x_rollover(args, fmt, d) {\n  var formatted_x;\n  if (args.x_mouseover !== null) {\n    if (args.time_series) {\n      if (args.aggregate_rollover) {\n        formatted_x = time_rollover_format(args.x_mouseover, d, 'key', args.utc);\n      } else {\n        formatted_x = time_rollover_format(args.x_mouseover, d, args.x_accessor, args.utc);\n      }\n    } else {\n      formatted_x = number_rollover_format(args.x_mouseover, d, args.x_accessor);\n    }\n  } else {\n    if (args.time_series) {\n      var date;\n\n      if (args.aggregate_rollover && args.data.length > 1) {\n        date = new Date(d.key);\n      } else {\n        date = new Date(+d[args.x_accessor]);\n        date.setDate(date.getDate());\n      }\n\n      formatted_x = fmt(date) + '  ';\n    } else {\n      formatted_x = args.x_accessor + ': ' + d[args.x_accessor] + '   ';\n    }\n  }\n  return formatted_x;\n}\n\nfunction mg_format_data_for_mouseover(args, d, mouseover_fcn, accessor, check_time) {\n  var formatted_data, formatter;\n  var time_fmt = mg_get_rollover_time_format(args);\n  if (typeof d[accessor] === 'string') {\n    formatter = function(d) {\n      return d;\n    }\n  } else {\n    formatter = format_rollover_number(args);\n  }\n\n  if (mouseover_fcn !== null) {\n    if (check_time) formatted_data = time_rollover_format(mouseover_fcn, d, accessor, args.utc);\n    else formatted_data = number_rollover_format(mouseover_fcn, d, accessor);\n\n  } else {\n    if (check_time) formatted_data = time_fmt(new Date(+d[accessor])) + '  ';\n    else formatted_data = (args.time_series ? '' : accessor + ': ') + formatter(d[accessor]) + '   ';\n  }\n  return formatted_data;\n}\n\nfunction mg_format_number_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.x_mouseover, args.x_accessor, false);\n}\n\nfunction mg_format_x_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.x_mouseover, args.x_accessor, args.time_series);\n}\n\nfunction mg_format_y_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.y_mouseover, args.y_accessor, false);\n}\n\nfunction mg_format_x_aggregate_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.x_mouseover, 'key', args.time_series)\n}\n\nMG.format_rollover_number = format_rollover_number;\n\n// http://bl.ocks.org/mbostock/3916621\nfunction path_tween(d1, precision) {\n  return function() {\n    var path0 = this,\n      path1 = path0.cloneNode(),\n      n0 = path0.getTotalLength() || 0,\n      n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength() || 0;\n\n    // Uniform sampling of distance based on specified precision.\n    var distances = [0],\n      i = 0,\n      dt = precision / Math.max(n0, n1);\n    while ((i += dt) < 1) distances.push(i);\n    distances.push(1);\n\n    // Compute point-interpolators at each distance.\n    var points = distances.map(function(t) {\n      var p0 = path0.getPointAtLength(t * n0),\n        p1 = path1.getPointAtLength(t * n1);\n      return d3.interpolate([p0.x, p0.y], [p1.x, p1.y]);\n    });\n\n    return function(t) {\n      return t < 1 ? \"M\" + points.map(function(p) {\n        return p(t);\n      }).join(\"L\") : d1;\n    };\n  };\n}\n\nMG.path_tween = path_tween;\n\n// influenced by https://bl.ocks.org/tomgp/c99a699587b5c5465228\n\nfunction render_markup_for_server(callback) {\n  var virtual_window = MG.virtual_window;\n  var virtual_d3 = d3.select(virtual_window.document);\n  var target = virtual_window.document.createElement('div');\n\n  var original_d3 = global.d3;\n  var original_window = global.window;\n  var original_document = global.document;\n  global.d3 = virtual_d3;\n  global.window = virtual_window;\n  global.document = virtual_window.document;\n\n  var error;\n  try {\n    callback(target);\n  } catch(e) {\n    error = e;\n  }\n\n  global.d3 = original_d3;\n  global.window = original_window;\n  global.document = original_document;\n\n  if (error) {\n    throw error;\n  }\n\n  /* for some reason d3.select parses jsdom elements incorrectly\n   * but it works if we wrap the element in a function.\n   */\n  return virtual_d3.select(function targetFn() {\n    return target;\n  }).html();\n}\n\nfunction render_markup_for_client(callback) {\n  var target = document.createElement('div');\n  callback(target);\n  return d3.select(target).html();\n}\n\nfunction render_markup(callback) {\n  switch(typeof window) {\n    case 'undefined':\n      return render_markup_for_server(callback);\n    default:\n      return render_markup_for_client(callback);\n  }\n}\n\nfunction init_virtual_window(jsdom, force) {\n  if (MG.virtual_window && !force) {\n    return;\n  }\n\n  var doc = jsdom.jsdom({\n    html: '',\n    features: { QuerySelector: true }\n  });\n  MG.virtual_window = doc.defaultView;\n}\n\nMG.render_markup = render_markup;\nMG.init_virtual_window = init_virtual_window;\n\n// call this to add a warning icon to a graph and log an error to the console\nfunction error(args) {\n  console.error('ERROR : ', args.target, ' : ', args.error);\n\n  d3.select(args.target).select('.mg-chart-title')\n    .append('tspan')\n      .attr('class', 'fa fa-x fa-exclamation-circle mg-warning')\n      .attr('dx', '0.3em')\n      .text('\\uf06a');\n}\n\nfunction internal_error(args) {\n  console.error('INTERNAL ERROR : ', args.target, ' : ', args.internal_error);\n}\n\nMG.error = error;\n\nreturn MG;\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(2);\nmodule.exports = __webpack_require__(1);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a19acee889b477d6bd63","// https://d3js.org Version 4.5.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.5.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$2 + tau$2;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$3 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance1(a, b) {\n  var l = a._.r;\n  while (a !== b) l += 2 * (a = a.next)._.r;\n  return l - b._.r;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          if (sj + a._.r + b._.r > distance1(j, b)) a = j; else b = j;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          if (distance1(a, k) > sk + a._.r + b._.r) a = k; else b = k;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * Math.sin(ap)),\n            p1 = asin$1(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 0\n// module chunks = 0","const d3 = require('d3');\nconst MG = require('metrics-graphics');\n\nrequire('bootstrap/dist/css/bootstrap.css');\nrequire('metrics-graphics/dist/metricsgraphics.css');\nrequire('./index.css');\n\nconst renderChart = (data) => {\n  MG.data_graphic({\n    title: 'Followers',\n    data: data.followers.map(d => ({\n      date: new Date(d.date),\n      count: d.count,\n    })),\n    width: 1100,\n    height: 650,\n    left: 60,\n    target: '#chart',\n    x_accessor: 'date',\n    y_accessor: 'count',\n    min_y: 15600,\n    inflator: 1000 / 999,\n    yax_format: d3.format(','),\n    markers: data.tweets.map(t => ({\n      date: new Date(t.date),\n      label: '',\n    })),\n    interpolate: d3.curveMonotoneX,\n  });\n};\n\nfetch('https://s3-eu-west-1.amazonaws.com/twitter-stats/stats.json')\n  .then(res => res.json())\n  .then(data => renderChart(data));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 2\n// module chunks = 0","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['d3'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('d3'));\n  } else {\n    root.MG = factory(root.d3);\n  }\n}(this, function(d3) {\n(typeof window === 'undefined' ? global : window).MG = {version: '2.11'};\n\n//a set of helper functions, some that we've written, others that we've borrowed\n\nMG.convert = {};\n\nMG.convert.date = function(data, accessor, time_format) {\n  time_format = (typeof time_format === \"undefined\") ? '%Y-%m-%d' : time_format;\n  var parse_time = d3.timeParse(time_format);\n  data = data.map(function(d) {\n    d[accessor] = parse_time(d[accessor].trim());\n    return d;\n  });\n\n  return data;\n}\n\nMG.convert.number = function(data, accessor) {\n  data = data.map(function(d) {\n    d[accessor] = Number(d[accessor]);\n    return d;\n  });\n\n  return data;\n}\n\nMG.time_format = function(utc, specifier) {\n  return utc ? d3.utcFormat(specifier) : d3.timeFormat(specifier);\n}\n\nfunction mg_jquery_exists() {\n  if (typeof jQuery !== 'undefined' || typeof $ !== 'undefined') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction mg_get_rollover_time_format(args) {\n  var fmt;\n  switch (args.processed.x_time_frame) {\n    case 'millis':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %H:%M:%S.%L');\n      break;\n    case 'seconds':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %H:%M:%S');\n      break;\n    case 'less-than-a-day':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %I:%M%p');\n      break;\n    case 'four-days':\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y  %I:%M%p');\n      break;\n    default:\n      fmt = MG.time_format(args.utc_time, '%b %e, %Y');\n  }\n  return fmt;\n}\n\nfunction mg_data_in_plot_bounds(datum, args) {\n  return datum[args.x_accessor] >= args.processed.min_x &&\n    datum[args.x_accessor] <= args.processed.max_x &&\n    datum[args.y_accessor] >= args.processed.min_y &&\n    datum[args.y_accessor] <= args.processed.max_y;\n}\n\nfunction is_array(thing) {\n  return Object.prototype.toString.call(thing) === '[object Array]';\n}\n\nfunction is_function(thing) {\n  return Object.prototype.toString.call(thing) === '[object Function]';\n}\n\nfunction is_empty_array(thing) {\n  return is_array(thing) && thing.length === 0;\n}\n\nfunction is_object(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction is_array_of_arrays(data) {\n  var all_elements = data.map(function(d) {\n    return is_array(d) === true && d.length > 0;\n  });\n\n  return d3.sum(all_elements) === data.length;\n}\n\nfunction is_array_of_objects(data) {\n  // is every element of data an object?\n  var all_elements = data.map(function(d) {\n    return is_object(d) === true;\n  });\n\n  return d3.sum(all_elements) === data.length;\n}\n\nfunction is_array_of_objects_or_empty(data) {\n  return is_empty_array(data) || is_array_of_objects(data);\n}\n\nfunction pluck(arr, accessor) {\n  return arr.map(function(d) {\n    return d[accessor] });\n}\n\nfunction count_array_elements(arr) {\n  return arr.reduce(function(a, b) { a[b] = a[b] + 1 || 1;\n    return a; }, {});\n}\n\nfunction mg_get_bottom(args) {\n  return args.height - args.bottom;\n}\n\nfunction mg_get_plot_bottom(args) {\n  // returns the pixel location of the bottom side of the plot area.\n  return mg_get_bottom(args) - args.buffer;\n}\n\nfunction mg_get_top(args) {\n  return args.top;\n}\n\nfunction mg_get_plot_top(args) {\n  // returns the pixel location of the top side of the plot area.\n  return mg_get_top(args) + args.buffer;\n}\n\nfunction mg_get_left(args) {\n  return args.left;\n}\n\nfunction mg_get_plot_left(args) {\n  // returns the pixel location of the left side of the plot area.\n  return mg_get_left(args) + args.buffer;\n}\n\nfunction mg_get_right(args) {\n  return args.width - args.right;\n}\n\nfunction mg_get_plot_right(args) {\n  // returns the pixel location of the right side of the plot area.\n  return mg_get_right(args) - args.buffer;\n}\n\n//////// adding elements, removing elements /////////////\n\nfunction mg_exit_and_remove(elem) {\n  elem.exit().remove();\n}\n\nfunction mg_selectAll_and_remove(svg, cl) {\n  svg.selectAll(cl).remove();\n}\n\nfunction mg_add_g(svg, cl) {\n  return svg.append('g').classed(cl, true);\n}\n\nfunction mg_remove_element(svg, elem) {\n  svg.select(elem).remove();\n}\n\n//////// axis helper functions ////////////\n\nfunction mg_make_rug(args, rug_class) {\n  var svg = mg_get_svg_child_of(args.target);\n  var all_data = mg_flatten_array(args.data);\n  var rug = svg.selectAll('line.' + rug_class).data(all_data);\n\n  rug.enter()\n    .append('line')\n      .attr('class', rug_class)\n      .attr('opacity', 0.3);\n\n  //remove rug elements that are no longer in use\n  mg_exit_and_remove(rug);\n\n  //set coordinates of new rug elements\n  mg_exit_and_remove(rug);\n  return rug;\n}\n\nfunction mg_add_color_accessor_to_rug(rug, args, rug_mono_class) {\n  if (args.color_accessor) {\n    rug.attr('stroke', args.scalefns.colorf);\n    rug.classed(rug_mono_class, false);\n  } else {\n    rug.attr('stroke', null);\n    rug.classed(rug_mono_class, true);\n  }\n}\n\nfunction mg_rotate_labels(labels, rotation_degree) {\n  if (rotation_degree) {\n    labels.attr({\n      dy: 0,\n      transform: function() {\n        var elem = d3.select(this);\n        return 'rotate(' + rotation_degree + ' ' + elem.attr('x') + ',' + elem.attr('y') + ')';\n      }\n    });\n  }\n}\n\n//////////////////////////////////////////////////\n\nfunction mg_elements_are_overlapping(labels) {\n  labels = labels.node();\n  if (!labels) {\n    return false;\n  }\n\n  for (var i = 0; i < labels.length; i++) {\n    if (mg_is_horizontally_overlapping(labels[i], labels)) return true;\n  }\n\n  return false;\n}\n\nfunction mg_prevent_horizontal_overlap(labels, args) {\n  if (!labels || labels.length == 1) {\n    return;\n  }\n\n  //see if each of our labels overlaps any of the other labels\n  for (var i = 0; i < labels.length; i++) {\n    //if so, nudge it up a bit, if the label it intersects hasn't already been nudged\n    if (mg_is_horizontally_overlapping(labels[i], labels)) {\n      var node = d3.select(labels[i]);\n      var newY = +node.attr('y');\n      if (newY + 8 >= args.top) {\n        newY = args.top - 16;\n      }\n      node.attr('y', newY);\n    }\n  }\n}\n\nfunction mg_prevent_vertical_overlap(labels, args) {\n  if (!labels || labels.length == 1) {\n    return;\n  }\n\n  labels.sort(function(b, a) {\n    return d3.select(a).attr('y') - d3.select(b).attr('y');\n  });\n\n  labels.reverse();\n\n  var overlap_amount, label_i, label_j;\n\n  //see if each of our labels overlaps any of the other labels\n  for (var i = 0; i < labels.length; i++) {\n    //if so, nudge it up a bit, if the label it intersects hasn't already been nudged\n    label_i = d3.select(labels[i]).text();\n\n    for (var j = 0; j < labels.length; j++) {\n      label_j = d3.select(labels[j]).text();\n      overlap_amount = mg_is_vertically_overlapping(labels[i], labels[j]);\n\n      if (overlap_amount !== false && label_i !== label_j) {\n        var node = d3.select(labels[i]);\n        var newY = +node.attr('y');\n        newY = newY + overlap_amount;\n        node.attr('y', newY);\n      }\n    }\n  }\n}\n\nfunction mg_is_vertically_overlapping(element, sibling) {\n  var element_bbox = element.getBoundingClientRect();\n  var sibling_bbox = sibling.getBoundingClientRect();\n\n  if (element_bbox.top <= sibling_bbox.bottom && element_bbox.top >= sibling_bbox.top) {\n    return sibling_bbox.bottom - element_bbox.top;\n  }\n\n  return false;\n}\n\nfunction mg_is_horiz_overlap(element, sibling) {\n  var element_bbox = element.getBoundingClientRect();\n  var sibling_bbox = sibling.getBoundingClientRect();\n\n  if (element_bbox.right >= sibling_bbox.left || element_bbox.top >= sibling_bbox.top) {\n    return sibling_bbox.bottom - element_bbox.top;\n  }\n  return false;\n}\n\nfunction mg_is_horizontally_overlapping(element, labels) {\n  var element_bbox = element.getBoundingClientRect();\n\n  for (var i = 0; i < labels.length; i++) {\n    if (labels[i] == element) {\n      continue;\n    }\n\n    //check to see if this label overlaps with any of the other labels\n    var sibling_bbox = labels[i].getBoundingClientRect();\n    if (element_bbox.top === sibling_bbox.top &&\n      !(sibling_bbox.left > element_bbox.right || sibling_bbox.right < element_bbox.left)\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mg_infer_type(args, ns) {\n    // must return categorical or numerical.\n    var testPoint = mg_flatten_array(args.data);\n\n    testPoint = testPoint[0][args[ns + '_accessor']];\n    return typeof testPoint === 'string' ? 'categorical' : 'numerical';\n  }\n\nfunction mg_get_svg_child_of(selector_or_node) {\n  return d3.select(selector_or_node).select('svg');\n}\n\nfunction mg_flatten_array(arr) {\n  var flat_data = [];\n  return flat_data.concat.apply(flat_data, arr);\n}\n\nfunction mg_next_id() {\n  if (typeof MG._next_elem_id === 'undefined') {\n    MG._next_elem_id = 0;\n  }\n\n  return 'mg-' + (MG._next_elem_id++);\n}\n\nfunction mg_target_ref(target) {\n  if (typeof target === 'string') {\n    return mg_normalize(target);\n\n  } else if (target instanceof window.HTMLElement) {\n    var target_ref = target.getAttribute('data-mg-uid');\n    if (!target_ref) {\n      target_ref = mg_next_id();\n      target.setAttribute('data-mg-uid', target_ref);\n    }\n\n    return target_ref;\n\n  } else {\n    console.warn('The specified target should be a string or an HTMLElement.', target);\n    return mg_normalize(target);\n  }\n}\n\nfunction mg_normalize(string) {\n  return string\n    .replace(/[^a-zA-Z0-9 _-]+/g, '')\n    .replace(/ +?/g, '');\n}\n\nfunction get_pixel_dimension(target, dimension) {\n  return Number(d3.select(target).style(dimension).replace(/px/g, ''));\n}\n\nfunction get_width(target) {\n  return get_pixel_dimension(target, 'width');\n}\n\nfunction get_height(target) {\n  return get_pixel_dimension(target, 'height');\n}\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nvar each = function(obj, iterator, context) {\n  // yanked out of underscore\n  var breaker = {};\n  if (obj === null) return obj;\n  if (Array.prototype.forEach && obj.forEach === Array.prototype.forEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, length = obj.length; i < length; i++) {\n      if (iterator.call(context, obj[i], i, obj) === breaker) return;\n    }\n  } else {\n    for (var k in obj) {\n      if (iterator.call(context, obj[k], k, obj) === breaker) return;\n    }\n  }\n\n  return obj;\n};\n\nfunction merge_with_defaults(obj) {\n  // taken from underscore\n  each(Array.prototype.slice.call(arguments, 1), function(source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === void 0) obj[prop] = source[prop];\n      }\n    }\n  });\n\n  return obj;\n}\n\nMG.merge_with_defaults = merge_with_defaults;\n\nfunction number_of_values(data, accessor, value) {\n  var values = data.filter(function(d) {\n    return d[accessor] === value;\n  });\n\n  return values.length;\n}\n\nfunction has_values_below(data, accessor, value) {\n  var values = data.filter(function(d) {\n    return d[accessor] <= value;\n  });\n\n  return values.length > 0;\n}\n\nfunction has_too_many_zeros(data, accessor, zero_count) {\n  return number_of_values(data, accessor, 0) >= zero_count;\n}\n\nfunction mg_is_date(obj) {\n  return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction mg_is_object(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nfunction mg_is_array(obj) {\n  if (Array.isArray) {\n    return Array.isArray(obj);\n  }\n\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\n// deep copy\n// http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object\nMG.clone = function(obj) {\n  var copy;\n\n  // Handle the 3 simple types, and null or undefined\n  if (null === obj || \"object\" !== typeof obj) return obj;\n\n  // Handle Date\n  if (mg_is_date(obj)) {\n    copy = new Date();\n    copy.setTime(obj.getTime());\n    return copy;\n  }\n\n  // Handle Array\n  if (mg_is_array(obj)) {\n    copy = [];\n    for (var i = 0, len = obj.length; i < len; i++) {\n      copy[i] = MG.clone(obj[i]);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (mg_is_object(obj)) {\n    copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = MG.clone(obj[attr]);\n    }\n    return copy;\n  }\n\n  throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n};\n\n// give us the difference of two int arrays\n// http://radu.cotescu.com/javascript-diff-function/\nfunction arr_diff(a, b) {\n  var seen = [],\n    diff = [],\n    i;\n  for (i = 0; i < b.length; i++)\n    seen[b[i]] = true;\n  for (i = 0; i < a.length; i++)\n    if (!seen[a[i]])\n      diff.push(a[i]);\n  return diff;\n}\n\nMG.arr_diff = arr_diff;\n\n/**\n  Print warning message to the console when a feature has been scheduled for removal\n\n  @author Dan de Havilland (github.com/dandehavilland)\n  @date 2014-12\n*/\nfunction warn_deprecation(message, untilVersion) {\n  console.warn('Deprecation: ' + message + (untilVersion ? '. This feature will be removed in ' + untilVersion + '.' : ' the near future.'));\n  console.trace();\n}\n\nMG.warn_deprecation = warn_deprecation;\n\n/**\n  Truncate a string to fit within an SVG text node\n  CSS text-overlow doesn't apply to SVG <= 1.2\n\n  @author Dan de Havilland (github.com/dandehavilland)\n  @date 2014-12-02\n*/\nfunction truncate_text(textObj, textString, width) {\n  var bbox,\n    position = 0;\n\n  textObj.textContent = textString;\n  bbox = textObj.getBBox();\n\n  while (bbox.width > width) {\n    textObj.textContent = textString.slice(0, --position) + '...';\n    bbox = textObj.getBBox();\n\n    if (textObj.textContent === '...') {\n      break;\n    }\n  }\n}\n\nMG.truncate_text = truncate_text;\n\n/**\n  Wrap the contents of a text node to a specific width\n\n  Adapted from bl.ocks.org/mbostock/7555321\n\n  @author Mike Bostock\n  @author Dan de Havilland\n  @date 2015-01-14\n*/\nfunction wrap_text(text, width, token, tspanAttrs) {\n  text.each(function() {\n    var text = d3.select(this),\n      words = text.text().split(token || /\\s+/).reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 1.1, // ems\n      y = text.attr(\"y\"),\n      dy = 0,\n      tspan = text.text(null)\n      .append(\"tspan\")\n      .attr(\"x\", 0)\n      .attr(\"y\", dy + \"em\")\n      .attr(tspanAttrs || {});\n\n    while (!!(word = words.pop())) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (width === null || tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text\n          .append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"y\", ++lineNumber * lineHeight + dy + \"em\")\n          .attr(tspanAttrs || {})\n          .text(word);\n      }\n    }\n  });\n}\n\nMG.wrap_text = wrap_text;\n\nfunction register(chartType, descriptor, defaults) {\n  MG.charts[chartType] = {\n    descriptor: descriptor,\n    defaults: defaults || {}\n  };\n}\n\nMG.register = register;\n\n/**\n  Record of all registered hooks.\n  For internal use only.\n*/\nMG._hooks = {};\n\n/**\n  Add a hook callthrough to the stack.\n\n  Hooks are executed in the order that they were registered.\n*/\nMG.add_hook = function(name, func, context) {\n  var hooks;\n\n  if (!MG._hooks[name]) {\n    MG._hooks[name] = [];\n  }\n\n  hooks = MG._hooks[name];\n\n  var already_registered =\n    hooks.filter(function(hook) {\n      return hook.func === func;\n    })\n    .length > 0;\n\n  if (already_registered) {\n    throw 'That function is already registered.';\n  }\n\n  hooks.push({\n    func: func,\n    context: context\n  });\n};\n\n/**\n  Execute registered hooks.\n\n  Optional arguments\n*/\nMG.call_hook = function(name) {\n  var hooks = MG._hooks[name],\n    result = [].slice.apply(arguments, [1]),\n    processed;\n\n  if (hooks) {\n    hooks.forEach(function(hook) {\n      if (hook.func) {\n        var params = processed || result;\n\n        if (params && params.constructor !== Array) {\n          params = [params];\n        }\n\n        params = [].concat.apply([], params);\n        processed = hook.func.apply(hook.context, params);\n      }\n    });\n  }\n\n  return processed || result;\n};\n\nMG.globals = {};\nMG.deprecations = {\n  rollover_callback: { replacement: 'mouseover', version: '2.0' },\n  rollout_callback: { replacement: 'mouseout', version: '2.0' },\n  x_rollover_format: { replacement: 'x_mouseover', version: '2.10' },\n  y_rollover_format: { replacement: 'y_mouseover', version: '2.10' },\n  show_years: { replacement: 'show_secondary_x_label', version: '2.1' },\n  xax_start_at_min: { replacement: 'axes_not_compact', version: '2.7' },\n  interpolate_tension: { replacement: 'interpolate', version: '2.10' }\n};\nMG.globals.link = false;\nMG.globals.version = \"1.1\";\n\nMG.charts = {};\n\nMG.data_graphic = function(args) {\n  'use strict';\n  var defaults = {\n    missing_is_zero: false,                     // if true, missing values will be treated as zeros\n    missing_is_hidden: false,                   // if true, missing values will appear as broken segments\n    missing_is_hidden_accessor: null,           // the accessor that determines the boolean value for missing data points\n    legend: '' ,                                // an array identifying the labels for a chart's lines\n    legend_target: '',                          // if set, the specified element is populated with a legend\n    error: '',                                  // if set, a graph will show an error icon and log the error to the console\n    animate_on_load: false,                     // animate lines on load\n    top: 65,                                    // the size of the top margin\n    title_y_position: 10,                       // how many pixels from the top edge (0) should we show the title at\n    center_title_full_width: false,             // center the title over the full graph (i.e. ignore left and right margins)\n    bottom: 45,                                 // the size of the bottom margin\n    right: 10,                                  // size of the right margin\n    left: 50,                                   // size of the left margin\n    buffer: 8,                                  // the buffer between the actual chart area and the margins\n    width: 350,                                 // the width of the entire graphic\n    height: 220,                                // the height of the entire graphic\n    full_width: false,                          // sets the graphic width to be the width of the parent element and resizes dynamically\n    full_height: false,                         // sets the graphic width to be the width of the parent element and resizes dynamically\n    small_height_threshold: 120,                // the height threshold for when smaller text appears\n    small_width_threshold: 160,                 // the width  threshold for when smaller text appears\n    xax_count: 6,                               // number of x axis ticks\n    xax_tick_length: 5,                         // x axis tick length\n    axes_not_compact: true,\n    yax_count: 3,                               // number of y axis ticks\n    yax_tick_length: 5,                         // y axis tick length\n    x_extended_ticks: false,                    // extends x axis ticks across chart - useful for tall charts\n    y_extended_ticks: false,                    // extends y axis ticks across chart - useful for long charts\n    y_scale_type: 'linear',\n    max_x: null,\n    max_y: null,\n    min_x: null,\n    min_y: null,                                // if set, y axis starts at an arbitrary value\n    min_y_from_data: false,                     // if set, y axis will start at minimum value rather than at 0\n    point_size: 2.5,                            // the size of the dot that appears on a line on mouse-over\n    x_accessor: 'date',\n    xax_units: '',\n    x_label: '',\n    x_sort: true,\n    x_axis: true,\n    y_axis: true,\n    x_axis_position: 'bottom',\n    y_axis_position: 'left',\n    x_axis_type: null,                          // TO BE INTRODUCED IN 2.10\n    y_axis_type: null,                          // TO BE INTRODUCED IN 2.10\n    ygroup_accessor: null,\n    xgroup_accessor:null,\n    y_padding_percentage: 0.05,                 // for categorical scales\n    y_outer_padding_percentage: .1,             // for categorical scales\n    ygroup_padding_percentage:.25,              // for categorical scales\n    ygroup_outer_padding_percentage: 0,         // for categorical scales\n    x_padding_percentage: 0.05,                 // for categorical scales\n    x_outer_padding_percentage: .1,             // for categorical scales\n    xgroup_padding_percentage:.25,              // for categorical scales\n    xgroup_outer_padding_percentage: 0,         // for categorical scales\n    y_categorical_show_guides: false,\n    x_categorical_show_guide: false,\n    rotate_x_labels: 0,\n    rotate_y_labels: 0,\n    y_accessor: 'value',\n    y_label: '',\n    yax_units: '',\n    yax_units_append: false,\n    x_rug: false,\n    y_rug: false,\n    mouseover_align: 'right',                   // implemented in point.js\n    x_mouseover: null,\n    y_mouseover: null,\n    transition_on_update: true,\n    mouseover: null,\n    click: null,\n    show_rollover_text: true,\n    show_confidence_band: null,                 // given [l, u] shows a confidence at each point from l to u\n    xax_format: null,                           // xax_format is a function that formats the labels for the x axis.\n    area: true,\n    chart_type: 'line',\n    data: [],\n    decimals: 2,                                // the number of decimals in any rollover\n    format: 'count',                            // format = {count, percentage}\n    inflator: 10/9,                             // for setting y axis max\n    linked: false,                              // links together all other graphs with linked:true, so rollovers in one trigger rollovers in the others\n    linked_format: '%Y-%m-%d',                  // What granularity to link on for graphs. Default is at day\n    list: false,\n    baselines: null,                            // sets the baseline lines\n    markers: null,                              // sets the marker lines\n    scalefns: {},\n    scales: {},\n    utc_time: false,\n    european_clock: false,\n    show_year_markers: false,\n    show_secondary_x_label: true,\n    target: '#viz',\n    interpolate: d3.curveCatmullRom.alpha(0),   // interpolation method to use when rendering lines; increase tension if your data is irregular and you notice artifacts\n    custom_line_color_map: [],                  // allows arbitrary mapping of lines to colors, e.g. [2,3] will map line 1 to color 2 and line 2 to color 3\n    colors: null,                               // UNIMPLEMENTED - allows direct color mapping to line colors. Will eventually require\n    max_data_size: null,                        // explicitly specify the the max number of line series, for use with custom_line_color_map\n    aggregate_rollover: false,                  // links the lines in a multi-line chart\n    show_tooltips: true                         // if enabled, a chart's description will appear in a tooltip (requires jquery)\n  };\n\n  MG.call_hook('global.defaults', defaults);\n\n  if (!args) { args = {}; }\n\n  var selected_chart = MG.charts[args.chart_type || defaults.chart_type];\n  merge_with_defaults(args, selected_chart.defaults, defaults);\n\n  if (args.list) {\n    args.x_accessor = 0;\n    args.y_accessor = 1;\n  }\n\n  // check for deprecated parameters\n  for (var key in MG.deprecations) {\n    if (args.hasOwnProperty(key)) {\n      var deprecation = MG.deprecations[key],\n        message = 'Use of `args.' + key + '` has been deprecated',\n        replacement = deprecation.replacement,\n        version;\n\n      // transparently alias the deprecated\n      if (replacement) {\n        if (args[replacement]) {\n          message += '. The replacement - `args.' + replacement + '` - has already been defined. This definition will be discarded.';\n        } else {\n          args[replacement] = args[key];\n        }\n      }\n\n      if (deprecation.warned) {\n        continue;\n      }\n\n      deprecation.warned = true;\n\n      if (replacement) {\n        message += ' in favor of `args.' + replacement + '`';\n      }\n\n      warn_deprecation(message, deprecation.version);\n    }\n  }\n\n  MG.call_hook('global.before_init', args);\n\n  new selected_chart.descriptor(args);\n\n  return args.data;\n};\n\nif (mg_jquery_exists()) {\n    /* ========================================================================\n     * Bootstrap: tooltip.js v3.3.5\n     * http://getbootstrap.com/javascript/#tooltip\n     * Inspired by the original jQuery.tipsy by Jason Frame\n     * ========================================================================\n     * Copyright 2011-2015 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n\n    +function ($) {\n      'use strict';\n\n      // TOOLTIP PUBLIC CLASS DEFINITION\n      // ===============================\n\n      var Tooltip = function (element, options) {\n        this.type       = null\n        this.options    = null\n        this.enabled    = null\n        this.timeout    = null\n        this.hoverState = null\n        this.$element   = null\n        this.inState    = null\n\n        this.init('tooltip', element, options)\n      }\n\n      Tooltip.VERSION  = '3.3.5'\n\n      Tooltip.TRANSITION_DURATION = 150\n\n      Tooltip.DEFAULTS = {\n        animation: true,\n        placement: 'top',\n        selector: false,\n        template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n        trigger: 'hover focus',\n        title: '',\n        delay: 0,\n        html: false,\n        container: false,\n        viewport: {\n          selector: 'body',\n          padding: 0\n        }\n      }\n\n      Tooltip.prototype.init = function (type, element, options) {\n        this.enabled   = true\n        this.type      = type\n        this.$element  = $(element)\n        this.options   = this.getOptions(options)\n        this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n        this.inState   = { click: false, hover: false, focus: false }\n\n        if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n          throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n        }\n\n        var triggers = this.options.trigger.split(' ')\n\n        for (var i = triggers.length; i--;) {\n          var trigger = triggers[i]\n\n          if (trigger == 'click') {\n            this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n          } else if (trigger != 'manual') {\n            var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n            var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n            this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n            this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n          }\n        }\n\n        this.options.selector ?\n          (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n          this.fixTitle()\n      }\n\n      Tooltip.prototype.getDefaults = function () {\n        return Tooltip.DEFAULTS\n      }\n\n      Tooltip.prototype.getOptions = function (options) {\n        options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n        if (options.delay && typeof options.delay == 'number') {\n          options.delay = {\n            show: options.delay,\n            hide: options.delay\n          }\n        }\n\n        return options\n      }\n\n      Tooltip.prototype.getDelegateOptions = function () {\n        var options  = {}\n        var defaults = this.getDefaults()\n\n        this._options && $.each(this._options, function (key, value) {\n          if (defaults[key] != value) options[key] = value\n        })\n\n        return options\n      }\n\n      Tooltip.prototype.enter = function (obj) {\n        var self = obj instanceof this.constructor ?\n          obj : $(obj.currentTarget).data('bs.' + this.type)\n\n        if (!self) {\n          self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n          $(obj.currentTarget).data('bs.' + this.type, self)\n        }\n\n        if (obj instanceof $.Event) {\n          self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n        }\n\n        if (self.tip().hasClass('in') || self.hoverState == 'in') {\n          self.hoverState = 'in'\n          return\n        }\n\n        clearTimeout(self.timeout)\n\n        self.hoverState = 'in'\n\n        if (!self.options.delay || !self.options.delay.show) return self.show()\n\n        self.timeout = setTimeout(function () {\n          if (self.hoverState == 'in') self.show()\n        }, self.options.delay.show)\n      }\n\n      Tooltip.prototype.isInStateTrue = function () {\n        for (var key in this.inState) {\n          if (this.inState[key]) return true\n        }\n\n        return false\n      }\n\n      Tooltip.prototype.leave = function (obj) {\n        var self = obj instanceof this.constructor ?\n          obj : $(obj.currentTarget).data('bs.' + this.type)\n\n        if (!self) {\n          self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n          $(obj.currentTarget).data('bs.' + this.type, self)\n        }\n\n        if (obj instanceof $.Event) {\n          self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n        }\n\n        if (self.isInStateTrue()) return\n\n        clearTimeout(self.timeout)\n\n        self.hoverState = 'out'\n\n        if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n        self.timeout = setTimeout(function () {\n          if (self.hoverState == 'out') self.hide()\n        }, self.options.delay.hide)\n      }\n\n      Tooltip.prototype.show = function () {\n        var e = $.Event('show.bs.' + this.type)\n\n        if (this.hasContent() && this.enabled) {\n          this.$element.trigger(e)\n\n          var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n          if (e.isDefaultPrevented() || !inDom) return\n          var that = this\n\n          var $tip = this.tip()\n\n          var tipId = this.getUID(this.type)\n\n          this.setContent()\n          $tip.attr('id', tipId)\n          this.$element.attr('aria-describedby', tipId)\n\n          if (this.options.animation) $tip.addClass('fade')\n\n          var placement = typeof this.options.placement == 'function' ?\n            this.options.placement.call(this, $tip[0], this.$element[0]) :\n            this.options.placement\n\n          var autoToken = /\\s?auto?\\s?/i\n          var autoPlace = autoToken.test(placement)\n          if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n          $tip\n            .detach()\n            .css({ top: 0, left: 0, display: 'block' })\n            .addClass(placement)\n            .data('bs.' + this.type, this)\n\n          this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n          this.$element.trigger('inserted.bs.' + this.type)\n\n          var pos          = this.getPosition()\n          var actualWidth  = $tip[0].offsetWidth\n          var actualHeight = $tip[0].offsetHeight\n\n          if (autoPlace) {\n            var orgPlacement = placement\n            var viewportDim = this.getPosition(this.$viewport)\n\n            placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                        placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                        placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                        placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                        placement\n\n            $tip\n              .removeClass(orgPlacement)\n              .addClass(placement)\n          }\n\n          var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n          this.applyPlacement(calculatedOffset, placement)\n\n          var complete = function () {\n            var prevHoverState = that.hoverState\n            that.$element.trigger('shown.bs.' + that.type)\n            that.hoverState = null\n\n            if (prevHoverState == 'out') that.leave(that)\n          }\n\n          $.support.transition && this.$tip.hasClass('fade') ?\n            $tip\n              .one('bsTransitionEnd', complete)\n              .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n            complete()\n        }\n      }\n\n      Tooltip.prototype.applyPlacement = function (offset, placement) {\n        var $tip   = this.tip()\n        var width  = $tip[0].offsetWidth\n        var height = $tip[0].offsetHeight\n\n        // manually read margins because getBoundingClientRect includes difference\n        var marginTop = parseInt($tip.css('margin-top'), 10)\n        var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n        // we must check for NaN for ie 8/9\n        if (isNaN(marginTop))  marginTop  = 0\n        if (isNaN(marginLeft)) marginLeft = 0\n\n        offset.top  += marginTop\n        offset.left += marginLeft\n\n        // $.fn.offset doesn't round pixel values\n        // so we use setOffset directly with our own function B-0\n        $.offset.setOffset($tip[0], $.extend({\n          using: function (props) {\n            $tip.css({\n              top: Math.round(props.top),\n              left: Math.round(props.left)\n            })\n          }\n        }, offset), 0)\n\n        $tip.addClass('in')\n\n        // check to see if placing tip in new offset caused the tip to resize itself\n        var actualWidth  = $tip[0].offsetWidth\n        var actualHeight = $tip[0].offsetHeight\n\n        if (placement == 'top' && actualHeight != height) {\n          offset.top = offset.top + height - actualHeight\n        }\n\n        var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n        if (delta.left) offset.left += delta.left\n        else offset.top += delta.top\n\n        var isVertical          = /top|bottom/.test(placement)\n        var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n        var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n        $tip.offset(offset)\n        this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n      }\n\n      Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n        this.arrow()\n          .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n          .css(isVertical ? 'top' : 'left', '')\n      }\n\n      Tooltip.prototype.setContent = function () {\n        var $tip  = this.tip()\n        var title = this.getTitle()\n\n        $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n        $tip.removeClass('fade in top bottom left right')\n      }\n\n      Tooltip.prototype.hide = function (callback) {\n        var that = this\n        var $tip = $(this.$tip)\n        var e    = $.Event('hide.bs.' + this.type)\n\n        function complete() {\n          if (that.hoverState != 'in') $tip.detach()\n          that.$element\n            .removeAttr('aria-describedby')\n            .trigger('hidden.bs.' + that.type)\n          callback && callback()\n        }\n\n        this.$element.trigger(e)\n\n        if (e.isDefaultPrevented()) return\n\n        $tip.removeClass('in')\n\n        $.support.transition && $tip.hasClass('fade') ?\n          $tip\n            .one('bsTransitionEnd', complete)\n            .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n          complete()\n\n        this.hoverState = null\n\n        return this\n      }\n\n      Tooltip.prototype.fixTitle = function () {\n        var $e = this.$element\n        if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n          $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n        }\n      }\n\n      Tooltip.prototype.hasContent = function () {\n        return this.getTitle()\n      }\n\n      Tooltip.prototype.getPosition = function ($element) {\n        $element   = $element || this.$element\n\n        var el     = $element[0]\n        var isBody = el.tagName == 'BODY'\n\n        var elRect    = el.getBoundingClientRect()\n        if (elRect.width == null) {\n          // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n          elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n        }\n        var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n        var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n        var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n        return $.extend({}, elRect, scroll, outerDims, elOffset)\n      }\n\n      Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n        return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n               placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n               placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n            /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n      }\n\n      Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n        var delta = { top: 0, left: 0 }\n        if (!this.$viewport) return delta\n\n        var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n        var viewportDimensions = this.getPosition(this.$viewport)\n\n        if (/right|left/.test(placement)) {\n          var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n          var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n          if (topEdgeOffset < viewportDimensions.top) { // top overflow\n            delta.top = viewportDimensions.top - topEdgeOffset\n          } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n            delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n          }\n        } else {\n          var leftEdgeOffset  = pos.left - viewportPadding\n          var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n          if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n            delta.left = viewportDimensions.left - leftEdgeOffset\n          } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n            delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n          }\n        }\n\n        return delta\n      }\n\n      Tooltip.prototype.getTitle = function () {\n        var title\n        var $e = this.$element\n        var o  = this.options\n\n        title = $e.attr('data-original-title')\n          || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n        return title\n      }\n\n      Tooltip.prototype.getUID = function (prefix) {\n        do prefix += ~~(Math.random() * 1000000)\n        while (document.getElementById(prefix))\n        return prefix\n      }\n\n      Tooltip.prototype.tip = function () {\n        if (!this.$tip) {\n          this.$tip = $(this.options.template)\n          if (this.$tip.length != 1) {\n            throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n          }\n        }\n        return this.$tip\n      }\n\n      Tooltip.prototype.arrow = function () {\n        return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n      }\n\n      Tooltip.prototype.enable = function () {\n        this.enabled = true\n      }\n\n      Tooltip.prototype.disable = function () {\n        this.enabled = false\n      }\n\n      Tooltip.prototype.toggleEnabled = function () {\n        this.enabled = !this.enabled\n      }\n\n      Tooltip.prototype.toggle = function (e) {\n        var self = this\n        if (e) {\n          self = $(e.currentTarget).data('bs.' + this.type)\n          if (!self) {\n            self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n            $(e.currentTarget).data('bs.' + this.type, self)\n          }\n        }\n\n        if (e) {\n          self.inState.click = !self.inState.click\n          if (self.isInStateTrue()) self.enter(self)\n          else self.leave(self)\n        } else {\n          self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n        }\n      }\n\n      Tooltip.prototype.destroy = function () {\n        var that = this\n        clearTimeout(this.timeout)\n        this.hide(function () {\n          that.$element.off('.' + that.type).removeData('bs.' + that.type)\n          if (that.$tip) {\n            that.$tip.detach()\n          }\n          that.$tip = null\n          that.$arrow = null\n          that.$viewport = null\n        })\n      }\n\n\n      // TOOLTIP PLUGIN DEFINITION\n      // =========================\n\n      function Plugin(option) {\n        return this.each(function () {\n          var $this   = $(this)\n          var data    = $this.data('bs.tooltip')\n          var options = typeof option == 'object' && option\n\n          if (!data && /destroy|hide/.test(option)) return\n          if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n          if (typeof option == 'string') data[option]()\n        })\n      }\n\n      var old = $.fn.tooltip\n\n      $.fn.tooltip             = Plugin\n      $.fn.tooltip.Constructor = Tooltip\n\n\n      // TOOLTIP NO CONFLICT\n      // ===================\n\n      $.fn.tooltip.noConflict = function () {\n        $.fn.tooltip = old\n        return this\n      }\n\n    }(jQuery);\n\n\n    /* ========================================================================\n     * Bootstrap: popover.js v3.3.5\n     * http://getbootstrap.com/javascript/#popovers\n     * ========================================================================\n     * Copyright 2011-2015 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n\n    +function ($) {\n      'use strict';\n\n      // POPOVER PUBLIC CLASS DEFINITION\n      // ===============================\n\n      var Popover = function (element, options) {\n        this.init('popover', element, options)\n      }\n\n      if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n      Popover.VERSION  = '3.3.5'\n\n      Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n        placement: 'right',\n        trigger: 'click',\n        content: '',\n        template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n      })\n\n\n      // NOTE: POPOVER EXTENDS tooltip.js\n      // ================================\n\n      Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n      Popover.prototype.constructor = Popover\n\n      Popover.prototype.getDefaults = function () {\n        return Popover.DEFAULTS\n      }\n\n      Popover.prototype.setContent = function () {\n        var $tip    = this.tip()\n        var title   = this.getTitle()\n        var content = this.getContent()\n\n        $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n        $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n          this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n        ](content)\n\n        $tip.removeClass('fade top bottom left right in')\n\n        // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n        // this manually by checking the contents.\n        if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n      }\n\n      Popover.prototype.hasContent = function () {\n        return this.getTitle() || this.getContent()\n      }\n\n      Popover.prototype.getContent = function () {\n        var $e = this.$element\n        var o  = this.options\n\n        return $e.attr('data-content')\n          || (typeof o.content == 'function' ?\n                o.content.call($e[0]) :\n                o.content)\n      }\n\n      Popover.prototype.arrow = function () {\n        return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n      }\n\n\n      // POPOVER PLUGIN DEFINITION\n      // =========================\n\n      function Plugin(option) {\n        return this.each(function () {\n          var $this   = $(this)\n          var data    = $this.data('bs.popover')\n          var options = typeof option == 'object' && option\n\n          if (!data && /destroy|hide/.test(option)) return\n          if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n          if (typeof option == 'string') data[option]()\n        })\n      }\n\n      var old = $.fn.popover\n\n      $.fn.popover             = Plugin\n      $.fn.popover.Constructor = Popover\n\n\n      // POPOVER NO CONFLICT\n      // ===================\n\n      $.fn.popover.noConflict = function () {\n        $.fn.popover = old\n        return this\n      }\n\n    }(jQuery);\n}\n\nfunction chart_title(args) {\n  'use strict';\n\n  var svg = mg_get_svg_child_of(args.target);\n\n  //remove the current title if it exists\n  svg.select('.mg-header').remove();\n\n  if (args.target && args.title) {\n    var chartTitle = svg.insert('text')\n      .attr('class', 'mg-header')\n      .attr('x', args.center_title_full_width ? args.width /2 : (args.width + args.left - args.right) / 2)\n      .attr('y', args.title_y_position)\n      .attr('text-anchor', 'middle')\n      .attr('dy', '0.55em');\n\n    //show the title\n    chartTitle.append('tspan')\n      .attr('class', 'mg-chart-title')\n      .text(args.title);\n\n    //show and activate the description icon if we have a description\n    if (args.show_tooltips && args.description && mg_jquery_exists()) {\n      chartTitle.append('tspan')\n        .attr('class', 'mg-chart-description')\n        .attr('dx', '0.3em')\n        .text('\\uf059');\n\n      //now that the title is an svg text element, we'll have to trigger\n      //mouseenter, mouseleave events manually for the popover to work properly\n      var $chartTitle = $(chartTitle.node());\n      $chartTitle.popover({\n        html: true,\n        animation: false,\n        placement: 'top',\n        content: args.description,\n        container: args.target,\n        trigger: 'manual',\n        template: '<div class=\"popover mg-popover\"><div class=\"arrow\"></div><div class=\"popover-inner\"><h3 class=\"popover-title\"></h3><div class=\"popover-content\"><p></p></div></div></div>'\n      }).on('mouseenter', function() {\n        d3.selectAll(args.target)\n          .selectAll('.mg-popover')\n          .remove();\n\n        $(this).popover('show');\n        $(d3.select(args.target).select('.popover').node())\n          .on('mouseleave', function () {\n            $chartTitle.popover('hide');\n          });\n      }).on('mouseleave', function () {\n        setTimeout(function () {\n          if (!$('.popover:hover').length) {\n            $chartTitle.popover('hide');\n          }\n        }, 120);\n      });\n    } else if (args.show_tooltips && args.description && typeof $ === 'undefined') {\n      args.error = 'In order to enable tooltips, please make sure you include jQuery.';\n    }\n  }\n\n  if (args.error) {\n    error(args);\n  }\n}\n\nMG.chart_title = chart_title;\n\nfunction mg_add_scale_function(args, scalefcn_name, scale, accessor, inflation) {\n  args.scalefns[scalefcn_name] = function(di) {\n    if (inflation === undefined) return args.scales[scale](di[accessor]);\n    else return args.scales[scale](di[accessor]) + inflation;\n  };\n}\n\nfunction mg_position(str, args) {\n  if (str === 'bottom' || str === 'top') {\n    return [mg_get_plot_left(args), mg_get_plot_right(args)];\n  }\n\n  if (str === 'left' || str === 'right') {\n    return [mg_get_plot_bottom(args), args.top];\n  }\n}\n\nfunction mg_cat_position(str, args) {\n  if (str === 'bottom' || str === 'top') {\n    return [mg_get_plot_left(args), mg_get_plot_right(args)]\n  }\n\n  if (str === 'left' || str === 'right') {\n    return [mg_get_plot_bottom(args), mg_get_plot_top(args)];\n  }\n}\n\nfunction MGScale(args) {\n  // big wrapper around d3 scale that automatically formats & calculates scale bounds\n  // according to the data, and handles other niceties.\n  var scaleArgs = {}\n  scaleArgs.use_inflator = false;\n  scaleArgs.zero_bottom = false;\n  scaleArgs.scaleType = 'numerical';\n\n  this.namespace = function(_namespace) {\n    scaleArgs.namespace = _namespace;\n    scaleArgs.namespace_accessor_name = scaleArgs.namespace + '_accessor';\n    scaleArgs.scale_name = scaleArgs.namespace.toUpperCase();\n    scaleArgs.scalefn_name = scaleArgs.namespace + 'f';\n    return this;\n  }\n\n  this.scaleName = function(scaleName) {\n    scaleArgs.scale_name = scaleName.toUpperCase();\n    scaleArgs.scalefn_name = scaleName +'f';\n    return this;\n  }\n\n  this.inflateDomain = function(tf) {\n    scaleArgs.use_inflator = tf;\n    return this;\n  }\n\n  this.zeroBottom = function(tf) {\n    scaleArgs.zero_bottom = tf;\n    return this;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// all scale domains are either numerical (number, date, etc.) or categorical (factor, label, etc) /////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////\n  // these functions automatically create the d3 scale function and place the domain.\n\n  this.numericalDomainFromData = function() {\n    var other_flat_data_arrays = [];\n\n    if (arguments.length > 0) {\n      other_flat_data_arrays = arguments;\n    }\n\n    // pull out a non-empty array in args.data.\n    var illustrative_data;\n    for (var i = 0; i < args.data.length; i++) {\n      if (args.data[i].length > 0) {\n        illustrative_data = args.data[i];\n      }\n    }\n    scaleArgs.is_time_series = mg_is_date(illustrative_data[0][args[scaleArgs.namespace_accessor_name]])\n      ? true\n      : false;\n\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n\n    mg_min_max_numerical(args, scaleArgs, other_flat_data_arrays, scaleArgs.use_inflator);\n\n    var time_scale = (args.utc_time)\n      ? d3.scaleUtc()\n      : d3.scaleTime();\n\n    args.scales[scaleArgs.scale_name] = (scaleArgs.is_time_series)\n      ? time_scale\n      : (args[scaleArgs.namespace + '_scale_type'] === 'log')\n        ? d3.scaleLog()\n        : d3.scaleLinear();\n\n    args.scales[scaleArgs.scale_name].domain([args.processed['min_' + scaleArgs.namespace], args.processed['max_' + scaleArgs.namespace]]);\n    scaleArgs.scaleType = 'numerical';\n\n    return this;\n  }\n\n  this.categoricalDomain = function(domain) {\n    args.scales[scaleArgs.scale_name] = d3.scaleOrdinal().domain(domain);\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n    return this;\n  }\n\n  this.categoricalDomainFromData = function() {\n    // make args.categorical_variables.\n    // lets make the categorical variables.\n    var all_data = mg_flatten_array(args.data)\n    //d3.set(data.map(function(d){return d[args.group_accessor]})).values()\n    scaleArgs.categoricalVariables = d3.set(all_data.map(function(d) {\n      return d[args[scaleArgs.namespace_accessor_name]] })).values();\n    args.scales[scaleArgs.scale_name] = d3.scaleBand()\n      .domain(scaleArgs.categoricalVariables);\n\n    scaleArgs.scaleType = 'categorical';\n    return this;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  ////////// all scale ranges are either positional (for axes, etc) or arbitrary (colors, size, etc) //////////\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  this.numericalRange = function(range) {\n    if (typeof range === 'string') {\n      args\n        .scales[scaleArgs.scale_name]\n        .range(mg_position(range, args));\n    } else {\n      args\n        .scales[scaleArgs.scale_name]\n        .range(range);\n    }\n\n    return this;\n  }\n\n  this.categoricalRangeBands = function(range, halfway) {\n    if (halfway === undefined) halfway = false;\n\n    var namespace = scaleArgs.namespace;\n    var paddingPercentage = args[namespace + '_padding_percentage'];\n    var outerPaddingPercentage = args[namespace + '_outer_padding_percentage'];\n    if (typeof range === 'string') {\n      // if string, it's a location. Place it accordingly.\n      args.scales[scaleArgs.scale_name]\n        .range(mg_position(range, args))\n        .paddingInner(paddingPercentage)\n        .paddingOuter(outerPaddingPercentage);\n    } else {\n      args.scales[scaleArgs.scale_name]\n        .range(range)\n        .paddingInner(paddingPercentage)\n        .paddingOuter(outerPaddingPercentage);\n    }\n\n    mg_add_scale_function(\n      args,\n      scaleArgs.scalefn_name,\n      scaleArgs.scale_name,\n      args[scaleArgs.namespace_accessor_name],\n      halfway\n        ? args.scales[scaleArgs.scale_name].bandwidth() / 2\n        : 0\n    );\n\n    return this;\n  }\n\n  this.categoricalRange = function(range) {\n    args.scales[scaleArgs.scale_name].range(range);\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n    return this;\n  }\n\n  this.categoricalColorRange = function() {\n    args.scales[scaleArgs.scale_name] = args.scales[scaleArgs.scale_name].domain().length > 10\n      ? d3.scaleOrdinal(d3.schemeCategory20)\n      : d3.scaleOrdinal(d3.schemeCategory10);\n\n    args\n      .scales[scaleArgs.scale_name]\n      .domain(scaleArgs.categoricalVariables);\n\n    mg_add_scale_function(args, scaleArgs.scalefn_name, scaleArgs.scale_name, args[scaleArgs.namespace_accessor_name]);\n    return this;\n  }\n\n  this.clamp = function(yn) {\n    args.scales[scaleArgs.scale_name].clamp(yn);\n    return this;\n  }\n\n  return this;\n}\n\nMG.scale_factory = MGScale;\n\n/////////////////////////////// x, x_accessor, markers, baselines, etc.\nfunction mg_min_max_numerical(args, scaleArgs, additional_data_arrays) {\n  // A BIT OF EXPLANATION ABOUT THIS FUNCTION\n  // This function pulls out all the accessor values in all the arrays in args.data.\n  // We also have this additional argument, additional_data_arrays, which is an array of arrays of raw data values.\n  // These values also get concatenated to the data pulled from args.data, and the extents are calculate from that.\n  // They are optional.\n  //\n  // This may seem arbitrary, but it gives us a lot of flexibility. For instance, if we're calculating\n  // the min and max for the y axis of a line chart, we're going to want to also factor in baselines (horizontal lines\n  // that might potentially be outside of the y value bounds). The easiest way to do this is in the line.js code\n  // & scale creation to just flatten the args.baselines array, pull out hte values, and feed it in\n  // so it appears in additional_data_arrays.\n  var namespace = scaleArgs.namespace;\n  var namespace_accessor_name = scaleArgs.namespace_accessor_name;\n  var use_inflator = scaleArgs.use_inflator;\n  var zero_bottom = scaleArgs.zero_bottom;\n\n  var accessor = args[namespace_accessor_name];\n\n  // add together all relevant data arrays.\n  var all_data = mg_flatten_array(args.data)\n    .map(function(dp) {\n      return dp[accessor] })\n    .concat(mg_flatten_array(additional_data_arrays));\n\n  // do processing for log\n  if (args[namespace + '_scale_type'] === 'log') {\n    all_data = all_data.filter(function(d) {\n      return d > 0;\n    });\n  }\n\n  // use inflator?\n  var extents = d3.extent(all_data);\n  var min_val = extents[0];\n  var max_val = extents[1];\n\n  // bolt scale domain to zero when the right conditions are met:\n  // not pulling the bottom of the range from data\n  // not zero-bottomed\n  // not a time series\n  if (zero_bottom && !args['min_' + namespace + '_from_data'] && min_val > 0 && !scaleArgs.is_time_series) {\n    min_val = args[namespace + '_scale_type'] === 'log' ? 1 : 0;\n  }\n\n  if (args[namespace + '_scale_type'] !== 'log' && min_val < 0 && !scaleArgs.is_time_series) {\n    min_val = min_val - (min_val - min_val * args.inflator) * use_inflator;\n  }\n\n  if (!scaleArgs.is_time_series) {\n    max_val = (max_val < 0) ? max_val + (max_val - max_val * args.inflator) * use_inflator : max_val * (use_inflator ? args.inflator : 1);\n  }\n\n  min_val = args['min_' + namespace] || min_val;\n  max_val = args['max_' + namespace] || max_val;\n  // if there's a single data point, we should custom-set the min and max values.\n\n  if (min_val === max_val && !(args['min_' + namespace] && args['max_' + namespace])) {\n\n    if (mg_is_date(min_val)) {\n      max_val = new Date(MG.clone(min_val).setDate(min_val.getDate() + 1));\n      min_val = new Date(MG.clone(min_val).setDate(min_val.getDate() - 1));\n    } else if (typeof min_val === 'number') {\n      min_val = min_val - 1;\n      max_val = min_val + 1;\n      mg_force_xax_count_to_be_two(args);\n    }\n  }\n\n  args.processed['min_' + namespace] = min_val;\n  args.processed['max_' + namespace] = max_val;\n\n  MG.call_hook('x_axis.process_min_max', args, args.processed.min_x, args.processed.max_x);\n  MG.call_hook('y_axis.process_min_max', args, args.processed.min_y, args.processed.max_y);\n}\n\nfunction mg_categorical_group_color_scale(args) {\n  if (args.color_accessor !== false) {\n    if (args.ygroup_accessor) {\n      // add a custom accessor element.\n      if (args.color_accessor === null) {\n        args.color_accessor = args.y_accessor;\n      } else {}\n    }\n    if (args.color_accessor !== null) {\n      new MG.scale_factory(args)\n        .namespace('color')\n        .categoricalDomainFromData()\n        .categoricalColorRange();\n    }\n  }\n}\n\nfunction mg_add_color_categorical_scale(args, domain, accessor) {\n  args.scales.color = d3.scaleOrdinal(d3.schemeCategory20).domain(domain);\n  args.scalefns.color = function(d) {\n    return args.scales.color(d[accessor]);\n  };\n}\n\nfunction mg_get_categorical_domain(data, accessor) {\n  return d3.set(data.map(function(d) {\n      return d[accessor]; }))\n    .values();\n}\n\nfunction mg_get_color_domain(args) {\n  var color_domain;\n  if (args.color_domain === null) {\n    if (args.color_type === 'number') {\n      color_domain = d3.extent(args.data[0], function(d) {\n        return d[args.color_accessor]; });\n    } else if (args.color_type === 'category') {\n      color_domain = mg_get_categorical_domain(args.data[0], args.color_accessor);\n\n    }\n  } else {\n    color_domain = args.color_domain;\n  }\n  return color_domain;\n}\n\nfunction mg_get_color_range(args) {\n  var color_range;\n  if (args.color_range === null) {\n    if (args.color_type === 'number') {\n      color_range = ['blue', 'red'];\n    } else {\n      color_range = null;\n    }\n  } else {\n    color_range = args.color_range;\n  }\n  return color_range;\n}\n\nfunction processScaleTicks (args, axis) {\n  var accessor = args[axis + '_accessor'];\n  var scale_ticks = args.scales[axis.toUpperCase()].ticks(args[axis + 'ax_count']);\n  var max = args.processed['max_' + axis];\n\n  function log10 (val) {\n    if (val === 1000) {\n      return 3;\n    }\n    if (val === 1000000) {\n      return 7;\n    }\n    return Math.log(val) / Math.LN10;\n  }\n\n  if (args[axis + '_scale_type'] === 'log') {\n    // get out only whole logs\n    scale_ticks = scale_ticks.filter(function (d) {\n      return Math.abs(log10(d)) % 1 < 1e-6 || Math.abs(log10(d)) % 1 > 1 - 1e-6;\n    });\n  }\n\n  // filter out fraction ticks if our data is ints and if xmax > number of generated ticks\n  var number_of_ticks = scale_ticks.length;\n\n  // is our data object all ints?\n  var data_is_int = true;\n  args.data.forEach(function (d, i) {\n    d.forEach(function (d, i) {\n      if (d[accessor] % 1 !== 0) {\n        data_is_int = false;\n        return false;\n      }\n    });\n  });\n\n  if (data_is_int && number_of_ticks > max && args.format === 'count') {\n    // remove non-integer ticks\n    scale_ticks = scale_ticks.filter(function (d) {\n      return d % 1 === 0;\n    });\n  }\n  args.processed[axis + '_ticks'] = scale_ticks;\n}\n\nfunction rugPlacement (args, axisArgs) {\n  var position = axisArgs.position;\n  var ns = axisArgs.namespace;\n  var coordinates = {};\n  if (position === 'left') {\n    coordinates.x1 = mg_get_left(args) + 1;\n    coordinates.x2 = mg_get_left(args) + args.rug_buffer_size;\n    coordinates.y1 = args.scalefns[ns + 'f'];\n    coordinates.y2 = args.scalefns[ns + 'f'];\n  }\n  if (position === 'right') {\n    coordinates.x1 = mg_get_right(args) - 1,\n    coordinates.x2 = mg_get_right(args) - args.rug_buffer_size,\n    coordinates.y1 = args.scalefns[ns + 'f'];\n    coordinates.y2 = args.scalefns[ns + 'f'];\n  }\n  if (position === 'top') {\n    coordinates.x1 = args.scalefns[ns + 'f'];\n    coordinates.x2 = args.scalefns[ns + 'f'];\n    coordinates.y1 = mg_get_top(args) + 1;\n    coordinates.y2 = mg_get_top(args) + args.rug_buffer_size;\n  }\n  if (position === 'bottom') {\n    coordinates.x1 = args.scalefns[ns + 'f'];\n    coordinates.x2 = args.scalefns[ns + 'f'];\n    coordinates.y1 = mg_get_bottom(args) - 1;\n    coordinates.y2 = mg_get_bottom(args) - args.rug_buffer_size;\n  }\n  return coordinates;\n}\n\nfunction rimPlacement (args, axisArgs) {\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var tick_length = args.processed[ns + '_ticks'].length;\n  var ticks = args.processed[ns + '_ticks'];\n  var scale = args.scales[ns.toUpperCase()];\n  var coordinates = {};\n\n  if (position === 'left') {\n    coordinates.x1 = mg_get_left(args);\n    coordinates.x2 = mg_get_left(args);\n    coordinates.y1 = scale(ticks[0]).toFixed(2);\n    coordinates.y2 = scale(ticks[tick_length - 1]).toFixed(2);\n  }\n  if (position === 'right') {\n    coordinates.x1 = mg_get_right(args);\n    coordinates.x2 = mg_get_right(args);\n    coordinates.y1 = scale(ticks[0]).toFixed(2);\n    coordinates.y2 = scale(ticks[tick_length - 1]).toFixed(2);\n  }\n  if (position === 'top') {\n    coordinates.x1 = mg_get_left(args);\n    coordinates.x2 = mg_get_right(args);\n    coordinates.y1 = mg_get_top(args);\n    coordinates.y2 = mg_get_top(args);\n  }\n  if (position === 'bottom') {\n    coordinates.x1 = mg_get_left(args);\n    coordinates.x2 = mg_get_right(args);\n    coordinates.y1 = mg_get_bottom(args);\n    coordinates.y2 = mg_get_bottom(args);\n  }\n\n  if (position === 'left' || position === 'right') {\n    if (args.axes_not_compact) {\n      coordinates.y1 = mg_get_bottom(args);\n      coordinates.y2 = mg_get_top(args);\n    } else if (tick_length) {\n      coordinates.y1 = scale(ticks[0]).toFixed(2);\n      coordinates.y2 = scale(ticks[tick_length - 1]).toFixed(2);\n    }\n  }\n\n  return coordinates;\n}\n\nfunction labelPlacement (args, axisArgs) {\n  var position = axisArgs.position;\n  var ns = axisArgs.namespace;\n  var tickLength = args[ns + 'ax_tick_length'];\n  var scale = args.scales[ns.toUpperCase()];\n  var coordinates = {};\n\n  if (position === 'left') {\n    coordinates.x = mg_get_left(args) - tickLength * 3 / 2;\n    coordinates.y = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.dx = -3;\n    coordinates.dy = '.35em';\n    coordinates.textAnchor = 'end';\n    coordinates.text = function (d) {\n      return mg_compute_yax_format(args)(d);\n    };\n  }\n  if (position === 'right') {\n    coordinates.x = mg_get_right(args) + tickLength * 3 / 2;\n    coordinates.y = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.dx = 3;\n    coordinates.dy = '.35em';\n    coordinates.textAnchor = 'start';\n    coordinates.text = function (d) {\n      return mg_compute_yax_format(args)(d); };\n  }\n  if (position === 'top') {\n    coordinates.x = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.y = (mg_get_top(args) - tickLength * 7 / 3).toFixed(2);\n    coordinates.dx = 0;\n    coordinates.dy = '0em';\n    coordinates.textAnchor = 'middle';\n    coordinates.text = function (d) {\n      return mg_default_xax_format(args)(d);\n    };\n  }\n  if (position === 'bottom') {\n    coordinates.x = function (d) {\n      return scale(d).toFixed(2);\n    };\n    coordinates.y = (mg_get_bottom(args) + tickLength * 7 / 3).toFixed(2);\n    coordinates.dx = 0;\n    coordinates.dy = '.50em';\n    coordinates.textAnchor = 'middle';\n    coordinates.text = function (d) {\n      return mg_default_xax_format(args)(d);\n    };\n  }\n\n  return coordinates;\n}\n\nfunction selectXaxFormat (args) {\n  var c = args.chart_type;\n  if (!args.processed.xax_format) {\n    if (args.xax_format) {\n      args.processed.xax_format = args.xax_format;\n    } else {\n      if (c === 'line' || c === 'point' || c === 'histogram') {\n        args.processed.xax_format = mg_default_xax_format(args);\n      } else if (c === 'bar') {\n        args.processed.xax_format = mg_default_bar_xax_format(args);\n      }\n    }\n  }\n}\n\nfunction secondaryLabels (g, args, axisArgs) {\n  if (args.time_series && (args.show_years || args.show_secondary_x_label)) {\n    var tf = mg_get_yformat_and_secondary_time_function(args);\n    addSecondaryLabelElements(args, axisArgs, g, tf.timeframe, tf.yformat, tf.secondary);\n  }\n}\n\nfunction addSecondaryLabelElements (args, axisArgs, g, time_frame, yformat, secondary_function) {\n  var years = secondary_function(args.processed.min_x, args.processed.max_x);\n  if (years.length === 0) {\n    var first_tick = args.scales.X.ticks(args.xax_count)[0];\n    years = [first_tick];\n  }\n\n  var yg = mg_add_g(g, 'mg-year-marker');\n  if (time_frame === 'default' && args.show_year_markers) {\n    yearMarkerLine(args, axisArgs, yg, years, yformat);\n  }\n  if (time_frame != 'years') yearMarkerText(args, axisArgs, yg, years, yformat);\n}\n\nfunction yearMarkerLine (args, axisArgs, g, years, yformat) {\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('line')\n    .attr('x1', function (d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('x2', function (d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('y1', mg_get_top(args))\n    .attr('y2', mg_get_bottom(args));\n}\n\nfunction yearMarkerText (args, axisArgs, g, years, yformat) {\n  var position = axisArgs.position;\n  var ns = axisArgs.namespace;\n  var scale = args.scales[ns.toUpperCase()];\n  var x, y, dy, textAnchor, textFcn;\n  var xAxisTextElement = d3.select(args.target)\n    .select('.mg-x-axis text').node().getBoundingClientRect();\n\n  if (position === 'top') {\n    x = function (d, i) {\n      return scale(d).toFixed(2); };\n    y = (mg_get_top(args) - args.xax_tick_length * 7 / 3) - (xAxisTextElement.height);\n    dy = '.50em';\n    textAnchor = 'middle';\n    textFcn = function (d) {\n      return yformat(new Date(d)); };\n  }\n  if (position === 'bottom') {\n    x = function (d, i) {\n      return scale(d).toFixed(2); };\n    y = (mg_get_bottom(args) + args.xax_tick_length * 7 / 3) + (xAxisTextElement.height * 0.8);\n    dy = '.50em';\n    textAnchor = 'middle';\n    textFcn = function (d) {\n      return yformat(new Date(d)); };\n  }\n\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('text')\n    .attr('x', x)\n    .attr('y', y)\n    .attr('dy', dy)\n    .attr('text-anchor', textAnchor)\n    .text(textFcn);\n}\n\nfunction addNumericalLabels (g, args, axisArgs) {\n  var ns = axisArgs.namespace;\n  var coords = labelPlacement(args, axisArgs);\n  var ticks = args.processed[ns + '_ticks'];\n\n  var labels = g.selectAll('.mg-yax-labels')\n    .data(ticks).enter()\n    .append('text')\n    .attr('x', coords.x)\n    .attr('dx', coords.dx)\n    .attr('y', coords.y)\n    .attr('dy', coords.dy)\n    .attr('text-anchor', coords.textAnchor)\n    .text(coords.text);\n\n  // move the labels if they overlap\n  if (ns == 'x') {\n    selectXaxFormat(args);\n    if (args.time_series && args.european_clock) {\n      labels.append('tspan').classed('mg-european-hours', true).text(function (_d, i) {\n        var d = new Date(_d);\n        if (i === 0) return d3.timeFormat('%H')(d);\n        else return '';\n      });\n      labels.append('tspan').classed('mg-european-minutes-seconds', true).text(function (_d, i) {\n        var d = new Date(_d);\n        return ':' + args.processed.xax_format(d);\n      });\n    } else {\n      labels.text(function (d) {\n        return args.xax_units + args.processed.xax_format(d);\n      });\n    }\n    secondaryLabels(g, args, axisArgs);\n  }\n\n  if (mg_elements_are_overlapping(labels)) {\n    labels.filter(function (d, i) {\n      return (i + 1) % 2 === 0;\n    }).remove();\n\n    var svg = mg_get_svg_child_of(args.target);\n    svg.selectAll('.mg-' + ns + 'ax-ticks').filter(function (d, i) {\n      return (i + 1) % 2 === 0; })\n      .remove();\n  }\n}\n\nfunction addTickLines (g, args, axisArgs) {\n  // name\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var scale = args.scales[ns.toUpperCase()];\n\n  var ticks = args.processed[ns + '_ticks'];\n  var ticksClass = 'mg-' + ns + 'ax-ticks';\n  var extendedTicksClass = 'mg-extended-' + ns + 'ax-ticks';\n  var extendedTicks = args[ns + '_extended_ticks'];\n  var tickLength = args[ns + 'ax_tick_length'];\n\n  var x1, x2, y1, y2;\n\n  if (position === 'left') {\n    x1 = mg_get_left(args);\n    x2 = extendedTicks ? mg_get_right(args) : mg_get_left(args) - tickLength;\n    y1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n  }\n  if (position === 'right') {\n    x1 = mg_get_right(args);\n    x2 = extendedTicks ? mg_get_left(args) : mg_get_right(args) + tickLength;\n    y1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n  }\n  if (position === 'top') {\n    x1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    x2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y1 = mg_get_top(args);\n    y2 = extendedTicks ? mg_get_bottom(args) : mg_get_top(args) - tickLength;\n  }\n  if (position === 'bottom') {\n    x1 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    x2 = function (d) {\n      return scale(d).toFixed(2);\n    };\n    y1 = mg_get_bottom(args);\n    y2 = extendedTicks ? mg_get_top(args) : mg_get_bottom(args) + tickLength;\n  }\n\n  g.selectAll('.' + ticksClass)\n    .data(ticks).enter()\n    .append('line')\n    .classed(extendedTicksClass, extendedTicks)\n    .attr('x1', x1)\n    .attr('x2', x2)\n    .attr('y1', y1)\n    .attr('y2', y2);\n}\n\nfunction initializeAxisRim (g, args, axisArgs) {\n  var namespace = axisArgs.namespace;\n  var tick_length = args.processed[namespace + '_ticks'].length;\n\n  var rim = rimPlacement(args, axisArgs);\n\n  if (!args[namespace + '_extended_ticks'] && !args[namespace + '_extended_ticks'] && tick_length) {\n    g.append('line')\n      .attr('x1', rim.x1)\n      .attr('x2', rim.x2)\n      .attr('y1', rim.y1)\n      .attr('y2', rim.y2);\n  }\n}\n\nfunction initializeRug (args, rug_class) {\n  var svg = mg_get_svg_child_of(args.target);\n  var all_data = mg_flatten_array(args.data);\n  var rug = svg.selectAll('line.' + rug_class).data(all_data);\n\n  // set the attributes that do not change after initialization, per\n  rug.enter().append('svg:line').attr('class', rug_class).attr('opacity', 0.3);\n\n  // remove rug elements that are no longer in use\n  mg_exit_and_remove(rug);\n\n  // set coordinates of new rug elements\n  mg_exit_and_remove(rug);\n  return rug;\n}\n\nfunction rug (args, axisArgs) {\n  'use strict';\n  args.rug_buffer_size = args.chart_type === 'point' ? args.buffer / 2 : args.buffer * 2 / 3;\n\n  var rug = initializeRug(args, 'mg-' + axisArgs.namespace + '-rug');\n  var rug_positions = rugPlacement(args, axisArgs);\n  rug.attr('x1', rug_positions.x1)\n    .attr('x2', rug_positions.x2)\n    .attr('y1', rug_positions.y1)\n    .attr('y2', rug_positions.y2);\n\n  mg_add_color_accessor_to_rug(rug, args, 'mg-' + axisArgs.namespace + '-rug-mono');\n}\n\nfunction categoricalLabelPlacement (args, axisArgs, group) {\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var scale = args.scales[ns.toUpperCase()];\n  var groupScale = args.scales[(ns + 'group').toUpperCase()];\n  var coords = {};\n  coords.cat = {};\n  coords.group = {};\n  // x, y, dy, text-anchor\n\n  if (position === 'left') {\n    coords.cat.x = mg_get_plot_left(args) - args.buffer;\n    coords.cat.y = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = 'end';\n    coords.group.x = mg_get_plot_left(args) - args.buffer;\n    coords.group.y = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 : 0);\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = args['rotate_' + ns + '_labels'] ? 'end' : 'end';\n  }\n\n  if (position === 'right') {\n    coords.cat.x = mg_get_plot_right(args) - args.buffer;\n    coords.cat.y = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = 'start';\n    coords.group.x = mg_get_plot_right(args) - args.buffer;\n    coords.group.y = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 : 0);\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = 'start';\n  }\n\n  if (position === 'top') {\n    coords.cat.x = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.y = mg_get_plot_top(args) + args.buffer;\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n    coords.group.x = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 : 0);\n    coords.group.y = mg_get_plot_top(args) + args.buffer;\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n  }\n\n  if (position === 'bottom') {\n    coords.cat.x = function (d) {\n      return groupScale(group) + scale(d) + scale.bandwidth() / 2;\n    };\n    coords.cat.y = mg_get_plot_bottom(args) + args.buffer;\n    coords.cat.dy = '.35em';\n    coords.cat.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n    coords.group.x = groupScale(group) + (groupScale.bandwidth ? groupScale.bandwidth() / 2 - scale.bandwidth() / 2 : 0);\n    coords.group.y = mg_get_plot_bottom(args) + args.buffer;\n    coords.group.dy = '.35em';\n    coords.group.textAnchor = args['rotate_' + ns + '_labels'] ? 'start' : 'middle';\n  }\n\n  return coords;\n}\n\nfunction categoricalLabels (args, axisArgs) {\n  var ns = axisArgs.namespace;\n  var nsClass = 'mg-' + ns + '-axis';\n  var scale = args.scales[ns.toUpperCase()];\n  var groupScale = args.scales[(ns + 'group').toUpperCase()];\n  var groupAccessor = ns + 'group_accessor';\n\n  var svg = mg_get_svg_child_of(args.target);\n  mg_selectAll_and_remove(svg, '.' + nsClass);\n  var g = mg_add_g(svg, nsClass);\n  var group_g;\n  var groups = groupScale.domain && groupScale.domain()\n    ? groupScale.domain()\n    : ['1'];\n\n  groups.forEach(function (group) {\n    // grab group placement stuff.\n    var coords = categoricalLabelPlacement(args, axisArgs, group);\n\n    group_g = mg_add_g(g, 'mg-group-' + mg_normalize(group));\n    if (args[groupAccessor] !== null) {\n      var labels = group_g.append('text')\n        .classed('mg-barplot-group-label', true)\n        .attr('x', coords.group.x)\n        .attr('y', coords.group.y)\n        .attr('dy', coords.group.dy)\n        .attr('text-anchor', coords.group.textAnchor)\n        .text(group);\n\n    } else {\n      var labels = group_g.selectAll('text')\n        .data(scale.domain())\n        .enter()\n        .append('text')\n        .attr('x', coords.cat.x)\n        .attr('y', coords.cat.y)\n        .attr('dy', coords.cat.dy)\n        .attr('text-anchor', coords.cat.textAnchor)\n        .text(String);\n    }\n    if (args['rotate_' + ns + '_labels']) {\n      rotateLabels(labels, args['rotate_' + ns + '_labels']);\n    }\n  });\n}\n\nfunction categoricalGuides (args, axisArgs) {\n  // for each group\n  // for each data point\n\n  var ns = axisArgs.namespace;\n  var scalef = args.scalefns[ns + 'f'];\n  var groupf = args.scalefns[ns + 'groupf'];\n  var groupScale = args.scales[(ns + 'group').toUpperCase()];\n  var scale = args.scales[ns.toUpperCase()];\n  var position = axisArgs.position;\n\n  var svg = mg_get_svg_child_of(args.target);\n  var alreadyPlotted = [];\n\n  var x1, x2, y1, y2;\n  var grs = (groupScale.domain && groupScale.domain()) ? groupScale.domain() : [null];\n\n  mg_selectAll_and_remove(svg, '.mg-category-guides');\n  var g = mg_add_g(svg, 'mg-category-guides');\n\n  grs.forEach(function (group) {\n    scale.domain().forEach(function (cat) {\n      if (position === 'left' || position === 'right') {\n        x1 = mg_get_plot_left(args);\n        x2 = mg_get_plot_right(args);\n        y1 = scale(cat) + groupScale(group) + scale.bandwidth() / 2;\n        y2 = scale(cat) + groupScale(group) + scale.bandwidth() / 2;\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        x1 = scale(cat) + groupScale(group) + scale.bandwidth() / 2 * (group === null);\n        x2 = scale(cat) + groupScale(group) + scale.bandwidth() / 2 * (group === null);\n        y1 = mg_get_plot_bottom(args);\n        y2 = mg_get_plot_top(args);\n      }\n\n      g.append('line')\n        .attr('x1', x1)\n        .attr('x2', x2)\n        .attr('y1', y1)\n        .attr('y2', y2)\n        .attr('stroke-dasharray', '2,1');\n    });\n\n    var first = groupScale(group) + scale(scale.domain()[0]) + scale.bandwidth() / 2 * (group === null || (position !== 'top' && position != 'bottom'));\n    var last = groupScale(group) + scale(scale.domain()[scale.domain().length - 1]) + scale.bandwidth() / 2 * (group === null || (position !== 'top' && position != 'bottom'));\n\n    if (position === 'left' || position === 'right') {\n      x11 = mg_get_plot_left(args);\n      x21 = mg_get_plot_left(args);\n      y11 = first;\n      y21 = last;\n\n      x12 = mg_get_plot_right(args);\n      x22 = mg_get_plot_right(args);\n      y12 = first;\n      y22 = last;\n    }\n\n    if (position === 'bottom' || position === 'top') {\n      x11 = first;\n      x21 = last;\n      y11 = mg_get_plot_bottom(args);\n      y21 = mg_get_plot_bottom(args);\n\n      x12 = first;\n      x22 = last;\n      y12 = mg_get_plot_top(args);\n      y22 = mg_get_plot_top(args);\n    }\n\n    g.append('line')\n      .attr('x1', x11)\n      .attr('x2', x21)\n      .attr('y1', y11)\n      .attr('y2', y21)\n      .attr('stroke-dasharray', '2,1');\n\n    g.append('line')\n      .attr('x1', x12)\n      .attr('x2', x22)\n      .attr('y1', y12)\n      .attr('y2', y22)\n      .attr('stroke-dasharray', '2,1');\n  });\n}\n\nfunction rotateLabels (labels, rotation_degree) {\n  if (rotation_degree) {\n    labels.attr('transform', function () {\n      var elem = d3.select(this);\n      return 'rotate(' + rotation_degree + ' ' + elem.attr('x') + ',' + elem.attr('y') + ')';\n    });\n\n  }\n}\n\nfunction zeroLine (args, axisArgs) {\n  var svg = mg_get_svg_child_of(args.target);\n  var ns = axisArgs.namespace;\n  var position = axisArgs.position;\n  var scale = args.scales[ns.toUpperCase()];\n  var x1, x2, y1, y2;\n  if (position === 'left' || position === 'right') {\n    x1 = mg_get_plot_left(args);\n    x2 = mg_get_plot_right(args);\n    y1 = scale(0) + 1;\n    y2 = scale(0) + 1;\n  }\n  if (position === 'bottom' || position === 'top') {\n    y1 = mg_get_plot_top(args);\n    y2 = mg_get_plot_bottom(args);\n    x1 = scale(0) - 1;\n    x2 = scale(0) - 1;\n  }\n\n  svg.append('line')\n    .attr('x1', x1)\n    .attr('x2', x2)\n    .attr('y1', y1)\n    .attr('y2', y2)\n    .attr('stroke', 'black');\n}\n\nvar mgDrawAxis = {};\n\nmgDrawAxis.categorical = function (args, axisArgs) {\n  var ns = axisArgs.namespace;\n\n  categoricalLabels(args, axisArgs);\n  categoricalGuides(args, axisArgs);\n};\n\nmgDrawAxis.numerical = function (args, axisArgs) {\n  var namespace = axisArgs.namespace;\n  var axisName = namespace + '_axis';\n  var axisClass = 'mg-' + namespace + '-axis';\n  var svg = mg_get_svg_child_of(args.target);\n\n  mg_selectAll_and_remove(svg, '.' + axisClass);\n\n  if (!args[axisName]) {\n    return this;\n  }\n\n  var g = mg_add_g(svg, axisClass);\n\n  processScaleTicks(args, namespace);\n  initializeAxisRim(g, args, axisArgs);\n  addTickLines(g, args, axisArgs);\n  addNumericalLabels(g, args, axisArgs);\n\n  // add label\n  if (args[namespace + '_label']) {\n    axisArgs.label(svg.select('.mg-' + namespace + '-axis'), args);\n  }\n\n  // add rugs\n  if (args[namespace + '_rug']) {\n    rug(args, axisArgs);\n  }\n\n  if (args.show_bar_zero) {\n    mg_bar_add_zero_line(args);\n  }\n\n  return this;\n};\n\nfunction axisFactory (args) {\n  var axisArgs = {};\n  axisArgs.type = 'numerical';\n\n  this.namespace = function (ns) {\n    // take the ns in the scale, and use it to\n    axisArgs.namespace = ns;\n    return this;\n  };\n\n  this.rug = function (tf) {\n    axisArgs.rug = tf;\n    return this;\n  };\n\n  this.label = function (tf) {\n    axisArgs.label = tf;\n    return this;\n  };\n\n  this.type = function (t) {\n    axisArgs.type = t;\n    return this;\n  };\n\n  this.position = function (pos) {\n    axisArgs.position = pos;\n    return this;\n  };\n\n  this.zeroLine = function (tf) {\n    axisArgs.zeroLine = tf;\n    return this;\n  };\n\n  this.draw = function () {\n    mgDrawAxis[axisArgs.type](args, axisArgs);\n    return this;\n  };\n\n  return this;\n\n}\n\nMG.axis_factory = axisFactory;\n\n/* ================================================================================ */\n/* ================================================================================ */\n/* ================================================================================ */\n\nfunction y_rug (args) {\n  'use strict';\n\n  if (!args.y_rug) {\n    return;\n  }\n\n  args.rug_buffer_size = args.chart_type === 'point'\n    ? args.buffer / 2\n    : args.buffer * 2 / 3;\n\n  var rug = mg_make_rug(args, 'mg-y-rug');\n\n  rug.attr('x1', args.left + 1)\n    .attr('x2', args.left + args.rug_buffer_size)\n    .attr('y1', args.scalefns.yf)\n    .attr('y2', args.scalefns.yf);\n\n  mg_add_color_accessor_to_rug(rug, args, 'mg-y-rug-mono');\n}\n\nMG.y_rug = y_rug;\n\nfunction mg_change_y_extents_for_bars (args, my) {\n  if (args.chart_type === 'bar') {\n    my.min = 0;\n    my.max = d3.max(args.data[0], function (d) {\n      var trio = [];\n      trio.push(d[args.y_accessor]);\n\n      if (args.baseline_accessor !== null) {\n        trio.push(d[args.baseline_accessor]);\n      }\n\n      if (args.predictor_accessor !== null) {\n        trio.push(d[args.predictor_accessor]);\n      }\n\n      return Math.max.apply(null, trio);\n    });\n  }\n  return my;\n}\n\nfunction mg_compute_yax_format (args) {\n  var yax_format = args.yax_format;\n  if (!yax_format) {\n    if (args.format === 'count') {\n      // increase decimals if we have small values, useful for realtime data\n      if (args.processed.max_y < 0.0001) {\n        args.decimals = 6;\n      } else if (args.processed.max_y < 0.1) {\n        args.decimals = 4;\n      }\n\n      yax_format = function (d) {\n        var pf;\n\n        if (d < 1.0 && d > -1.0 && d !== 0) {\n          // don't scale tiny values\n          pf = d3.format(',.' + args.decimals + 'f');\n        } else if (d < 1000) {\n          pf = d3.format(',.0f');\n        } else {\n          pf = d3.format(',.2s');\n        }\n\n        // are we adding units after the value or before?\n        if (args.yax_units_append) {\n          return pf(d) + args.yax_units;\n        } else {\n          return args.yax_units + pf(d);\n        }\n      };\n    } else { // percentage\n      yax_format = function (d_) {\n        var n = d3.format('.0%');\n        return n(d_);\n      };\n    }\n  }\n  return yax_format;\n}\n\nfunction mg_bar_add_zero_line (args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var extents = args.scales.X.domain();\n  if (0 >= extents[0] && extents[1] >= 0) {\n    var r = args.scales.Y.range();\n    var g = args.categorical_groups.length\n      ? args.scales.YGROUP(args.categorical_groups[args.categorical_groups.length - 1])\n      : args.scales.YGROUP();\n\n    svg.append('svg:line')\n      .attr('x1', args.scales.X(0))\n      .attr('x2', args.scales.X(0))\n      .attr('y1', r[0] + mg_get_plot_top(args))\n      .attr('y2', r[r.length - 1] + g)\n      .attr('stroke', 'black')\n      .attr('opacity', .2);\n  }\n}\n\nfunction set_min_max_y (args) {\n  // flatten data\n  // remove weird data, if log.\n  var data = mg_flatten_array(args.data);\n\n  if (args.y_scale_type === 'log') {\n    data = data.filter(function (d) {\n      return d[args.y_accessor] > 0;\n    });\n  }\n\n  if (args.baselines) {\n    data = data.concat(args.baselines);\n  }\n\n  var extents = d3.extent(data, function (d) {\n    return d[args.y_accessor];\n  });\n\n  var my = {};\n  my.min = extents[0];\n  my.max = extents[1];\n  // the default case is for the y-axis to start at 0, unless we explicitly want it\n  // to start at an arbitrary number or from the data's minimum value\n  if (my.min >= 0 && !args.min_y && !args.min_y_from_data) {\n    my.min = 0;\n  }\n\n  mg_change_y_extents_for_bars(args, my);\n  my.min = (args.min_y !== null) ? args.min_y : my.min;\n\n  my.max = (args.max_y !== null) ? args.max_y : (my.max < 0) ? my.max + (my.max - my.max * args.inflator) : my.max * args.inflator;\n\n  if (args.y_scale_type !== 'log' && my.min < 0) {\n    my.min = my.min - (my.min - my.min * args.inflator);\n  }\n\n  if (!args.min_y && args.min_y_from_data) {\n    var buff = (my.max - my.min) * .01;\n    my.min = extents[0] - buff;\n    my.max = extents[1] + buff;\n  }\n  args.processed.min_y = my.min;\n  args.processed.max_y = my.max;\n}\n\nfunction mg_y_domain_range (args, scale) {\n  scale.domain([args.processed.min_y, args.processed.max_y])\n    .range([mg_get_plot_bottom(args), args.top]);\n  return scale;\n}\n\nfunction mg_define_y_scales (args) {\n  var scale = args.y_scale_type === 'log' ? d3.scaleLog() : d3.scaleLinear();\n  if (args.y_scale_type === 'log') {\n    if (args.chart_type === 'histogram') {\n      // log histogram plots should start just below 1\n      // so that bins with single counts are visible\n      args.processed.min_y = 0.2;\n    } else {\n      if (args.processed.min_y <= 0) {\n        args.processed.min_y = 1;\n      }\n    }\n  }\n  args.scales.Y = mg_y_domain_range(args, scale);\n  args.scales.Y.clamp(args.y_scale_type === 'log');\n\n  // used for ticks and such, and designed to be paired with log or linear\n  args.scales.Y_axis = mg_y_domain_range(args, d3.scaleLinear());\n}\n\nfunction mg_add_y_label (g, args) {\n  if (args.y_label) {\n    g.append('text')\n      .attr('class', 'label')\n      .attr('x', function () {\n        return -1 * (mg_get_plot_top(args) +\n        ((mg_get_plot_bottom(args)) - (mg_get_plot_top(args))) / 2);\n      })\n      .attr('y', function () {\n        return args.left / 2;\n      })\n      .attr('dy', '0.4em')\n      .attr('text-anchor', 'middle')\n      .text(function (d) {\n        return args.y_label;\n      })\n      .attr('transform', function (d) {\n        return 'rotate(-90)';\n      });\n  }\n}\n\nfunction mg_add_y_axis_rim (g, args) {\n  var tick_length = args.processed.y_ticks.length;\n  if (!args.x_extended_ticks && !args.y_extended_ticks && tick_length) {\n    var y1scale, y2scale;\n\n    if (args.axes_not_compact && args.chart_type !== 'bar') {\n      y1scale = args.height - args.bottom;\n      y2scale = args.top;\n    } else if (tick_length) {\n      y1scale = args.scales.Y(args.processed.y_ticks[0]).toFixed(2);\n      y2scale = args.scales.Y(args.processed.y_ticks[tick_length - 1]).toFixed(2);\n    } else {\n      y1scale = 0;\n      y2scale = 0;\n    }\n\n    g.append('line')\n      .attr('x1', args.left)\n      .attr('x2', args.left)\n      .attr('y1', y1scale)\n      .attr('y2', y2scale);\n  }\n}\n\nfunction mg_add_y_axis_tick_lines (g, args) {\n  g.selectAll('.mg-yax-ticks')\n    .data(args.processed.y_ticks).enter()\n    .append('line')\n    .classed('mg-extended-yax-ticks', args.y_extended_ticks)\n    .attr('x1', args.left)\n    .attr('x2', function () {\n      return (args.y_extended_ticks) ? args.width - args.right : args.left - args.yax_tick_length;\n    })\n    .attr('y1', function (d) {\n      return args.scales.Y(d).toFixed(2);\n    })\n    .attr('y2', function (d) {\n      return args.scales.Y(d).toFixed(2);\n    });\n}\n\nfunction mg_add_y_axis_tick_labels (g, args) {\n  var yax_format = mg_compute_yax_format(args);\n  g.selectAll('.mg-yax-labels')\n    .data(args.processed.y_ticks).enter()\n    .append('text')\n    .attr('x', args.left - args.yax_tick_length * 3 / 2)\n    .attr('dx', -3)\n    .attr('y', function (d) {\n      return args.scales.Y(d).toFixed(2);\n    })\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'end')\n    .text(function (d) {\n      var o = yax_format(d);\n      return o;\n    });\n}\n\n// TODO ought to be deprecated, only used by histogram\nfunction y_axis (args) {\n  if (!args.processed) {\n    args.processed = {};\n  }\n\n  var svg = mg_get_svg_child_of(args.target);\n  MG.call_hook('y_axis.process_min_max', args, args.processed.min_y, args.processed.max_y);\n  mg_selectAll_and_remove(svg, '.mg-y-axis');\n\n  if (!args.y_axis) {\n    return this;\n  }\n\n  var g = mg_add_g(svg, 'mg-y-axis');\n  mg_add_y_label(g, args);\n  mg_process_scale_ticks(args, 'y');\n  mg_add_y_axis_rim(g, args);\n  mg_add_y_axis_tick_lines(g, args);\n  mg_add_y_axis_tick_labels(g, args);\n\n  if (args.y_rug) {\n    y_rug(args);\n  }\n\n  return this;\n}\n\nMG.y_axis = y_axis;\n\nfunction mg_add_categorical_labels (args) {\n  var svg = mg_get_svg_child_of(args.target);\n  mg_selectAll_and_remove(svg, '.mg-y-axis');\n  var g = mg_add_g(svg, 'mg-y-axis');\n  var group_g;(args.categorical_groups.length ? args.categorical_groups : ['1']).forEach(function (group) {\n    group_g = mg_add_g(g, 'mg-group-' + mg_normalize(group));\n\n    if (args.ygroup_accessor !== null) {\n      mg_add_group_label(group_g, group, args);\n    } else {\n      var labels = mg_add_graphic_labels(group_g, group, args);\n      mg_rotate_labels(labels, args.rotate_y_labels);\n    }\n  });\n}\n\nfunction mg_add_graphic_labels (g, group, args) {\n  return g.selectAll('text').data(args.scales.Y.domain()).enter().append('svg:text')\n    .attr('x', args.left - args.buffer)\n    .attr('y', function (d) {\n      return args.scales.YGROUP(group) + args.scales.Y(d) + args.scales.Y.bandwidth() / 2;\n    })\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'end')\n    .text(String);\n}\n\nfunction mg_add_group_label (g, group, args) {\n  g.append('svg:text')\n    .classed('mg-barplot-group-label', true)\n    .attr('x', args.left - args.buffer)\n    .attr('y', args.scales.YGROUP(group) + args.scales.YGROUP.bandwidth() / 2)\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'end')\n    .text(group);\n}\n\nfunction mg_draw_group_lines (args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var groups = args.scales.YGROUP.domain();\n  var first = groups[0];\n  var last = groups[groups.length - 1];\n\n  svg.select('.mg-category-guides').selectAll('mg-group-lines')\n    .data(groups)\n    .enter().append('line')\n      .attr('x1', mg_get_plot_left(args))\n      .attr('x2', mg_get_plot_left(args))\n      .attr('y1', function (d) {\n        return args.scales.YGROUP(d);\n      })\n      .attr('y2', function (d) {\n        return args.scales.YGROUP(d) + args.ygroup_height;\n      })\n      .attr('stroke-width', 1);\n}\n\nfunction mg_y_categorical_show_guides (args) {\n  // for each group\n  // for each data point\n  var svg = mg_get_svg_child_of(args.target);\n  var alreadyPlotted = [];\n  args.data[0].forEach(function (d) {\n    if (alreadyPlotted.indexOf(d[args.y_accessor]) === -1) {\n      svg.select('.mg-category-guides').append('line')\n        .attr('x1', mg_get_plot_left(args))\n        .attr('x2', mg_get_plot_right(args))\n        .attr('y1', args.scalefns.yf(d) + args.scalefns.ygroupf(d))\n        .attr('y2', args.scalefns.yf(d) + args.scalefns.ygroupf(d))\n        .attr('stroke-dasharray', '2,1');\n    }\n  });\n}\n\nfunction y_axis_categorical (args) {\n  if (!args.y_axis) {\n    return this;\n  }\n\n  mg_add_categorical_labels(args);\n  // mg_draw_group_scaffold(args);\n  if (args.show_bar_zero) mg_bar_add_zero_line(args);\n  if (args.ygroup_accessor) mg_draw_group_lines(args);\n  if (args.y_categorical_show_guides) mg_y_categorical_show_guides(args);\n  return this;\n}\n\nMG.y_axis_categorical = y_axis_categorical;\n\nfunction x_rug(args) {\n  'use strict';\n\n  if(!args.x_rug) {\n    return;\n  }\n\n  args.rug_buffer_size = args.chart_type === 'point'\n    ? args.buffer / 2\n    : args.buffer;\n\n  var rug = mg_make_rug(args, 'mg-x-rug');\n\n  rug.attr('x1', args.scalefns.xf)\n    .attr('x2', args.scalefns.xf)\n    .attr('y1', args.height - args.bottom - args.rug_buffer_size)\n    .attr('y2', args.height - args.bottom);\n\n  mg_add_color_accessor_to_rug(rug, args, 'mg-x-rug-mono');\n}\n\nMG.x_rug = x_rug;\n\nfunction mg_add_processed_object(args) {\n  if (!args.processed) {\n    args.processed = {};\n  }\n}\n\n// TODO ought to be deprecated, only used by histogram\nfunction x_axis(args) {\n  'use strict';\n\n  var svg = mg_get_svg_child_of(args.target);\n  mg_add_processed_object(args);\n\n  mg_select_xax_format(args);\n  mg_selectAll_and_remove(svg, '.mg-x-axis');\n\n  if (!args.x_axis) {\n    return this;\n  }\n\n  var g = mg_add_g(svg, 'mg-x-axis');\n\n  mg_add_x_ticks(g, args);\n  mg_add_x_tick_labels(g, args);\n  if (args.x_label) { mg_add_x_label(g, args); }\n  if (args.x_rug) { x_rug(args); }\n\n  return this;\n}\n\nMG.x_axis = x_axis;\n\nfunction x_axis_categorical(args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var additional_buffer = 0;\n  if (args.chart_type === 'bar') {\n    additional_buffer = args.buffer + 5;\n  }\n\n  mg_add_categorical_scale(args, 'X', args.categorical_variables.reverse(), args.left, mg_get_plot_right(args) - additional_buffer);\n  mg_add_scale_function(args, 'xf', 'X', 'value');\n  mg_selectAll_and_remove(svg, '.mg-x-axis');\n\n  var g = mg_add_g(svg, 'mg-x-axis');\n\n  if (!args.x_axis) {\n    return this;\n  }\n\n  mg_add_x_axis_categorical_labels(g, args, additional_buffer);\n  return this;\n}\n\nfunction mg_add_x_axis_categorical_labels(g, args, additional_buffer) {\n  var labels = g.selectAll('text')\n    .data(args.categorical_variables)\n    .enter()\n    .append('text');\n\n  labels\n    .attr('x', function(d) {\n      return args.scales.X(d) + args.scales.X.bandwidth() / 2 + (args.buffer) * args.bar_outer_padding_percentage + (additional_buffer / 2);\n    })\n    .attr('y', mg_get_plot_bottom(args))\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'middle')\n    .text(String);\n\n  if (args.truncate_x_labels) {\n    labels.each(function(d, idx) {\n      var elem = this, width = args.scales.X.bandwidth();\n      truncate_text(elem, d, width);\n    });\n  }\n  mg_rotate_labels(labels, args.rotate_x_labels);\n}\n\nMG.x_axis_categorical = x_axis_categorical;\n\nfunction mg_point_add_color_scale(args) {\n  var color_domain, color_range;\n\n  if (args.color_accessor !== null) {\n    color_domain = mg_get_color_domain(args);\n    color_range = mg_get_color_range(args);\n\n    if (args.color_type === 'number') {\n      args.scales.color = d3.scaleLinear()\n        .domain(color_domain)\n        .range(color_range)\n        .clamp(true);\n    } else {\n      args.scales.color = args.color_range !== null\n        ? d3.scaleOrdinal().range(color_range)\n        : (color_domain.length > 10\n          ? d3.scaleOrdinal(d3.schemeCategory20)\n          : d3.scaleOrdinal(d3.schemeCategory10));\n\n      args.scales.color.domain(color_domain);\n    }\n    mg_add_scale_function(args, 'color', 'color', args.color_accessor);\n  }\n}\n\nfunction mg_get_color_domain(args) {\n  var color_domain;\n  if (args.color_domain === null) {\n    if (args.color_type === 'number') {\n      color_domain = d3.extent(args.data[0], function(d) {\n        return d[args.color_accessor];\n      });\n    } else if (args.color_type === 'category') {\n      color_domain = d3.set(args.data[0]\n          .map(function(d) {\n            return d[args.color_accessor];\n        }))\n        .values();\n\n      color_domain.sort();\n    }\n  } else {\n    color_domain = args.color_domain;\n  }\n  return color_domain;\n}\n\nfunction mg_get_color_range(args) {\n  var color_range;\n  if (args.color_range === null) {\n    if (args.color_type === 'number') {\n      color_range = ['blue', 'red'];\n    } else {\n      color_range = null;\n    }\n  } else {\n    color_range = args.color_range;\n  }\n  return color_range;\n}\n\nfunction mg_point_add_size_scale(args) {\n  var min_size, max_size, size_domain, size_range;\n  if (args.size_accessor !== null) {\n    size_domain = mg_get_size_domain(args);\n    size_range = mg_get_size_range(args);\n\n    args.scales.size = d3.scaleLinear()\n      .domain(size_domain)\n      .range(size_range)\n      .clamp(true);\n\n    mg_add_scale_function(args, 'size', 'size', args.size_accessor);\n  }\n}\n\nfunction mg_get_size_domain(args) {\n  return (args.size_domain === null)\n    ? d3.extent(args.data[0], function(d) { return d[args.size_accessor]; })\n    : args.size_domain;\n}\n\nfunction mg_get_size_range(args) {\n  var size_range;\n  if (args.size_range === null) {\n    size_range = [1, 5];\n  } else {\n    size_range = args.size_range;\n  }\n  return size_range;\n}\n\nfunction mg_add_x_label(g, args) {\n  if (args.x_label) {\n    g.append('text')\n      .attr('class', 'label')\n      .attr('x', function() {\n        return mg_get_plot_left(args) + (mg_get_plot_right(args) - mg_get_plot_left(args)) / 2;\n      })\n      .attr('dx', args.x_label_nudge_x != null ? args.x_label_nudge_x : 0)\n      .attr('y', function() {\n        var xAxisTextElement = d3.select(args.target)\n          .select('.mg-x-axis text').node().getBoundingClientRect();\n        return mg_get_bottom(args) + args.xax_tick_length * (7 / 3) + xAxisTextElement.height * 0.8 + 10;\n      })\n      .attr('dy', '.5em')\n      .attr('text-anchor', 'middle')\n      .text(function(d) {\n        return args.x_label;\n      });\n  }\n}\n\nfunction mg_default_bar_xax_format(args) {\n  return function(d) {\n    if (d < 1.0 && d > -1.0 && d !== 0) {\n      // don't scale tiny values\n      return args.xax_units + d.toFixed(args.decimals);\n    } else {\n      var pf = d3.format(',.0f');\n      return args.xax_units + pf(d);\n    }\n  };\n}\n\nfunction mg_get_time_frame(diff) {\n  // diff should be (max_x - min_x) / 1000, in other words, the difference in seconds.\n  var time_frame;\n  if (mg_milisec_diff(diff)) {\n    time_frame = 'millis';\n  } else if (mg_sec_diff(diff)) {\n    time_frame = 'seconds';\n  } else if (mg_day_diff(diff)) {\n    time_frame = 'less-than-a-day';\n  } else if (mg_four_days(diff)) {\n    time_frame = 'four-days';\n  } else if (mg_many_days(diff)) { // a handful of months?\n    time_frame = 'many-days';\n  } else if (mg_many_months(diff)) {\n    time_frame = 'many-months';\n  } else if (mg_years(diff)) {\n    time_frame = 'years';\n  } else {\n    time_frame = 'default';\n  }\n  return time_frame;\n}\n\nfunction mg_milisec_diff(diff) {\n  return diff < 10;\n}\n\nfunction mg_sec_diff(diff) {\n  return diff < 60;\n}\n\nfunction mg_day_diff(diff) {\n  return diff / (60 * 60) <= 24;\n}\n\nfunction mg_four_days(diff) {\n  return diff / (60 * 60) <= 24 * 4;\n}\n\nfunction mg_many_days(diff) {\n  return diff / (60 * 60 * 24) <= 93;\n}\n\nfunction mg_many_months(diff) {\n  return diff / (60 * 60 * 24) < 365 * 2;\n}\n\nfunction mg_years(diff) {\n  return diff / (60 * 60 * 24) >= 365 * 2;\n}\n\nfunction mg_get_time_format(utc, diff) {\n  var main_time_format;\n  if (mg_milisec_diff(diff)) {\n    main_time_format = MG.time_format(utc, '%M:%S.%L');\n  } else if (mg_sec_diff(diff)) {\n    main_time_format = MG.time_format(utc, '%M:%S');\n  } else if (mg_day_diff(diff)) {\n    main_time_format = MG.time_format(utc, '%H:%M');\n  } else if (mg_four_days(diff)) {\n    main_time_format = MG.time_format(utc, '%H:%M');\n  } else if (mg_many_days(diff)) {\n    main_time_format = MG.time_format(utc, '%b %d');\n  } else if (mg_many_months(diff)) {\n    main_time_format = MG.time_format(utc, '%b');\n  } else {\n    main_time_format = MG.time_format(utc, '%Y');\n  }\n  return main_time_format;\n}\n\nfunction mg_process_time_format(args) {\n  var diff;\n  var main_time_format;\n  var time_frame;\n\n  if (args.time_series) {\n    diff = (args.processed.max_x - args.processed.min_x) / 1000;\n    time_frame = mg_get_time_frame(diff);\n    main_time_format = mg_get_time_format(args.utc_time, diff);\n  }\n\n  args.processed.main_x_time_format = main_time_format;\n  args.processed.x_time_frame = time_frame;\n}\n\nfunction mg_default_xax_format(args) {\n  if (args.xax_format) {\n    return args.xax_format;\n  }\n\n  var data = args.processed.original_data || args.data;\n  var flattened = mg_flatten_array(data)[0];\n  var test_point_x = flattened[args.processed.original_x_accessor || args.x_accessor];\n  if (test_point_x === undefined) {\n    test_point_x = flattened;\n  }\n\n  return function(d) {\n    mg_process_time_format(args);\n\n    if (mg_is_date(test_point_x)) {\n      return args.processed.main_x_time_format(new Date(d));\n    } else if (typeof test_point_x === 'number') {\n      var is_float = d % 1 !== 0;\n      var pf;\n\n      if (is_float) {\n        pf = d3.format(',.' + args.decimals + 'f');\n      } else if (d < 1000) {\n        pf = d3.format(',.0f');\n      } else {\n        pf = d3.format(',.2s');\n      }\n      return args.xax_units + pf(d);\n    } else {\n      return args.xax_units + d;\n    }\n  };\n}\n\nfunction mg_add_x_ticks(g, args) {\n  mg_process_scale_ticks(args, 'x');\n  mg_add_x_axis_rim(args, g);\n  mg_add_x_axis_tick_lines(args, g);\n}\n\nfunction mg_add_x_axis_rim(args, g) {\n  var tick_length = args.processed.x_ticks.length;\n  var last_i = args.scales.X.ticks(args.xax_count).length - 1;\n\n  if (!args.x_extended_ticks) {\n    g.append('line')\n      .attr('x1', function() {\n        if (args.xax_count === 0) {\n          return mg_get_plot_left(args);\n        } else if (args.axes_not_compact && args.chart_type !== 'bar') {\n          return args.left;\n        } else {\n          return (args.scales.X(args.scales.X.ticks(args.xax_count)[0])).toFixed(2);\n        }\n      })\n      .attr('x2', function() {\n        if (args.xax_count === 0 || (args.axes_not_compact && args.chart_type !== 'bar')) {\n          return mg_get_right(args);\n        } else {\n          return args.scales.X(args.scales.X.ticks(args.xax_count)[last_i]).toFixed(2);\n        }\n      })\n      .attr('y1', args.height - args.bottom)\n      .attr('y2', args.height - args.bottom);\n  }\n}\n\nfunction mg_add_x_axis_tick_lines(args, g) {\n  g.selectAll('.mg-xax-ticks')\n    .data(args.processed.x_ticks).enter()\n    .append('line')\n    .attr('x1', function(d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('x2', function(d) {\n      return args.scales.X(d).toFixed(2); })\n    .attr('y1', args.height - args.bottom)\n    .attr('y2', function() {\n      return (args.x_extended_ticks) ? args.top : args.height - args.bottom + args.xax_tick_length;\n    })\n    .attr('class', function() {\n      if (args.x_extended_ticks) {\n        return 'mg-extended-xax-ticks';\n      }\n    })\n    .classed('mg-xax-ticks', true);\n}\n\nfunction mg_add_x_tick_labels(g, args) {\n  mg_add_primary_x_axis_label(args, g);\n  mg_add_secondary_x_axis_label(args, g);\n}\n\nfunction mg_add_primary_x_axis_label(args, g) {\n  var labels = g.selectAll('.mg-xax-labels')\n    .data(args.processed.x_ticks).enter()\n    .append('text')\n    .attr('x', function(d) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('y', (args.height - args.bottom + args.xax_tick_length * 7 / 3).toFixed(2))\n    .attr('dy', '.50em')\n    .attr('text-anchor', 'middle');\n\n  if (args.time_series && args.european_clock) {\n    labels.append('tspan').classed('mg-european-hours', true).text(function(_d, i) {\n      var d = new Date(_d);\n      if (i === 0) return d3.timeFormat('%H')(d);\n      else return '';\n    });\n    labels.append('tspan').classed('mg-european-minutes-seconds', true).text(function(_d, i) {\n      var d = new Date(_d);\n      return ':' + args.processed.xax_format(d);\n    });\n  } else {\n    labels.text(function(d) {\n      return args.xax_units + args.processed.xax_format(d);\n    });\n  }\n\n  // CHECK TO SEE IF OVERLAP for labels. If so,\n  // remove half of them. This is a dirty hack.\n  // We will need to figure out a more principled way of doing this.\n  if (mg_elements_are_overlapping(labels)) {\n    labels.filter(function(d, i) {\n      return (i + 1) % 2 === 0;\n    }).remove();\n\n    var svg = mg_get_svg_child_of(args.target);\n    svg.selectAll('.mg-xax-ticks')\n      .filter(function(d, i) {\n        return (i + 1) % 2 === 0;\n      })\n      .remove();\n  }\n}\n\nfunction mg_add_secondary_x_axis_label(args, g) {\n  if (args.time_series && (args.show_years || args.show_secondary_x_label)) {\n    var tf = mg_get_yformat_and_secondary_time_function(args);\n    mg_add_secondary_x_axis_elements(args, g, tf.timeframe, tf.yformat, tf.secondary);\n  }\n}\n\nfunction mg_get_yformat_and_secondary_time_function(args) {\n  var tf = {};\n  tf.timeframe = args.processed.x_time_frame;\n  switch (tf.timeframe) {\n    case 'millis':\n    case 'seconds':\n      tf.secondary = d3.timeDays;\n      if (args.european_clock) tf.yformat = MG.time_format(args.utc_time, '%b %d');\n      else tf.yformat = MG.time_format(args.utc_time, '%I %p');\n      break;\n    case 'less-than-a-day':\n      tf.secondary = d3.timeDays;\n      tf.yformat = MG.time_format(args.utc_time, '%b %d');\n      break;\n    case 'four-days':\n      tf.secondary = d3.timeDays;\n      tf.yformat = MG.time_format(args.utc_time, '%b %d');\n      break;\n    case 'many-days':\n      tf.secondary = d3.timeYears;\n      tf.yformat = MG.time_format(args.utc_time, '%Y');\n      break;\n    case 'many-months':\n      tf.secondary = d3.timeYears;\n      tf.yformat = MG.time_format(args.utc_time, '%Y');\n      break;\n    default:\n      tf.secondary = d3.timeYears;\n      tf.yformat = MG.time_format(args.utc_time, '%Y');\n  }\n  return tf;\n}\n\nfunction mg_add_secondary_x_axis_elements(args, g, time_frame, yformat, secondary_function) {\n  var years = secondary_function(args.processed.min_x, args.processed.max_x);\n  if (years.length === 0) {\n    var first_tick = args.scales.X.ticks(args.xax_count)[0];\n    years = [first_tick];\n  }\n\n  var yg = mg_add_g(g, 'mg-year-marker');\n  if (time_frame === 'default' && args.show_year_markers) {\n    mg_add_year_marker_line(args, yg, years, yformat);\n  }\n  if (time_frame != 'years') mg_add_year_marker_text(args, yg, years, yformat);\n}\n\nfunction mg_add_year_marker_line(args, g, years, yformat) {\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('line')\n    .attr('x1', function(d) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('x2', function(d) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('y1', mg_get_top(args))\n    .attr('y2', mg_get_bottom(args));\n}\n\nfunction mg_add_year_marker_text(args, g, years, yformat) {\n  g.selectAll('.mg-year-marker')\n    .data(years).enter()\n    .append('text')\n    .attr('x', function(d, i) {\n      return args.scales.X(d).toFixed(2);\n    })\n    .attr('y', function() {\n      var xAxisTextElement = d3.select(args.target)\n        .select('.mg-x-axis text').node().getBoundingClientRect();\n      return (mg_get_bottom(args) + args.xax_tick_length * 7 / 3) + (xAxisTextElement.height * 0.8);\n    })\n    .attr('dy', '.50em')\n    .attr('text-anchor', 'middle')\n    .text(function(d) {\n      return yformat(new Date(d));\n    });\n}\n\nfunction mg_min_max_x_for_nonbars(mx, args, data) {\n  var extent_x = d3.extent(data, function(d) {\n    return d[args.x_accessor];\n  });\n  mx.min = extent_x[0];\n  mx.max = extent_x[1];\n}\n\nfunction mg_min_max_x_for_bars(mx, args, data) {\n  mx.min = d3.min(data, function(d) {\n    var trio = [\n      d[args.x_accessor],\n      (d[args.baseline_accessor]) ? d[args.baseline_accessor] : 0,\n      (d[args.predictor_accessor]) ? d[args.predictor_accessor] : 0\n    ];\n    return Math.min.apply(null, trio);\n  });\n\n  if (mx.min > 0) mx.min = 0;\n\n  mx.max = d3.max(data, function(d) {\n    var trio = [\n      d[args.x_accessor],\n      (d[args.baseline_accessor]) ? d[args.baseline_accessor] : 0,\n      (d[args.predictor_accessor]) ? d[args.predictor_accessor] : 0\n    ];\n    return Math.max.apply(null, trio);\n  });\n  return mx;\n}\n\nfunction mg_min_max_x_for_dates(mx) {\n  var yesterday = MG.clone(mx.min).setDate(mx.min.getDate() - 1);\n  var tomorrow = MG.clone(mx.min).setDate(mx.min.getDate() + 1);\n  mx.min = yesterday;\n  mx.max = tomorrow;\n}\n\nfunction mg_min_max_x_for_numbers(mx) {\n  // TODO do we want to rewrite this?\n  mx.min = mx.min - 1;\n  mx.max = mx.max + 1;\n}\n\nfunction mg_min_max_x_for_strings(mx) {\n  // TODO shouldn't be allowing strings here to be coerced into numbers\n  mx.min = Number(mx.min) - 1;\n  mx.max = Number(mx.max) + 1;\n}\n\nfunction mg_force_xax_count_to_be_two(args) {\n  args.xax_count = 2;\n}\n\nfunction mg_sort_through_data_type_and_set_x_min_max_accordingly(mx, args, data) {\n  if (args.chart_type === 'line' || args.chart_type === 'point' || args.chart_type === 'histogram') {\n    mg_min_max_x_for_nonbars(mx, args, data);\n\n  } else if (args.chart_type === 'bar') {\n    mg_min_max_x_for_bars(mx, args, data);\n  }\n  // if data set is of length 1, expand the range so that we can build the x-axis\n  if (mx.min === mx.max && !(args.min_x && args.max_x)) {\n    if (mg_is_date(mx.min)) {\n      mg_min_max_x_for_dates(mx);\n    } else if (typeof min_x === 'number') {\n      mg_min_max_x_for_numbers(mx);\n    } else if (typeof min_x === 'string') {\n      mg_min_max_x_for_strings(mx);\n    }\n    // force xax_count to be 2\n    mg_force_xax_count_to_be_two(args);\n  }\n}\n\nfunction mg_select_xax_format(args) {\n  var c = args.chart_type;\n  if (!args.processed.xax_format) {\n    if (args.xax_format) {\n      args.processed.xax_format = args.xax_format;\n    } else {\n      if (c === 'line' || c === 'point' || c === 'histogram') {\n        args.processed.xax_format = mg_default_xax_format(args);\n      } else if (c === 'bar') {\n        args.processed.xax_format = mg_default_bar_xax_format(args);\n      }\n    }\n  }\n}\n\nfunction mg_merge_args_with_defaults(args) {\n  var defaults = {\n    target: null,\n    title: null,\n    description: null\n  };\n\n  if (!args) {\n    args = {};\n  }\n\n  if (!args.processed) {\n    args.processed = {};\n  }\n\n  args = merge_with_defaults(args, defaults);\n  return args;\n}\n\nfunction mg_is_time_series(args) {\n  var first_elem = mg_flatten_array(args.processed.original_data || args.data)[0];\n  args.time_series = mg_is_date(first_elem[args.processed.original_x_accessor || args.x_accessor]);\n}\n\nfunction mg_init_compute_width(args) {\n  var svg_width = args.width;\n  if (args.full_width) {\n    svg_width = get_width(args.target);\n  }\n  if (args.x_axis_type === 'categorical' && svg_width === null) {\n    svg_width = mg_categorical_calculate_height(args, 'x');\n  }\n\n  args.width = svg_width;\n}\n\nfunction mg_init_compute_height(args) {\n  var svg_height = args.height;\n  if (args.full_height) {\n    svg_height = get_height(args.target);\n  }\n  if (args.y_axis_type === 'categorical' && svg_height === null) {\n    svg_height = mg_categorical_calculate_height(args, 'y');\n  }\n\n  args.height = svg_height;\n}\n\nfunction mg_remove_svg_if_chart_type_has_changed(svg, args) {\n  if ((!svg.selectAll('.mg-main-line').empty() && args.chart_type !== 'line') ||\n    (!svg.selectAll('.mg-points').empty() && args.chart_type !== 'point') ||\n    (!svg.selectAll('.mg-histogram').empty() && args.chart_type !== 'histogram') ||\n    (!svg.selectAll('.mg-barplot').empty() && args.chart_type !== 'bar')\n  ) {\n    svg.remove();\n  }\n}\n\nfunction mg_add_svg_if_it_doesnt_exist(svg, args) {\n  if (mg_get_svg_child_of(args.target).empty()) {\n    svg = d3.select(args.target)\n      .append('svg')\n      .classed('linked', args.linked)\n      .attr('width', args.width)\n      .attr('height', args.height);\n  }\n  return svg;\n}\n\nfunction mg_add_clip_path_for_plot_area(svg, args) {\n  svg.selectAll('.mg-clip-path').remove();\n  svg.append('defs')\n    .attr('class', 'mg-clip-path')\n    .append('clipPath')\n    .attr('id', 'mg-plot-window-' + mg_target_ref(args.target))\n    .append('svg:rect')\n    .attr('x', mg_get_left(args))\n    .attr('y', mg_get_top(args))\n    .attr('width', args.width - args.left - args.right - args.buffer)\n    .attr('height', args.height - args.top - args.bottom - args.buffer + 1);\n}\n\nfunction mg_adjust_width_and_height_if_changed(svg, args) {\n  if (args.width !== Number(svg.attr('width'))) {\n    svg.attr('width', args.width);\n  }\n  if (args.height !== Number(svg.attr('height'))) {\n    svg.attr('height', args.height);\n  }\n}\n\nfunction mg_set_viewbox_for_scaling(svg, args) {\n  // we need to reconsider how we handle automatic scaling\n  svg.attr('viewBox', '0 0 ' + args.width + ' ' + args.height);\n  if (args.full_width || args.full_height) {\n    svg.attr('preserveAspectRatio', 'xMinYMin meet');\n  }\n}\n\nfunction mg_remove_missing_classes_and_text(svg) {\n  // remove missing class\n  svg.classed('mg-missing', false);\n\n  // remove missing text\n  svg.selectAll('.mg-missing-text').remove();\n  svg.selectAll('.mg-missing-pane').remove();\n}\n\nfunction mg_remove_outdated_lines(svg, args) {\n  // if we're updating an existing chart and we have fewer lines than\n  // before, remove the outdated lines, e.g. if we had 3 lines, and we're calling\n  // data_graphic() on the same target with 2 lines, remove the 3rd line\n\n  var i = 0;\n\n  if (svg.selectAll('.mg-main-line').nodes().length >= args.data.length) {\n    // now, the thing is we can't just remove, say, line3 if we have a custom\n    // line-color map, instead, see which are the lines to be removed, and delete those\n    if (args.custom_line_color_map.length > 0) {\n      var array_full_series = function(len) {\n        var arr = new Array(len);\n        for (var i = 0; i < arr.length; i++) { arr[i] = i + 1; }\n        return arr;\n      };\n\n      // get an array of lines ids to remove\n      var lines_to_remove = arr_diff(\n        array_full_series(args.max_data_size),\n        args.custom_line_color_map);\n\n      for (i = 0; i < lines_to_remove.length; i++) {\n        svg.selectAll('.mg-main-line.mg-line' + lines_to_remove[i] + '-color')\n          .remove();\n      }\n    } else {\n      // if we don't have a custom line-color map, just remove the lines from the end\n      var num_of_new = args.data.length;\n      var num_of_existing = (svg.selectAll('.mg-main-line').nodes()) ? svg.selectAll('.mg-main-line').nodes().length : 0;\n\n      for (i = num_of_existing; i > num_of_new; i--) {\n        svg.selectAll('.mg-main-line.mg-line' + i + '-color')\n          .remove();\n      }\n    }\n  }\n}\n\nfunction mg_raise_container_error(container, args) {\n  if (container.empty()) {\n    console.warn('The specified target element \"' + args.target + '\" could not be found in the page. The chart will not be rendered.');\n    return;\n  }\n}\n\nfunction categoricalInitialization(args, ns) {\n  var which = ns === 'x' ? args.width : args.height;\n  mg_categorical_count_number_of_groups(args, ns);\n  mg_categorical_count_number_of_lanes(args, ns);\n  mg_categorical_calculate_group_length(args, ns, which);\n  if (which) mg_categorical_calculate_bar_thickness(args, ns);\n}\n\n\nfunction mg_categorical_count_number_of_groups(args, ns) {\n  var accessor_string = ns + 'group_accessor';\n  var accessor = args[accessor_string];\n  args.categorical_groups = [];\n  if (accessor) {\n    var data = args.data[0];\n    args.categorical_groups = d3.set(data.map(function(d) {\n      return d[accessor] })).values();\n  }\n}\n\nfunction mg_categorical_count_number_of_lanes(args, ns) {\n  var accessor_string = ns + 'group_accessor';\n  var groupAccessor = args[accessor_string];\n\n  args.total_bars = args.data[0].length;\n  if (groupAccessor) {\n    var group_bars = count_array_elements(pluck(args.data[0], groupAccessor));\n    group_bars = d3.max(Object.keys(group_bars).map(function(d) {\n      return group_bars[d] }));\n    args.bars_per_group = group_bars;\n  } else {\n    args.bars_per_group = args.data[0].length;\n  }\n}\n\nfunction mg_categorical_calculate_group_length(args, ns, which) {\n  var groupHeight = ns + 'group_height';\n  if (which) {\n    var gh = ns === 'y' ?\n      (args.height - args.top - args.bottom - args.buffer * 2) / (args.categorical_groups.length || 1) :\n      (args.width - args.left - args.right - args.buffer * 2) / (args.categorical_groups.length || 1);\n\n    args[groupHeight] = gh;\n  } else {\n    var step = (1 + args[ns + '_padding_percentage']) * args.bar_thickness;\n    args[groupHeight] = args.bars_per_group * step + args[ns + '_outer_padding_percentage'] * 2 * step; //args.bar_thickness + (((args.bars_per_group-1) * args.bar_thickness) * (args.bar_padding_percentage + args.bar_outer_padding_percentage*2));\n  }\n}\n\nfunction mg_categorical_calculate_bar_thickness(args, ns) {\n  // take one group height.\n  var step = (args[ns + 'group_height']) / (args.bars_per_group + args[ns + '_outer_padding_percentage']);\n  args.bar_thickness = step - (step * args[ns + '_padding_percentage']);\n}\n\nfunction mg_categorical_calculate_height(args, ns) {\n  var groupContribution = (args[ns + 'group_height']) * (args.categorical_groups.length || 1);\n\n  var marginContribution = ns === 'y'\n    ? args.top + args.bottom + args.buffer * 2\n    : args.left + args.right + args.buffer * 2;\n\n  return groupContribution + marginContribution +\n    (args.categorical_groups.length * args[ns + 'group_height'] * (args[ns + 'group_padding_percentage'] + args[ns + 'group_outer_padding_percentage']));\n}\n\nfunction mg_barchart_extrapolate_group_and_thickness_from_height(args) {\n  // we need to set args.bar_thickness, group_height\n}\n\nfunction init(args) {\n  'use strict';\n  args = arguments[0];\n  args = mg_merge_args_with_defaults(args);\n  // If you pass in a dom element for args.target, the expectation\n  // of a string elsewhere will break.\n  var container = d3.select(args.target);\n  mg_raise_container_error(container, args);\n\n  var svg = container.selectAll('svg');\n\n  // some things that will need to be calculated if we have a categorical axis.\n  if (args.y_axis_type === 'categorical') { categoricalInitialization(args, 'y'); }\n  if (args.x_axis_type === 'categorical') { categoricalInitialization(args, 'x'); }\n\n  mg_is_time_series(args);\n  mg_init_compute_width(args);\n  mg_init_compute_height(args);\n\n  mg_remove_svg_if_chart_type_has_changed(svg, args);\n  svg = mg_add_svg_if_it_doesnt_exist(svg, args);\n\n  mg_add_clip_path_for_plot_area(svg, args);\n  mg_adjust_width_and_height_if_changed(svg, args);\n  mg_set_viewbox_for_scaling(svg, args);\n  mg_remove_missing_classes_and_text(svg);\n  chart_title(args);\n  mg_remove_outdated_lines(svg, args);\n\n  return this;\n}\n\nMG.init = init;\n\nfunction mg_return_label(d) {\n  return d.label;\n}\n\nfunction mg_remove_existing_markers(svg) {\n  svg.selectAll('.mg-markers').remove();\n  svg.selectAll('.mg-baselines').remove();\n}\n\nfunction mg_in_range(args) {\n  return function(d) {\n    return (args.scales.X(d[args.x_accessor]) >= mg_get_plot_left(args)) && (args.scales.X(d[args.x_accessor]) <= mg_get_plot_right(args));\n  };\n}\n\nfunction mg_x_position(args) {\n  return function(d) {\n    return args.scales.X(d[args.x_accessor]);\n  };\n}\n\nfunction mg_x_position_fixed(args) {\n  var _mg_x_pos = mg_x_position(args);\n  return function(d) {\n    return _mg_x_pos(d).toFixed(2);\n  };\n}\n\nfunction mg_y_position_fixed(args) {\n  var _mg_y_pos = args.scales.Y;\n  return function(d) {\n    return _mg_y_pos(d.value).toFixed(2);\n  };\n}\n\nfunction mg_place_annotations(checker, class_name, args, svg, line_fcn, text_fcn) {\n  var g;\n  if (checker) {\n    g = svg.append('g').attr('class', class_name);\n    line_fcn(g, args);\n    text_fcn(g, args);\n  }\n}\n\nfunction mg_place_markers(args, svg) {\n  mg_place_annotations(args.markers, 'mg-markers', args, svg, mg_place_marker_lines, mg_place_marker_text);\n}\n\nfunction mg_place_baselines(args, svg) {\n  mg_place_annotations(args.baselines, 'mg-baselines', args, svg, mg_place_baseline_lines, mg_place_baseline_text);\n}\n\nfunction mg_place_marker_lines(gm, args) {\n  var x_pos_fixed = mg_x_position_fixed(args);\n  gm.selectAll('.mg-markers')\n    .data(args.markers.filter(mg_in_range(args)))\n    .enter()\n    .append('line')\n    .attr('x1', x_pos_fixed)\n    .attr('x2', x_pos_fixed)\n    .attr('y1', args.top)\n    .attr('y2', mg_get_plot_bottom(args))\n    .attr('class', function(d) {\n      return d.lineclass;\n    })\n    .attr('stroke-dasharray', '3,1');\n}\n\nfunction mg_place_marker_text(gm, args) {\n  gm.selectAll('.mg-markers')\n    .data(args.markers.filter(mg_in_range(args)))\n    .enter()\n    .append('text')\n      .attr('class', function(d) {\n        return d.textclass || ''; })\n      .classed('mg-marker-text', true)\n      .attr('x', mg_x_position(args))\n      .attr('y', args.x_axis_position === 'bottom' ? mg_get_top(args) * 0.95 : mg_get_bottom(args) + args.buffer)\n      .attr('text-anchor', 'middle')\n      .text(mg_return_label)\n      .each(function(d) {\n        if (d.click) {\n          d3.select(this).style('cursor', 'pointer')\n            .on('click', d.click);\n        }\n      });\n\n  mg_prevent_horizontal_overlap(gm.selectAll('.mg-marker-text').nodes(), args);\n}\n\nfunction mg_place_baseline_lines(gb, args) {\n  var y_pos = mg_y_position_fixed(args);\n  gb.selectAll('.mg-baselines')\n    .data(args.baselines)\n    .enter().append('line')\n    .attr('x1', mg_get_plot_left(args))\n    .attr('x2', mg_get_plot_right(args))\n    .attr('y1', y_pos)\n    .attr('y2', y_pos);\n}\n\nfunction mg_place_baseline_text(gb, args) {\n  var y_pos = mg_y_position_fixed(args);\n  gb.selectAll('.mg-baselines')\n    .data(args.baselines)\n    .enter().append('text')\n    .attr('x', mg_get_plot_right(args))\n    .attr('y', y_pos)\n    .attr('dy', -3)\n    .attr('text-anchor', 'end')\n    .text(mg_return_label);\n}\n\nfunction markers(args) {\n  'use strict';\n\n  var svg = mg_get_svg_child_of(args.target);\n  mg_remove_existing_markers(svg);\n  mg_place_markers(args, svg);\n  mg_place_baselines(args, svg);\n  return this;\n}\n\nMG.markers = markers;\n\nfunction mg_clear_mouseover_container(svg) {\n  svg.selectAll('.mg-active-datapoint-container').selectAll('*').remove();\n}\n\nfunction mg_setup_mouseover_container(svg, args) {\n  svg.select('.mg-active-datapoint').remove();\n  var text_anchor = args.mouseover_align === 'right'\n    ? 'end'\n    : (args.mouseover_align === 'left'\n      ? 'start'\n      : 'middle');\n\n  var mouseover_x = (args.mouseover_align === 'right')\n    ? mg_get_plot_right(args)\n    : (args.mouseover_align === 'left'\n      ? mg_get_plot_left(args)\n      : (args.width - args.left - args.right) / 2 + args.left);\n\n  var active_datapoint = svg.select('.mg-active-datapoint-container')\n    .append('text')\n    .attr('class', 'mg-active-datapoint')\n    .attr('xml:space', 'preserve')\n    .attr('text-anchor', text_anchor);\n\n  // set the rollover text's position; if we have markers on two lines,\n  // nudge up the rollover text a bit\n  var active_datapoint_y_nudge = 0.75;\n\n  var y_position = (args.x_axis_position === 'bottom')\n    ? mg_get_top(args) * active_datapoint_y_nudge\n    : mg_get_bottom(args) + args.buffer * 3;\n\n  if (args.markers) {\n    var yPos;\n    svg.selectAll('.mg-marker-text')\n      .each(function() {\n        if (!yPos) {\n          yPos = d3.select(this).attr('y');\n        } else if (yPos !== d3.select(this).attr('y')) {\n          active_datapoint_y_nudge = 0.56;\n        }\n      });\n  }\n\n  active_datapoint\n    .attr('transform', 'translate(' + mouseover_x + ',' + (y_position) + ')');\n}\n\nfunction mg_mouseover_tspan(svg, text) {\n  var tspan = '';\n  var cl = null;\n  if (arguments.length === 3) cl = arguments[2];\n  tspan = svg.append('tspan').text(text);\n  if (cl !== null) tspan.classed(cl, true);\n  this.tspan = tspan;\n\n  this.bold = function() {\n    this.tspan.attr('font-weight', 'bold');\n    return this;\n  };\n\n  this.font_size = function(pts) {\n    this.tspan.attr('font-size', pts);\n    return this;\n  }\n\n  this.x = function(x) {\n    this.tspan.attr('x', x);\n    return this;\n  };\n  this.y = function(y) {\n    this.tspan.attr('y', y);\n    return this;\n  };\n  this.elem = function() {\n    return this.tspan;\n  };\n  return this;\n}\n\nfunction mg_reset_text_container(svg) {\n  var textContainer = svg.select('.mg-active-datapoint');\n  textContainer\n    .selectAll('*')\n    .remove();\n  return textContainer;\n}\n\nfunction mg_mouseover_row(row_number, container, rargs) {\n  var lineHeight = 1.1;\n  this.rargs = rargs;\n\n  var rrr = container.append('tspan')\n    .attr('x', 0)\n    .attr('y', (row_number * lineHeight) + 'em');\n\n  this.text = function(text) {\n    return mg_mouseover_tspan(rrr, text);\n  }\n  return this;\n}\n\nfunction mg_mouseover_text(args, rargs) {\n  var lineHeight = 1.1;\n  this.row_number = 0;\n  this.rargs = rargs;\n  mg_setup_mouseover_container(rargs.svg, args);\n\n  this.text_container = mg_reset_text_container(rargs.svg);\n\n  this.mouseover_row = function(rargs) {\n    var that = this;\n    var rrr = mg_mouseover_row(that.row_number, that.text_container, rargs);\n    that.row_number += 1;\n    return rrr;\n  }\n\n  return this;\n}\n\nfunction MG_WindowResizeTracker() {\n  var targets = [];\n\n  var Observer;\n  if (typeof MutationObserver !== \"undefined\") {\n    Observer = MutationObserver;\n  } else if (typeof WebKitMutationObserver !== \"undefined\") {\n    Observer = WebKitMutationObserver;\n  }\n\n  function window_listener() {\n    targets.forEach(function(target) {\n      var svg = d3.select(target).select('svg');\n\n      // skip if svg is not visible\n      if (!svg.empty() && (svg.node().parentNode.offsetWidth > 0 || svg.node().parentNode.offsetHeight > 0)) {\n        var aspect = svg.attr('width') !== 0 ? (svg.attr('height') / svg.attr('width')) : 0;\n\n        var newWidth = get_width(target);\n\n        svg.attr('width', newWidth);\n        svg.attr('height', aspect * newWidth);\n      }\n    });\n  }\n\n  function remove_target(target) {\n    var index = targets.indexOf(target);\n    if (index !== -1) {\n      targets.splice(index, 1);\n    }\n\n    if (targets.length === 0) {\n      window.removeEventListener('resize', window_listener, true);\n    }\n  }\n\n  return {\n    add_target: function(target) {\n      if (targets.length === 0) {\n        window.addEventListener('resize', window_listener, true);\n      }\n\n      if (targets.indexOf(target) === -1) {\n        targets.push(target);\n\n        if (Observer) {\n          var observer = new Observer(function(mutations) {\n            var targetNode = d3.select(target).node();\n\n            if (!targetNode || mutations.some(\n                function(mutation) {\n                  for (var i = 0; i < mutation.removedNodes.length; i++) {\n                    if (mutation.removedNodes[i] === targetNode) {\n                      return true;\n                    }\n                  }\n                })) {\n              observer.disconnect();\n              remove_target(target);\n            }\n          });\n\n          observer.observe(d3.select(target).node().parentNode, { childList: true });\n        }\n      }\n    }\n  };\n}\n\nvar mg_window_resize_tracker = new MG_WindowResizeTracker();\n\nfunction mg_window_listeners(args) {\n  mg_if_aspect_ratio_resize_svg(args);\n}\n\nfunction mg_if_aspect_ratio_resize_svg(args) {\n  // have we asked the svg to fill a div, if so resize with div\n  if (args.full_width || args.full_height) {\n    mg_window_resize_tracker.add_target(args.target);\n  }\n}\n\nif (mg_jquery_exists()) {\n    /*!\n     * Bootstrap v3.3.1 (http://getbootstrap.com)\n     * Copyright 2011-2014 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     */\n\n    /*!\n     * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=c3834cc5b59ef727da53)\n     * Config saved to config.json and https://gist.github.com/c3834cc5b59ef727da53\n     */\n\n    /* ========================================================================\n     * Bootstrap: dropdown.js v3.3.1\n     * http://getbootstrap.com/javascript/#dropdowns\n     * ========================================================================\n     * Copyright 2011-2014 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n\n    +function ($) {\n      'use strict';\n\n      if(typeof $().dropdown == 'function')\n        return true;\n\n      // DROPDOWN CLASS DEFINITION\n      // =========================\n\n      var backdrop = '.dropdown-backdrop';\n      var toggle   = '[data-toggle=\"dropdown\"]';\n      var Dropdown = function (element) {\n        $(element).on('click.bs.dropdown', this.toggle);\n      };\n\n      Dropdown.VERSION = '3.3.1';\n\n      Dropdown.prototype.toggle = function (e) {\n        var $this = $(this);\n\n        if ($this.is('.disabled, :disabled')) return;\n\n        var $parent  = getParent($this);\n        var isActive = $parent.hasClass('open');\n\n        clearMenus();\n\n        if (!isActive) {\n          if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n            // if mobile we use a backdrop because click events don't delegate\n            $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus);\n          }\n\n          var relatedTarget = { relatedTarget: this };\n          $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));\n\n          if (e.isDefaultPrevented()) return;\n\n          $this\n            .trigger('focus')\n            .attr('aria-expanded', 'true');\n\n          $parent\n            .toggleClass('open')\n            .trigger('shown.bs.dropdown', relatedTarget);\n        }\n\n        return false;\n      };\n\n      Dropdown.prototype.keydown = function (e) {\n        if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;\n\n        var $this = $(this);\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if ($this.is('.disabled, :disabled')) return;\n\n        var $parent  = getParent($this);\n        var isActive = $parent.hasClass('open');\n\n        if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n          if (e.which == 27) $parent.find(toggle).trigger('focus');\n          return $this.trigger('click');\n        }\n\n        var desc = ' li:not(.divider):visible a';\n        var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc);\n\n        if (!$items.length) return;\n\n        var index = $items.index(e.target);\n\n        if (e.which == 38 && index > 0)                 index--;                        // up\n        if (e.which == 40 && index < $items.length - 1) index++;                        // down\n        if (!~index)                                      index = 0;\n\n        $items.eq(index).trigger('focus');\n      };\n\n      function clearMenus(e) {\n        if (e && e.which === 3) return;\n        $(backdrop).remove();\n        $(toggle).each(function () {\n          var $this         = $(this);\n          var $parent       = getParent($this);\n          var relatedTarget = { relatedTarget: this };\n\n          if (!$parent.hasClass('open')) return;\n\n          $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));\n\n          if (e.isDefaultPrevented()) return;\n\n          $this.attr('aria-expanded', 'false');\n          $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget);\n        });\n      }\n\n      function getParent($this) {\n        var selector = $this.attr('data-target');\n\n        if (!selector) {\n          selector = $this.attr('href');\n          selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n        }\n\n        var $parent = selector && $(selector);\n\n        return $parent && $parent.length ? $parent : $this.parent();\n      }\n\n\n      // DROPDOWN PLUGIN DEFINITION\n      // ==========================\n\n      function Plugin(option) {\n        return this.each(function () {\n          var $this = $(this);\n          var data  = $this.data('bs.dropdown');\n\n          if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)));\n          if (typeof option == 'string') data[option].call($this);\n        });\n      }\n\n      var old = $.fn.dropdown;\n\n      $.fn.dropdown             = Plugin;\n      $.fn.dropdown.Constructor = Dropdown;\n\n\n      // DROPDOWN NO CONFLICT\n      // ====================\n\n      $.fn.dropdown.noConflict = function () {\n        $.fn.dropdown = old;\n        return this;\n      };\n\n\n      // APPLY TO STANDARD DROPDOWN ELEMENTS\n      // ===================================\n\n      $(document)\n        .on('click.bs.dropdown.data-api', clearMenus)\n        .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation(); })\n        .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n        .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n        .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n        .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown);\n\n    }(jQuery);\n}\n\nMG.button_layout = function(target) {\n  'use strict';\n  this.target = target;\n  this.feature_set = {};\n  this.public_name = {};\n  this.sorters = {};\n  this.manual = [];\n  this.manual_map = {};\n  this.manual_callback = {};\n\n  this._strip_punctuation = function(s) {\n    var punctuationless = s.replace(/[^a-zA-Z0-9 _]+/g, '');\n    var finalString = punctuationless.replace(/ +?/g, '');\n    return finalString;\n  };\n\n  this.data = function(data) {\n    this._data = data;\n    return this;\n  };\n\n  this.manual_button = function(feature, feature_set, callback) {\n    this.feature_set[feature] = feature_set;\n    this.manual_map[this._strip_punctuation(feature)] = feature;\n    this.manual_callback[feature] = callback; // the default is going to be the first feature.\n    return this;\n  };\n\n  this.button = function(feature) {\n    if (arguments.length > 1) {\n      this.public_name[feature] = arguments[1];\n    }\n\n    if (arguments.length > 2) {\n      this.sorters[feature] = arguments[2];\n    }\n\n    this.feature_set[feature] = [];\n    return this;\n  };\n\n  this.callback = function(callback) {\n    this._callback = callback;\n    return this;\n  };\n\n  this.display = function() {\n    var callback = this._callback;\n    var manual_callback = this.manual_callback;\n    var manual_map = this.manual_map;\n\n    var d, f, features, feat;\n    features = Object.keys(this.feature_set);\n\n    var mapDtoF = function(f) {\n      return d[f]; };\n\n    var i;\n\n    // build out this.feature_set with this.data\n    for (i = 0; i < this._data.length; i++) {\n      d = this._data[i];\n      f = features.map(mapDtoF);\n      for (var j = 0; j < features.length; j++) {\n        feat = features[j];\n        if (this.feature_set[feat].indexOf(f[j]) === -1) {\n          this.feature_set[feat].push(f[j]);\n        }\n      }\n    }\n\n    for (feat in this.feature_set) {\n      if (this.sorters.hasOwnProperty(feat)) {\n        this.feature_set[feat].sort(this.sorters[feat]);\n      }\n    }\n\n    $(this.target).empty();\n\n    $(this.target).append(\"<div class='col-lg-12 segments text-center'></div>\");\n\n    var dropdownLiAClick = function() {\n      var k = $(this).data('key');\n      var feature = $(this).data('feature');\n      var manual_feature;\n      $('.' + feature + '-btns button.btn span.title').html(k);\n      if (!manual_map.hasOwnProperty(feature)) {\n        callback(feature, k);\n      } else {\n        manual_feature = manual_map[feature];\n        manual_callback[manual_feature](k);\n      }\n\n      return false;\n    };\n\n    for (var feature in this.feature_set) {\n      features = this.feature_set[feature];\n      $(this.target + ' div.segments').append(\n        '<div class=\"btn-group ' + this._strip_punctuation(feature) + '-btns text-left\">' + // This never changes.\n        '<button type=\"button\" class=\"btn btn-default btn-lg dropdown-toggle\" data-toggle=\"dropdown\">' +\n        \"<span class='which-button'>\" + (this.public_name.hasOwnProperty(feature) ? this.public_name[feature] : feature) + \"</span>\" +\n        \"<span class='title'>\" + (this.manual_callback.hasOwnProperty(feature) ? this.feature_set[feature][0] : 'all') + \"</span>\" + // if a manual button, don't default to all in label.\n        '<span class=\"caret\"></span>' +\n        '</button>' +\n        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n        (!this.manual_callback.hasOwnProperty(feature) ? '<li><a href=\"#\" data-feature=\"' + feature + '\" data-key=\"all\">All</a></li>' : \"\") +\n        (!this.manual_callback.hasOwnProperty(feature) ? '<li class=\"divider\"></li>' : \"\") +\n        '</ul>' + '</div>');\n\n      for (i = 0; i < features.length; i++) {\n        if (features[i] !== 'all' && features[i] !== undefined) { // strange bug with undefined being added to manual buttons.\n          $(this.target + ' div.' + this._strip_punctuation(feature) + '-btns ul.dropdown-menu').append(\n            '<li><a href=\"#\" data-feature=\"' + this._strip_punctuation(feature) + '\" data-key=\"' + features[i] + '\">' + features[i] + '</a></li>'\n          );\n        }\n      }\n\n      $('.' + this._strip_punctuation(feature) + '-btns .dropdown-menu li a').on('click', dropdownLiAClick);\n    }\n\n    return this;\n  };\n\n  return this;\n};\n\n(function() {\n  'use strict';\n\n  function mg_line_color_text(elem, d, args) {\n    elem.classed('mg-hover-line' + d.line_id + '-color', args.colors === null)\n      .attr('fill', args.colors === null ? '' : args.colors[d.line_id - 1]);\n  }\n\n  function mg_line_graph_generators(args, plot, svg) {\n    mg_add_line_generator(args, plot);\n    mg_add_area_generator(args, plot);\n    mg_add_flat_line_generator(args, plot);\n    mg_add_confidence_band_generator(args, plot, svg);\n  }\n\n  function mg_add_confidence_band_generator(args, plot, svg) {\n    plot.existing_band = svg.selectAll('.mg-confidence-band').nodes();\n    if (args.show_confidence_band) {\n      plot.confidence_area = d3.area()\n        .defined(plot.line.defined())\n        .x(args.scalefns.xf)\n        .y0(function(d) {\n          var l = args.show_confidence_band[0];\n          if (d[l] != undefined) {\n            return args.scales.Y(d[l]);\n          } else {\n            return args.scales.Y(d[args.y_accessor]);\n          }\n        })\n        .y1(function(d) {\n          var u = args.show_confidence_band[1];\n          if (d[u] != undefined) {\n            return args.scales.Y(d[u]);\n          } else {\n            return args.scales.Y(d[args.y_accessor]);\n          }\n        })\n        .curve(args.interpolate);\n    }\n  }\n\n  function mg_add_area_generator(args, plot) {\n    plot.area = d3.area()\n      .defined(plot.line.defined())\n      .x(args.scalefns.xf)\n      .y0(args.scales.Y.range()[0])\n      .y1(args.scalefns.yf)\n      .curve(args.interpolate);\n  }\n\n  function mg_add_flat_line_generator(args, plot) {\n    plot.flat_line = d3.line()\n      .defined(function(d) {\n        return (d['_missing'] === undefined || d['_missing'] !== true) && d[args.y_accessor] !== null;\n      })\n      .x(args.scalefns.xf)\n      .y(function() {\n        return args.scales.Y(plot.data_median); })\n      .curve(args.interpolate);\n  }\n\n  function mg_add_line_generator(args, plot) {\n    plot.line = d3.line()\n      .x(args.scalefns.xf)\n      .y(args.scalefns.yf)\n      .curve(args.interpolate);\n\n    // if missing_is_zero is not set, then hide data points that fall in missing\n    // data ranges or that have been explicitly identified as missing in the\n    // data source.\n    if (!args.missing_is_zero) {\n      // a line is defined if the _missing attrib is not set to true\n      // and the y-accessor is not null\n      plot.line = plot.line.defined(function(d) {\n        return (d['_missing'] === undefined || d['_missing'] !== true) && d[args.y_accessor] !== null;\n      });\n    }\n  }\n\n  function mg_add_confidence_band(args, plot, svg, which_line) {\n    if (args.show_confidence_band) {\n      var confidenceBand;\n      if (svg.select('.mg-confidence-band-' + which_line).empty()) {\n        svg.append('path')\n          .attr('class', 'mg-confidence-band mg-confidence-band-' + which_line)\n      }\n\n      // transition this line's confidence band\n      confidenceBand = svg.select('.mg-confidence-band-' + which_line);\n\n      confidenceBand\n        .transition()\n        .duration(function() {\n          return (args.transition_on_update) ? 1000 : 0;\n        })\n        .attr('d', plot.confidence_area(args.data[which_line - 1]))\n        .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')')\n    }\n  }\n\n  function mg_add_area(args, plot, svg, which_line, line_id) {\n    var areas = svg.selectAll('.mg-main-area.mg-area' + line_id);\n    if (plot.display_area) {\n      // if area already exists, transition it\n      if (!areas.empty()) {\n        svg.node().appendChild(areas.node());\n\n        areas.transition()\n          .duration(plot.update_transition_duration)\n          .attr('d', plot.area(args.data[which_line]))\n          .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n      } else { // otherwise, add the area\n        svg.append('path')\n          .classed('mg-main-area', true)\n          .classed('mg-area' + line_id, true)\n          .classed('mg-area' + line_id + '-color', args.colors === null)\n          .attr('d', plot.area(args.data[which_line]))\n          .attr('fill', args.colors === null ? '' : args.colors[line_id - 1])\n          .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n      }\n    } else if (!areas.empty()) {\n      areas.remove();\n    }\n  }\n\n  function mg_default_color_for_path(this_path, line_id) {\n    this_path.classed('mg-line' + (line_id) + '-color', true);\n  }\n\n  function mg_color_line(args, this_path, which_line, line_id) {\n    if (args.colors) {\n      // for now, if args.colors is not an array, then keep moving as if nothing happened.\n      // if args.colors is not long enough, default to the usual line_id color.\n      if (args.colors.constructor === Array) {\n        this_path.attr('stroke', args.colors[which_line]);\n        if (args.colors.length < which_line + 1) {\n          // Go with default coloring.\n          // this_path.classed('mg-line' + (line_id) + '-color', true);\n          mg_default_color_for_path(this_path, line_id);\n        }\n      } else {\n        // this_path.classed('mg-line' + (line_id) + '-color', true);\n        mg_default_color_for_path(this_path, line_id);\n      }\n    } else {\n      // this is the typical workflow\n      // this_path.classed('mg-line' + (line_id) + '-color', true);\n      mg_default_color_for_path(this_path, line_id);\n    }\n  }\n\n  function mg_add_line_element(args, plot, this_path, which_line) {\n    if (args.animate_on_load) {\n      plot.data_median = d3.median(args.data[which_line], function(d) {\n        return d[args.y_accessor]; });\n      this_path.attr('d', plot.flat_line(args.data[which_line]))\n        .transition()\n        .duration(1000)\n        .attr('d', plot.line(args.data[which_line]))\n        .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n    } else { // or just add the line\n      this_path.attr('d', plot.line(args.data[which_line]))\n        .attr('clip-path', 'url(#mg-plot-window-' + mg_target_ref(args.target) + ')');\n    }\n  }\n\n  function mg_add_line(args, plot, svg, existing_line, which_line, line_id) {\n    if (!existing_line.empty()) {\n      svg.node().appendChild(existing_line.node());\n\n      var lineTransition = existing_line.transition()\n        .duration(plot.update_transition_duration);\n\n      if (!plot.display_area && args.transition_on_update && !args.missing_is_hidden) {\n        lineTransition.attrTween('d', path_tween(plot.line(args.data[which_line]), 4));\n      } else {\n        lineTransition.attr('d', plot.line(args.data[which_line]));\n      }\n    } else { // otherwise...\n      // if we're animating on load, animate the line from its median value\n      var this_path = svg.append('path')\n        .attr('class', 'mg-main-line mg-line' + line_id);\n\n      mg_color_line(args, this_path, which_line, line_id);\n      mg_add_line_element(args, plot, this_path, which_line);\n    }\n  }\n\n  function mg_add_legend_element(args, plot, which_line, line_id) {\n    var this_legend;\n    if (args.legend) {\n      if (is_array(args.legend)) {\n        this_legend = args.legend[which_line];\n      } else if (is_function(args.legend)) {\n        this_legend = args.legend(args.data[which_line]);\n      }\n\n      if (args.legend_target) {\n        if (args.colors && args.colors.constructor === Array) {\n          plot.legend_text = \"<span style='color:\" + args.colors[which_line] + \"'>&mdash; \" +\n            this_legend + '&nbsp; </span>' + plot.legend_text;\n        } else {\n          plot.legend_text = \"<span class='mg-line\" + line_id + \"-legend-color'>&mdash; \" +\n            this_legend + '&nbsp; </span>' + plot.legend_text;\n        }\n      } else {\n        var anchor_point, anchor_orientation, dx;\n        if (args.y_axis_position === 'left') {\n          anchor_point = args.data[which_line][args.data[which_line].length - 1];\n          anchor_orientation = 'start';\n          dx = args.buffer;\n        } else {\n          anchor_point = args.data[which_line][0];\n          anchor_orientation = 'end';\n          dx = -args.buffer;\n        }\n        var legend_text = plot.legend_group.append('svg:text')\n          .attr('x', args.scalefns.xf(anchor_point))\n          .attr('dx', dx)\n          .attr('y', args.scalefns.yf(anchor_point))\n          .attr('dy', '.35em')\n          .attr('font-size', 10)\n          .attr('text-anchor', anchor_orientation)\n          .attr('font-weight', '300')\n          .text(this_legend);\n\n        if (args.colors && args.colors.constructor === Array) {\n          if (args.colors.length < which_line + 1) {\n            legend_text.classed('mg-line' + (line_id) + '-legend-color', true);\n          } else {\n            legend_text.attr('fill', args.colors[which_line]);\n          }\n        } else {\n          legend_text.classed('mg-line' + (line_id) + '-legend-color', true);\n        }\n\n        mg_prevent_vertical_overlap(plot.legend_group.selectAll('.mg-line-legend text').nodes(), args);\n      }\n    }\n  }\n\n  function mg_plot_legend_if_legend_target(target, legend) {\n    if (target) {\n      d3.select(target).html(legend);\n    }\n  }\n\n  function mg_add_legend_group(args, plot, svg) {\n    if (args.legend) plot.legend_group = mg_add_g(svg, 'mg-line-legend');\n  }\n\n  function mg_remove_existing_line_rollover_elements(svg) {\n    // remove the old rollovers if they already exist\n    mg_selectAll_and_remove(svg, '.mg-rollover-rect');\n    mg_selectAll_and_remove(svg, '.mg-voronoi');\n\n    // remove the old rollover text and circle if they already exist\n    mg_selectAll_and_remove(svg, '.mg-active-datapoint');\n    mg_selectAll_and_remove(svg, '.mg-line-rollover-circle');\n    //mg_selectAll_and_remove(svg, '.mg-active-datapoint-container');\n  }\n\n  function mg_add_rollover_circle(args, svg) {\n    // append circle\n    var circle = svg.selectAll('.mg-line-rollover-circle')\n      .data(args.data)\n      .enter().append('circle')\n      .attr('cx', 0)\n      .attr('cy', 0)\n      .attr('r', 0);\n\n    if (args.colors && args.colors.constructor === Array) {\n      circle\n        .attr('class', function(d) {\n          return 'mg-line' + d.line_id;\n        })\n        .attr('fill', function(d, i) {\n          return args.colors[i];\n        })\n        .attr('stroke', function(d, i) {\n          return args.colors[i];\n        });\n    } else {\n      circle.attr('class', function(d, i) {\n        return [\n          'mg-line' + d.line_id,\n          'mg-line' + d.line_id + '-color',\n          'mg-area' + d.line_id + '-color'\n        ].join(' ');\n      });\n    }\n    circle.classed('mg-line-rollover-circle', true);\n  }\n\n  function mg_set_unique_line_id_for_each_series(args) {\n    // update our data by setting a unique line id for each series\n    // increment from 1... unless we have a custom increment series\n    var line_id = 1;\n    for (var i = 0; i < args.data.length; i++) {\n      for (var j = 0; j < args.data[i].length; j++) {\n        // if custom line-color map is set, use that instead of line_id\n        if (args.custom_line_color_map.length > 0) {\n          args.data[i][j].line_id = args.custom_line_color_map[i];\n        } else {\n          args.data[i][j].line_id = line_id;\n        }\n      }\n      line_id++;\n    }\n  }\n\n  function mg_nest_data_for_voronoi(args) {\n    return d3.merge(args.data);\n  }\n\n  function mg_line_class_string(args) {\n    return function(d) {\n      var class_string;\n\n      if (args.linked) {\n        var v = d[args.x_accessor];\n        var formatter = MG.time_format(args.utc_time, args.linked_format);\n\n        // only format when x-axis is date\n        var id = (typeof v === 'number') ? (d.line_id - 1) : formatter(v);\n        class_string = 'roll_' + id + ' mg-line' + d.line_id;\n\n        if (args.color === null) {\n          class_string += ' mg-line' + d.line_id + '-color';\n        }\n        return class_string;\n\n      } else {\n        class_string = 'mg-line' + d.line_id;\n        if (args.color === null) class_string += ' mg-line' + d.line_id + '-color';\n        return class_string;\n      }\n    };\n  }\n\n  function mg_add_voronoi_rollover(args, svg, rollover_on, rollover_off, rollover_move) {\n    var voronoi = d3.voronoi()\n      .x(function(d) {\n        return args.scales.X(d[args.x_accessor]).toFixed(2); })\n      .y(function(d) {\n        return args.scales.Y(d[args.y_accessor]).toFixed(2); })\n      .extent([\n        [args.buffer, args.buffer + args.title_y_position],\n        [args.width - args.buffer, args.height - args.buffer]\n      ]);\n\n    var g = mg_add_g(svg, 'mg-voronoi');\n    g.selectAll('path')\n      .data(voronoi.polygons(mg_nest_data_for_voronoi(args)))\n      .enter()\n      .append('path')\n      .filter(function(d) {\n        return d !== undefined && d.length > 0; })\n      .attr('d', function(d) {\n        return d == null ? null : 'M' + d.join('L') + 'Z'; })\n      .datum(function(d) {\n        return d == null ? null : d.data; }) // because of d3.voronoi, reassign d\n      .attr('class', mg_line_class_string(args))\n      .on('mouseover', rollover_on)\n      .on('mouseout', rollover_off)\n      .on('mousemove', rollover_move);\n\n    mg_configure_voronoi_rollover(args, svg);\n  }\n\n  function nest_data_for_aggregate_rollover(args) {\n    var data_nested = d3.nest()\n      .key(function(d) {\n        return d[args.x_accessor]; })\n      .entries(d3.merge(args.data));\n    data_nested.forEach(function(entry) {\n      var datum = entry.values[0];\n      entry.key = datum[args.x_accessor];\n    });\n\n    if (args.x_sort) {\n      return data_nested.sort(function(a, b) {\n        return new Date(a.key) - new Date(b.key); });\n    } else {\n      return data_nested;\n    }\n  }\n\n  function mg_add_aggregate_rollover(args, svg, rollover_on, rollover_off, rollover_move) {\n    // Undo the keys getting coerced to strings, by setting the keys from the values\n    // This is necessary for when we have X axis keys that are things like\n    var data_nested = nest_data_for_aggregate_rollover(args);\n\n    var xf = data_nested.map(function(di) {\n      return args.scales.X(di.key);\n    });\n\n    var g = svg.append('g')\n      .attr('class', 'mg-rollover-rect');\n\n    g.selectAll('.mg-rollover-rects')\n      .data(data_nested).enter()\n      .append('rect')\n      .attr('x', function(d, i) {\n        if (xf.length === 1) return mg_get_plot_left(args);\n        else if (i === 0) return xf[i].toFixed(2);\n        else return ((xf[i - 1] + xf[i]) / 2).toFixed(2);\n      })\n      .attr('y', args.top)\n      .attr('width', function(d, i) {\n        if (xf.length === 1) return mg_get_plot_right(args);\n        else if (i === 0) return ((xf[i + 1] - xf[i]) / 2).toFixed(2);\n        else if (i === xf.length - 1) return ((xf[i] - xf[i - 1]) / 2).toFixed(2);\n        else return ((xf[i + 1] - xf[i - 1]) / 2).toFixed(2);\n      })\n      .attr('class', function(d) {\n        var line_classes = d.values.map(function(datum) {\n          var lc = mg_line_class(datum.line_id);\n          if (args.colors === null) lc += ' ' + mg_line_color_class(datum.line_id);\n          return lc;\n        }).join(' ');\n        if (args.linked && d.values.length > 0) {\n          line_classes += ' ' + mg_rollover_id_class(mg_rollover_format_id(d.values[0], 0, args));\n        }\n\n        return line_classes;\n      })\n      .attr('height', args.height - args.bottom - args.top - args.buffer)\n      .attr('opacity', 0)\n      .on('mouseover', rollover_on)\n      .on('mouseout', rollover_off)\n      .on('mousemove', rollover_move);\n\n    mg_configure_aggregate_rollover(args, svg);\n  }\n\n  function mg_configure_singleton_rollover(args, svg) {\n    svg.select('.mg-rollover-rect rect')\n      .on('mouseover')(args.data[0][0], 0);\n  }\n\n  function mg_configure_voronoi_rollover(args, svg) {\n    for (var i = 0; i < args.data.length; i++) {\n      var j = i + 1;\n\n      if (args.custom_line_color_map.length > 0 &&\n        args.custom_line_color_map[i] !== undefined) {\n        j = args.custom_line_color_map[i];\n      }\n\n      if (args.data[i].length === 1 && !svg.selectAll('.mg-voronoi .mg-line' + j).empty()) {\n        svg.selectAll('.mg-voronoi .mg-line' + j)\n          .on('mouseover')(args.data[i][0], 0);\n\n        svg.selectAll('.mg-voronoi .mg-line' + j)\n          .on('mouseout')(args.data[i][0], 0);\n      }\n    }\n  }\n\n  function mg_line_class(line_id) {\n    return 'mg-line' + line_id;\n  }\n\n  function mg_line_color_class(line_id) {\n    return 'mg-line' + line_id + '-color';\n  }\n\n  function mg_rollover_id_class(id) {\n    return 'roll_' + id;\n  }\n\n  function mg_rollover_format_id(d, i, args) {\n    var v = d[args.x_accessor];\n    var formatter = MG.time_format(args.utc_time, args.linked_format);\n    // only format when x-axis is date\n    var id = (typeof v === 'number') ? i : formatter(v);\n    return id;\n  }\n\n  function mg_add_single_line_rollover(args, svg, rollover_on, rollover_off, rollover_move) {\n    // set to 1 unless we have a custom increment series\n    var line_id = 1;\n    if (args.custom_line_color_map.length > 0) {\n      line_id = args.custom_line_color_map[0];\n    }\n\n    var g = svg.append('g')\n      .attr('class', 'mg-rollover-rect');\n\n    var xf = args.data[0].map(args.scalefns.xf);\n\n    g.selectAll('.mg-rollover-rects')\n      .data(args.data[0]).enter()\n      .append('rect')\n      .attr('class', function(d, i) {\n        var cl = mg_line_color_class(line_id) + ' ' + mg_line_class(d.line_id);\n        if (args.linked) cl += cl + ' ' + mg_rollover_id_class(mg_rollover_format_id(d, i, args));\n        return cl;\n      })\n      .attr('x', function(d, i) {\n        // if data set is of length 1\n        if (xf.length === 1) return mg_get_plot_left(args);\n        else if (i === 0) return xf[i].toFixed(2);\n        else return ((xf[i - 1] + xf[i]) / 2).toFixed(2);\n      })\n      .attr('y', function(d, i) {\n        return (args.data.length > 1) ? args.scalefns.yf(d) - 6 // multi-line chart sensitivity\n          : args.top;\n      })\n      .attr('width', function(d, i) {\n        // if data set is of length 1\n        if (xf.length === 1) return mg_get_plot_right(args);\n        else if (i === 0) return ((xf[i + 1] - xf[i]) / 2).toFixed(2);\n        else if (i === xf.length - 1) return ((xf[i] - xf[i - 1]) / 2).toFixed(2);\n        else return ((xf[i + 1] - xf[i - 1]) / 2).toFixed(2);\n      })\n      .attr('height', function(d, i) {\n        return (args.data.length > 1) ? 12 // multi-line chart sensitivity\n          : args.height - args.bottom - args.top - args.buffer;\n      })\n      .attr('opacity', 0)\n      .on('mouseover', rollover_on)\n      .on('mouseout', rollover_off)\n      .on('mousemove', rollover_move);\n\n    if (mg_is_singleton(args)) {\n      mg_configure_singleton_rollover(args, svg);\n    }\n  }\n\n  function mg_configure_aggregate_rollover(args, svg) {\n    var rect = svg.selectAll('.mg-rollover-rect rect');\n    var rect_first = rect.nodes()[0][0] || rect.nodes()[0];\n    if (args.data.filter(function(d) { return d.length === 1; }).length > 0) {\n      rect.on('mouseover')(rect_first.__data__, 0);\n    }\n  }\n\n  function mg_is_standard_multiline(args) {\n    return args.data.length > 1 && !args.aggregate_rollover;\n  }\n\n  function mg_is_aggregated_rollover(args) {\n    return args.data.length > 1 && args.aggregate_rollover;\n  }\n\n  function mg_is_singleton(args) {\n    return args.data.length === 1 && args.data[0].length === 1;\n  }\n\n  function mg_draw_all_line_elements(args, plot, svg) {\n    mg_remove_dangling_bands(plot, svg);\n\n    for (var i = args.data.length - 1; i >= 0; i--) {\n      var this_data = args.data[i];\n\n      // passing the data for the current line\n      MG.call_hook('line.before_each_series', [this_data, args]);\n\n      // override increment if we have a custom increment series\n      var line_id = i + 1;\n      if (args.custom_line_color_map.length > 0) {\n        line_id = args.custom_line_color_map[i];\n      }\n\n      args.data[i].line_id = line_id;\n\n      if (this_data.length === 0) {\n        continue;\n      }\n      var existing_line = svg.select('path.mg-main-line.mg-line' + (line_id));\n\n      mg_add_confidence_band(args, plot, svg, line_id);\n      mg_add_area(args, plot, svg, i, line_id);\n      mg_add_line(args, plot, svg, existing_line, i, line_id);\n      mg_add_legend_element(args, plot, i, line_id);\n\n      // passing the data for the current line\n      MG.call_hook('line.after_each_series', [this_data, existing_line, args]);\n    }\n  }\n\n  function mg_remove_dangling_bands(plot, svg) {\n    if (plot.existing_band[0] && plot.existing_band[0].length > svg.selectAll('.mg-main-line').node().length) {\n      svg.selectAll('.mg-confidence-band').remove();\n    }\n  }\n\n  function mg_line_main_plot(args) {\n    var plot = {};\n    var svg = mg_get_svg_child_of(args.target);\n\n    // remove any old legends if they exist\n    mg_selectAll_and_remove(svg, '.mg-line-legend');\n    mg_add_legend_group(args, plot, svg);\n\n    plot.data_median = 0;\n    plot.update_transition_duration = (args.transition_on_update) ? 1000 : 0;\n    plot.display_area = args.area && !args.use_data_y_min && args.data.length <= 1 && args.aggregate_rollover === false;\n    plot.legend_text = '';\n    mg_line_graph_generators(args, plot, svg);\n    plot.existing_band = svg.selectAll('.mg-confidence-band').nodes();\n\n    // should we continue with the default line render? A `line.all_series` hook should return false to prevent the default.\n    var continueWithDefault = MG.call_hook('line.before_all_series', [args]);\n    if (continueWithDefault !== false) {\n      mg_draw_all_line_elements(args, plot, svg);\n    }\n\n    mg_plot_legend_if_legend_target(args.legend_target, plot.legend_text);\n  }\n\n  function mg_line_rollover_setup(args, graph) {\n    var svg = mg_get_svg_child_of(args.target);\n\n    if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n      mg_add_g(svg, 'mg-active-datapoint-container');\n    }\n\n    mg_remove_existing_line_rollover_elements(svg);\n    mg_add_rollover_circle(args, svg);\n    mg_set_unique_line_id_for_each_series(args);\n\n    if (mg_is_standard_multiline(args)) {\n      mg_add_voronoi_rollover(args, svg, graph.rolloverOn(args), graph.rolloverOff(args), graph.rolloverMove(args));\n    } else if (mg_is_aggregated_rollover(args)) {\n      mg_add_aggregate_rollover(args, svg, graph.rolloverOn(args), graph.rolloverOff(args), graph.rolloverMove(args));\n    } else {\n      mg_add_single_line_rollover(args, svg, graph.rolloverOn(args), graph.rolloverOff(args), graph.rolloverMove(args));\n    }\n  }\n\n  function mg_update_rollover_circle(args, svg, d) {\n    if (args.aggregate_rollover && args.data.length > 1) {\n      // hide the circles in case a non-contiguous series is present\n      svg.selectAll('circle.mg-line-rollover-circle')\n        .style('opacity', 0);\n\n      d.values.forEach(function(datum) {\n        if (mg_data_in_plot_bounds(datum, args)) mg_update_aggregate_rollover_circle(args, svg, datum);\n      });\n    } else if ((args.missing_is_hidden && d['_missing']) || d[args.y_accessor] === null) {\n      // disable rollovers for hidden parts of the line\n      // recall that hidden parts are missing data ranges and possibly also\n      // data points that have been explicitly identified as missing\n      return;\n    } else {\n      // show circle on mouse-overed rect\n      if (mg_data_in_plot_bounds(d, args)) {\n        mg_update_generic_rollover_circle(args, svg, d);\n      }\n    }\n  }\n\n  function mg_update_aggregate_rollover_circle(args, svg, datum) {\n    svg.select('circle.mg-line-rollover-circle.mg-line' + datum.line_id)\n      .attr('cx', args.scales.X(datum[args.x_accessor]).toFixed(2))\n      .attr('cy', args.scales.Y(datum[args.y_accessor]).toFixed(2))\n      .attr('r', args.point_size)\n      .style('opacity', 1);\n  }\n\n  function mg_update_generic_rollover_circle(args, svg, d) {\n    svg.selectAll('circle.mg-line-rollover-circle.mg-line' + d.line_id)\n      .classed('mg-line-rollover-circle', true)\n      .attr('cx', function() {\n        return args.scales.X(d[args.x_accessor]).toFixed(2);\n      })\n      .attr('cy', function() {\n        return args.scales.Y(d[args.y_accessor]).toFixed(2);\n      })\n      .attr('r', args.point_size)\n      .style('opacity', 1);\n  }\n\n  function mg_trigger_linked_mouseovers(args, d, i) {\n    if (args.linked && !MG.globals.link) {\n      MG.globals.link = true;\n      if (!args.aggregate_rollover || d.value !== undefined || d.values.length > 0) {\n        var datum = d.values ? d.values[0] : d;\n        var id = mg_rollover_format_id(datum, i, args);\n        // trigger mouseover on matching line in .linked charts\n        d3.selectAll('.' + mg_line_class(datum.line_id) + '.' + mg_rollover_id_class(id))\n          .each(function(d) {\n            d3.select(this)\n              .on('mouseover')(d, i);\n          });\n      }\n    }\n  }\n\n  function mg_trigger_linked_mouseouts(args, d, i) {\n    if (args.linked && MG.globals.link) {\n      MG.globals.link = false;\n\n      var formatter = MG.time_format(args.utc_time, args.linked_format);\n      var datums = d.values ? d.values : [d];\n      datums.forEach(function(datum) {\n        var v = datum[args.x_accessor];\n        var id = (typeof v === 'number') ? i : formatter(v);\n\n        // trigger mouseout on matching line in .linked charts\n        d3.selectAll('.roll_' + id)\n          .each(function(d) {\n            d3.select(this)\n              .on('mouseout')(d);\n          });\n      });\n    }\n  }\n\n  function mg_remove_active_data_points_for_aggregate_rollover(args, svg) {\n    svg.selectAll('circle.mg-line-rollover-circle').filter(function(circle) {\n        return circle.length > 1;\n      })\n      .style('opacity', 0);\n  }\n\n  function mg_remove_active_data_points_for_generic_rollover(args, svg, d) {\n    svg.selectAll('circle.mg-line-rollover-circle.mg-line' + d.line_id)\n      .style('opacity', function() {\n        var id = d.line_id - 1;\n\n        if (args.custom_line_color_map.length > 0 &&\n          args.custom_line_color_map.indexOf(d.line_id) !== undefined\n        ) {\n          id = args.custom_line_color_map.indexOf(d.line_id);\n        }\n\n        if (args.data[id].length === 1) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n  }\n\n  function mg_remove_active_text(svg) {\n    svg.select('.mg-active-datapoint').text('');\n  }\n\n  function lineChart(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      if (!args.data || args.data.length === 0) {\n        args.internal_error = 'No data was supplied';\n        internal_error(args);\n        return this;\n      } else {\n        args.internal_error = undefined;\n      }\n\n      raw_data_transformation(args);\n      process_line(args);\n\n      MG.call_hook('line.before_destroy', this);\n\n      init(args);\n\n      // TODO incorporate markers into calculation of x scales\n      new MG.scale_factory(args)\n        .namespace('x')\n        .numericalDomainFromData()\n        .numericalRange('bottom')\n\n      var baselines = (args.baselines || []).map(function(d) {\n        return d[args.y_accessor];\n      });\n\n      new MG.scale_factory(args)\n        .namespace('y')\n        .zeroBottom(true)\n        .inflateDomain(true)\n        .numericalDomainFromData(baselines)\n        .numericalRange('left');\n\n      var svg = mg_get_svg_child_of(args.target);\n\n      if (args.x_axis) {\n        new MG.axis_factory(args)\n          .namespace('x')\n          .type('numerical')\n          .position(args.x_axis_position)\n          .rug(x_rug(args))\n          .label(mg_add_x_label)\n          .draw();\n      }\n\n      if (args.y_axis) {\n        new MG.axis_factory(args)\n          .namespace('y')\n          .type('numerical')\n          .position(args.y_axis_position)\n          .rug(y_rug(args))\n          .label(mg_add_y_label)\n          .draw();\n      }\n\n      this.markers();\n      this.mainPlot();\n      this.rollover();\n      this.windowListeners();\n\n      MG.call_hook('line.after_init', this);\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      mg_line_main_plot(args);\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      return this;\n    };\n\n    this.rollover = function() {\n      var that = this;\n      mg_line_rollover_setup(args, that);\n      MG.call_hook('line.after_rollover', args);\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n      var fmt = mg_get_rollover_time_format(args);\n\n      return function(d, i) {\n        mg_update_rollover_circle(args, svg, d);\n        mg_trigger_linked_mouseovers(args, d, i);\n\n        svg.selectAll('text')\n          .filter(function(g, j) {\n            return d === g;\n          })\n          .attr('opacity', 0.3);\n\n        // update rollover text except for missing data points\n        if (args.show_rollover_text &&\n            !((args.missing_is_hidden && d['_missing']) || d[args.y_accessor] === null)\n          ) {\n          var mouseover = mg_mouseover_text(args, { svg: svg });\n          var row = mouseover.mouseover_row();\n          if (args.aggregate_rollover) {\n            row.text((args.aggregate_rollover && args.data.length > 1\n              ? mg_format_x_aggregate_mouseover\n              : mg_format_x_mouseover)(args, d));\n          }\n\n          var pts = args.aggregate_rollover && args.data.length > 1\n            ? d.values\n            : [d];\n\n          pts.forEach(function(di) {\n            if (args.aggregate_rollover) {\n              row = mouseover.mouseover_row();\n            }\n\n            if (args.legend) {\n              mg_line_color_text(row.text(args.legend[di.line_id - 1] + '  ').bold().elem(), di, args);\n            }\n\n            mg_line_color_text(row.text('\\u2014  ').elem(), di, args);\n            if (!args.aggregate_rollover) {\n              row.text(mg_format_x_mouseover(args, di));\n            }\n\n            row.text(mg_format_y_mouseover(args, di, args.time_series === false));\n          })\n        }\n\n        if (args.mouseover) {\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        mg_trigger_linked_mouseouts(args, d, i);\n        if (args.aggregate_rollover) {\n          mg_remove_active_data_points_for_aggregate_rollover(args, svg);\n        } else {\n          mg_remove_active_data_points_for_generic_rollover(args, svg, d);\n        }\n\n        if (args.data[0].length > 1) {\n          mg_clear_mouseover_container(svg);\n        }\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  MG.register('line', lineChart);\n}).call(this);\n\n(function() {\n  'use strict';\n\n  function histogram(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      raw_data_transformation(args);\n      process_histogram(args);\n      init(args);\n\n      new MG.scale_factory(args)\n        .namespace('x')\n        .numericalDomainFromData()\n        .numericalRange('bottom');\n\n      var baselines = (args.baselines || []).map(function(d) {\n        return d[args.y_accessor]\n      });\n\n      new MG.scale_factory(args)\n        .namespace('y')\n        .zeroBottom(true)\n        .inflateDomain(true)\n        .numericalDomainFromData(baselines)\n        .numericalRange('left');\n\n      x_axis(args);\n      y_axis(args);\n\n      this.mainPlot();\n      this.markers();\n      this.rollover();\n      this.windowListeners();\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      var svg = mg_get_svg_child_of(args.target);\n\n      //remove the old histogram, add new one\n      svg.selectAll('.mg-histogram').remove();\n\n      var g = svg.append('g')\n        .attr('class', 'mg-histogram');\n\n      var bar = g.selectAll('.mg-bar')\n        .data(args.data[0])\n        .enter().append('g')\n        .attr('class', 'mg-bar')\n        .attr('transform', function(d) {\n          return \"translate(\" + args.scales.X(d[args.x_accessor]).toFixed(2) + \",\" + args.scales.Y(d[args.y_accessor]).toFixed(2) + \")\";\n        });\n\n      //draw bars\n      bar.append('rect')\n        .attr('x', 1)\n        .attr('width', function(d, i) {\n          if (args.data[0].length === 1) {\n            return (args.scalefns.xf(args.data[0][0]) - args.bar_margin).toFixed(0);\n          } else if (i !== args.data[0].length - 1) {\n            return (args.scalefns.xf(args.data[0][i + 1]) - args.scalefns.xf(d)).toFixed(0);\n          } else {\n            return (args.scalefns.xf(args.data[0][1]) - args.scalefns.xf(args.data[0][0])).toFixed(0);\n          }\n        })\n        .attr('height', function(d) {\n          if (d[args.y_accessor] === 0) {\n            return 0;\n          }\n\n          return (args.height - args.bottom - args.buffer - args.scales.Y(d[args.y_accessor])).toFixed(2);\n        });\n\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      return this;\n    };\n\n    this.rollover = function() {\n      var svg = mg_get_svg_child_of(args.target);\n\n      if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n        mg_add_g(svg, 'mg-active-datapoint-container');\n      }\n\n      //remove the old rollovers if they already exist\n      svg.selectAll('.mg-rollover-rect').remove();\n      svg.selectAll('.mg-active-datapoint').remove();\n\n      var g = svg.append('g')\n        .attr('class', 'mg-rollover-rect');\n\n      //draw rollover bars\n      var bar = g.selectAll('.mg-bar')\n        .data(args.data[0])\n        .enter().append('g')\n        .attr('class', function(d, i) {\n          if (args.linked) {\n            return 'mg-rollover-rects roll_' + i;\n          } else {\n            return 'mg-rollover-rects';\n          }\n        })\n        .attr('transform', function(d) {\n          return \"translate(\" + (args.scales.X(d[args.x_accessor])) + \",\" + 0 + \")\";\n        });\n\n      bar.append('rect')\n        .attr('x', 1)\n        .attr('y', args.buffer + args.title_y_position)\n        .attr('width', function(d, i) {\n          //if data set is of length 1\n          if (args.data[0].length === 1) {\n            return (args.scalefns.xf(args.data[0][0]) - args.bar_margin).toFixed(0);\n          } else if (i !== args.data[0].length - 1) {\n            return (args.scalefns.xf(args.data[0][i + 1]) - args.scalefns.xf(d)).toFixed(0);\n          } else {\n            return (args.scalefns.xf(args.data[0][1]) - args.scalefns.xf(args.data[0][0])).toFixed(0);\n          }\n        })\n        .attr('height', function(d) {\n          return args.height;\n        })\n        .attr('opacity', 0)\n        .on('mouseover', this.rolloverOn(args))\n        .on('mouseout', this.rolloverOff(args))\n        .on('mousemove', this.rolloverMove(args));\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        svg.selectAll('text')\n          .filter(function(g, j) {\n            return d === g;\n          })\n          .attr('opacity', 0.3);\n\n        var fmt = args.processed.xax_format || MG.time_format(args.utc_time, '%b %e, %Y');\n        var num = format_rollover_number(args);\n\n        svg.selectAll('.mg-bar rect')\n          .filter(function(d, j) {\n            return j === i;\n          })\n          .classed('active', true);\n\n        //trigger mouseover on all matching bars\n        if (args.linked && !MG.globals.link) {\n          MG.globals.link = true;\n\n          //trigger mouseover on matching bars in .linked charts\n          d3.selectAll('.mg-rollover-rects.roll_' + i + ' rect')\n            .each(function(d) { //use existing i\n              d3.select(this).on('mouseover')(d, i);\n            });\n        }\n\n        //update rollover text\n        if (args.show_rollover_text) {\n          var mo = mg_mouseover_text(args, { svg: svg });\n          var row = mo.mouseover_row();\n          row.text('\\u259F  ').elem()\n            .classed('hist-symbol', true);\n\n          row.text(mg_format_x_mouseover(args, d)); // x\n          row.text(mg_format_y_mouseover(args, d, args.time_series === false));\n        }\n\n        if (args.mouseover) {\n          mg_setup_mouseover_container(svg, args);\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        if (args.linked && MG.globals.link) {\n          MG.globals.link = false;\n\n          //trigger mouseout on matching bars in .linked charts\n          d3.selectAll('.mg-rollover-rects.roll_' + i + ' rect')\n            .each(function(d) { //use existing i\n              d3.select(this).on('mouseout')(d, i);\n            });\n        }\n\n        //reset active bar\n        svg.selectAll('.mg-bar rect')\n          .classed('active', false);\n\n        //reset active data point text\n        mg_clear_mouseover_container(svg);\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    binned: false,\n    bins: null,\n    processed_x_accessor: 'x',\n    processed_y_accessor: 'y',\n    processed_dx_accessor: 'dx',\n    bar_margin: 1\n  };\n\n  MG.register('histogram', histogram, defaults);\n}).call(this);\n\nfunction point_mouseover(args, svg, d) {\n  var mouseover = mg_mouseover_text(args, { svg: svg });\n  var row = mouseover.mouseover_row();\n\n  if (args.color_accessor !== null && args.color_type === 'category') {\n    var label = d[args.color_accessor];\n    row.text(label + '  ').bold().elem().attr('fill', args.scalefns.colorf(d));\n  }\n\n  mg_color_point_mouseover(args, row.text('\\u25CF   ').elem(), d); // point shape\n\n  row.text(mg_format_x_mouseover(args, d)); // x\n  row.text(mg_format_y_mouseover(args, d, args.time_series === false));\n}\n\nfunction mg_color_point_mouseover(args, elem, d) {\n  if (args.color_accessor !== null) {\n    elem.attr('fill', args.scalefns.colorf(d));\n    elem.attr('stroke', args.scalefns.colorf(d));\n  } else {\n    elem.classed('mg-points-mono', true);\n  }\n}\n\n\n(function() {\n  'use strict';\n\n  function mg_filter_out_plot_bounds(data, args) {\n    // max_x, min_x, max_y, min_y;\n    var x = args.x_accessor;\n    var y = args.y_accessor;\n    var new_data = data.filter(function(d) {\n      return (args.min_x === null || d[x] >= args.min_x) &&\n        (args.max_x === null || d[x] <= args.max_x) &&\n        (args.min_y === null || d[y] >= args.min_y) &&\n        (args.max_y === null || d[y] <= args.max_y);\n    })\n    return new_data;\n  }\n\n  function pointChart(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      // infer y_axis and x_axis type;\n      args.x_axis_type = mg_infer_type(args, 'x');\n      args.y_axis_type = mg_infer_type(args, 'y');\n\n      raw_data_transformation(args);\n\n      process_point(args);\n      init(args);\n\n      var xMaker, yMaker;\n\n      if (args.x_axis_type === 'categorical') {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.xgroup_height], args.xgroup_accessor === null);\n\n        if (args.xgroup_accessor) {\n          new MG.scale_factory(args)\n            .namespace('xgroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('bottom');\n\n        } else {\n          args.scales.XGROUP = function(d) {\n            return mg_get_plot_left(args) };\n          args.scalefns.xgroupf = function(d) {\n            return mg_get_plot_left(args) };\n        }\n\n        args.scalefns.xoutf = function(d) {\n          return args.scalefns.xf(d) + args.scalefns.xgroupf(d)\n        };\n      } else {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .inflateDomain(true)\n          .zeroBottom(args.y_axis_type === 'categorical')\n          .numericalDomainFromData((args.baselines || []).map(function(d) {\n            return d[args.x_accessor] }))\n          .numericalRange('bottom');\n\n        args.scalefns.xoutf = args.scalefns.xf;\n      }\n\n      // y-scale generation. This needs to get simplified.\n      if (args.y_axis_type === 'categorical') {\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .zeroBottom(true)\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.ygroup_height], true);\n\n        if (args.ygroup_accessor) {\n\n          new MG.scale_factory(args)\n            .namespace('ygroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('left');\n\n        } else {\n          args.scales.YGROUP = function() {\n            return mg_get_plot_top(args) };\n          args.scalefns.ygroupf = function(d) {\n            return mg_get_plot_top(args) };\n\n        }\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) + args.scalefns.ygroupf(d) };\n\n      } else {\n        var baselines = (args.baselines || []).map(function(d) {\n          return d[args.y_accessor] });\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .inflateDomain(true)\n          .zeroBottom(args.x_axis_type === 'categorical')\n          .numericalDomainFromData(baselines)\n          .numericalRange('left');\n\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) };\n      }\n\n      /////// COLOR accessor\n      if (args.color_accessor !== null) {\n        var colorScale = MG.scale_factory(args).namespace('color');\n        if (args.color_type === 'number') {\n          // do the color scale.\n          // etiher get color range, or what.\n          colorScale\n            .numericalDomainFromData(mg_get_color_domain(args))\n            .numericalRange(mg_get_color_range(args))\n            .clamp(true);\n        } else {\n          if (args.color_domain) {\n            colorScale\n              .categoricalDomain(args.color_domain)\n              .categoricalRange(args.color_range);\n          } else {\n            colorScale\n              .categoricalDomainFromData()\n              .categoricalColorRange();\n          }\n        }\n      }\n\n      if (args.size_accessor) {\n        new MG.scale_factory(args).namespace('size')\n          .numericalDomainFromData()\n          .numericalRange(mg_get_size_range(args))\n          .clamp(true);\n      }\n\n      new MG.axis_factory(args)\n        .namespace('x')\n        .type(args.x_axis_type)\n        .zeroLine(args.y_axis_type === 'categorical')\n        .position(args.x_axis_position)\n        .rug(x_rug(args))\n        .label(mg_add_x_label)\n        .draw();\n\n      new MG.axis_factory(args)\n        .namespace('y')\n        .type(args.y_axis_type)\n        .zeroLine(args.x_axis_type === 'categorical')\n        .position(args.y_axis_position)\n        .rug(y_rug(args))\n        .label(mg_add_y_label)\n        .draw();\n\n      this.mainPlot();\n      this.markers();\n      this.rollover();\n      this.windowListeners();\n\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      if (args.least_squares) {\n        add_ls(args);\n      }\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      var svg = mg_get_svg_child_of(args.target);\n      var g;\n\n      var data = mg_filter_out_plot_bounds(args.data[0], args);\n      //remove the old points, add new one\n      svg.selectAll('.mg-points').remove();\n\n      g = svg.append('g')\n        .classed('mg-points', true);\n\n\n      var pts = g.selectAll('circle')\n        .data(data)\n        .enter().append('circle')\n        .attr('class', function(d, i) {\n          return 'path-' + i;\n        })\n        .attr('cx', args.scalefns.xoutf)\n        .attr('cy', function(d) {\n          return args.scalefns.youtf(d);\n        });\n\n      //are we coloring our points, or just using the default color?\n      if (args.color_accessor !== null) {\n        pts.attr('fill', args.scalefns.colorf);\n        pts.attr('stroke', args.scalefns.colorf);\n      } else {\n        pts.classed('mg-points-mono', true);\n      }\n\n      if (args.size_accessor !== null) {\n        pts.attr('r', args.scalefns.sizef);\n      } else {\n        pts.attr('r', args.point_size);\n      }\n\n      return this;\n    };\n\n    this.rollover = function() {\n      var svg = mg_get_svg_child_of(args.target);\n\n      if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n        mg_add_g(svg, 'mg-active-datapoint-container');\n      }\n\n      //remove the old rollovers if they already exist\n      svg.selectAll('.mg-voronoi').remove();\n\n      //add rollover paths\n      var voronoi = d3.voronoi()\n        .x(args.scalefns.xoutf)\n        .y(args.scalefns.youtf)\n        .extent([\n          [args.buffer, args.buffer + args.title_y_position],\n          [args.width - args.buffer, args.height - args.buffer]\n        ]);\n\n      var paths = svg.append('g')\n        .attr('class', 'mg-voronoi');\n\n      paths.selectAll('path')\n        .data(voronoi.polygons(mg_filter_out_plot_bounds(args.data[0], args)))\n        .enter().append('path')\n        .attr('d', function(d) {\n          return d == null ? null : 'M' + d.join(',') + 'Z'; })\n        .attr('class', function(d, i) {\n          return 'path-' + i;\n        })\n        .style('fill-opacity', 0)\n        .on('mouseover', this.rolloverOn(args))\n        .on('mouseout', this.rolloverOff(args))\n        .on('mousemove', this.rolloverMove(args));\n\n      if (args.data[0].length === 1) {\n        point_mouseover(args, svg, args.data[0][0]);\n      }\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        svg.selectAll('.mg-points circle')\n          .classed('selected', false);\n\n        //highlight active point\n        var pts = svg.selectAll('.mg-points circle.path-' + i)\n          .classed('selected', true);\n\n        if (args.size_accessor) {\n          pts.attr('r', function(di) {\n            return args.scalefns.sizef(di) + args.active_point_size_increase;\n          });\n        } else {\n          pts.attr('r', args.point_size + args.active_point_size_increase);\n        }\n\n        //trigger mouseover on all points for this class name in .linked charts\n        if (args.linked && !MG.globals.link) {\n          MG.globals.link = true;\n\n          //trigger mouseover on matching point in .linked charts\n          d3.selectAll('.mg-voronoi .path-' + i)\n            .each(function() {\n              d3.select(this).on('mouseover')(d, i);\n            });\n        }\n\n        if (args.show_rollover_text) {\n          point_mouseover(args, svg, d.data);\n        }\n\n        if (args.mouseover) {\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        if (args.linked && MG.globals.link) {\n          MG.globals.link = false;\n\n          d3.selectAll('.mg-voronoi .path-' + i)\n            .each(function() {\n              d3.select(this).on('mouseout')(d, i);\n            });\n        }\n\n        //reset active point\n        var pts = svg.selectAll('.mg-points circle')\n          .classed('unselected', false)\n          .classed('selected', false);\n\n        if (args.size_accessor) {\n          pts.attr('r', args.scalefns.sizef);\n        } else {\n          pts.attr('r', args.point_size);\n        }\n\n        //reset active data point text\n        if (args.data[0].length > 1) mg_clear_mouseover_container(svg);\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.update = function(args) {\n      return this;\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    y_padding_percentage: 0.05, // for categorical scales\n    y_outer_padding_percentage: .2, // for categorical scales\n    ygroup_padding_percentage: 0, // for categorical scales\n    ygroup_outer_padding_percentage: 0, // for categorical scales\n    x_padding_percentage: 0.05, // for categorical scales\n    x_outer_padding_percentage: .2, // for categorical scales\n    xgroup_padding_percentage: 0, // for categorical scales\n    xgroup_outer_padding_percentage: 0, // for categorical scales\n    y_categorical_show_guides: true,\n    x_categorical_show_guides: true,\n    buffer: 16,\n    ls: false,\n    lowess: false,\n    point_size: 2.5,\n    label_accessor: null,\n    size_accessor: null,\n    color_accessor: null,\n    size_range: null, // when we set a size_accessor option, this array determines the size range, e.g. [1,5]\n    color_range: null, // e.g. ['blue', 'red'] to color different groups of points\n    size_domain: null,\n    color_domain: null,\n    active_point_size_increase: 1,\n    color_type: 'number' // can be either 'number' - the color scale is quantitative - or 'category' - the color scale is qualitative.\n  };\n\n  MG.register('point', pointChart, defaults);\n}).call(this);\n\n(function() {\n  'use strict';\n\n  // TODO add styles to stylesheet instead\n  function scaffold(args) {\n    var svg = mg_get_svg_child_of(args.target);\n    // main margins\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.top)\n      .attr('y2', args.top)\n      .attr('stroke', 'black');\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.height-args.bottom)\n      .attr('y2', args.height-args.bottom)\n      .attr('stroke', 'black');\n\n    svg.append('line')\n      .attr('x1', args.left)\n      .attr('x2', args.left)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'black');\n\n    svg.append('line')\n      .attr('x1', args.width-args.right)\n      .attr('x2', args.width-args.right)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'black');\n\n    // plot area margins\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.height-args.bottom-args.buffer)\n      .attr('y2', args.height-args.bottom-args.buffer)\n      .attr('stroke', 'gray');\n\n    svg.append('line')\n      .attr('x1', 0)\n      .attr('x2', args.width)\n      .attr('y1', args.top+args.buffer)\n      .attr('y2', args.top+args.buffer)\n      .attr('stroke', 'gray');\n\n    svg.append('line')\n      .attr('x1', args.left + args.buffer)\n      .attr('x2', args.left + args.buffer)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'gray');\n    svg.append('line')\n      .attr('x1', args.width -args.right - args.buffer)\n      .attr('x2', args.width -args.right - args.buffer)\n      .attr('y1', 0)\n      .attr('y2', args.height)\n      .attr('stroke', 'gray');\n  }\n\n  // barchart re-write.\n  function mg_targeted_legend(args) {\n    var labels;\n    var plot = '';\n    if (args.legend_target) {\n\n      var div = d3.select(args.legend_target).append('div').classed('mg-bar-target-legend', true);\n      \n      if (args.orientation == 'horizontal') labels = args.scales.Y.domain()\n      else labels = args.scales.X.domain();\n\n      labels.forEach(function(label) {\n        var outer_span = div.append('span').classed('mg-bar-target-element', true);\n        outer_span.append('span')\n          .classed('mg-bar-target-legend-shape', true)\n          .style('color', args.scales.COLOR(label))\n          .text('\\u25FC ');\n        outer_span.append('span')\n          .classed('mg-bar-target-legend-text', true)\n          .text(label);\n\n      });\n    }\n  }\n\n  function legend_on_graph(svg, args) {\n    // draw each element at the top right\n    // get labels\n\n    var labels;\n    if (args.orientation=='horizontal') labels = args.scales.Y.domain()\n    else labels = args.scales.X.domain();\n\n    var lineCount = 0;\n    var lineHeight = 1.1;\n    var g = svg.append('g').classed(\"mg-bar-legend\", true);\n    var textContainer = g.append('text');\n\n    //\n\n    textContainer\n      .selectAll('*')\n      .remove();\n    textContainer\n      .attr('width', args.right)\n      .attr('height', 100)\n      .attr('text-anchor', 'start');\n\n    labels.forEach(function(label) {\n      var sub_container = textContainer.append('tspan')\n        .attr('x', mg_get_plot_right(args))\n        .attr('y', args.height / 2)\n        .attr('dy', (lineCount * lineHeight) + 'em');\n      sub_container.append('tspan')\n        .text('\\u25a0 ')\n        .attr('fill', args.scales.COLOR(label))\n        .attr('font-size', 20)\n      sub_container.append('tspan')\n        .text(label)\n        .attr('font-weight', 300)\n        .attr('font-size', 10);\n      lineCount++;\n    })\n\n    // d.values.forEach(function (datum) {\n    //   formatted_y = mg_format_y_rollover(args, num, datum);\n\n    //   if (args.y_rollover_format !== null) {\n    //     formatted_y = number_rollover_format(args.y_rollover_format, datum, args.y_accessor);\n    //   } else {\n    //     formatted_y = args.yax_units + num(datum[args.y_accessor]);\n    //   }\n\n    //   sub_container = textContainer.append('tspan').attr('x', 0).attr('y', (lineCount * lineHeight) + 'em');\n    //   formatted_y = mg_format_y_rollover(args, num, datum);\n    //   mouseover_tspan(sub_container, '\\u2014  ')\n    //     .color(args, datum);\n    //   mouseover_tspan(sub_container, formatted_x + ' ' + formatted_y);\n\n    //   lineCount++;\n    // });\n  }\n\n  function barChart(args) {\n    this.args = args;\n\n    this.init = function(args) {\n      this.args = args;\n      args.x_axis_type = mg_infer_type(args, 'x');\n      args.y_axis_type = mg_infer_type(args, 'y');\n\n      // this is specific to how rects work in svg, let's keep track of the bar orientation to\n      // plot appropriately.\n      if (args.x_axis_type == 'categorical') {\n        args.orientation = 'vertical';\n      } else if (args.y_axis_type == 'categorical') {\n        args.orientation = 'horizontal';\n      } else if (args.x_axis_type != 'categorical' && args.y_axis_type != 'categorical') {\n        // histogram.\n        args.orientation = 'vertical';\n      }\n\n      raw_data_transformation(args);\n\n      process_point(args);\n      init(args);\n\n      var xMaker, yMaker;\n\n      if (args.x_axis_type === 'categorical') {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.xgroup_height], args.xgroup_accessor === null);\n\n        if (args.xgroup_accessor) {\n          new MG.scale_factory(args)\n            .namespace('xgroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('bottom');\n\n        } else {\n          args.scales.XGROUP = function(d) {\n            return mg_get_plot_left(args) };\n          args.scalefns.xgroupf = function(d) {\n            return mg_get_plot_left(args) };\n        }\n\n        args.scalefns.xoutf = function(d) {\n          return args.scalefns.xf(d) + args.scalefns.xgroupf(d)\n        };\n      } else {\n        xMaker = MG.scale_factory(args)\n          .namespace('x')\n          .inflateDomain(true)\n          .zeroBottom(args.y_axis_type === 'categorical')\n          .numericalDomainFromData((args.baselines || []).map(function(d) {\n            return d[args.x_accessor] }))\n          .numericalRange('bottom');\n\n        args.scalefns.xoutf = args.scalefns.xf;\n      }\n\n      // y-scale generation. This needs to get simplified.\n      if (args.y_axis_type === 'categorical') {\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .zeroBottom(true)\n          .categoricalDomainFromData()\n          .categoricalRangeBands([0, args.ygroup_height], true);\n\n        if (args.ygroup_accessor) {\n\n          new MG.scale_factory(args)\n            .namespace('ygroup')\n            .categoricalDomainFromData()\n            .categoricalRangeBands('left');\n\n        } else {\n          args.scales.YGROUP = function() {\n            return mg_get_plot_top(args) };\n          args.scalefns.ygroupf = function(d) {\n            return mg_get_plot_top(args) };\n\n        }\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) + args.scalefns.ygroupf(d) };\n\n      } else {\n        var baselines = (args.baselines || []).map(function(d) {\n          return d[args.y_accessor] });\n\n        yMaker = MG.scale_factory(args)\n          .namespace('y')\n          .inflateDomain(true)\n          .zeroBottom(args.x_axis_type === 'categorical')\n          .numericalDomainFromData(baselines)\n          .numericalRange('left');\n\n        args.scalefns.youtf = function(d) {\n          return args.scalefns.yf(d) };\n      }\n\n      if (args.ygroup_accessor !== null) {\n        args.ycolor_accessor = args.y_accessor;\n        MG.scale_factory(args)\n          .namespace('ycolor')\n          .scaleName('color')\n          .categoricalDomainFromData()\n          .categoricalColorRange();\n      }\n\n      if (args.xgroup_accessor !== null) {\n        args.xcolor_accessor = args.x_accessor;\n        MG.scale_factory(args)\n          .namespace('xcolor')\n          .scaleName('color')\n          .categoricalDomainFromData()\n          .categoricalColorRange();\n      }\n\n      // if (args.ygroup_accessor !== null) {\n      //   MG.scale_factory(args)\n      //     .namespace('ygroup')\n      //     .categoricalDomainFromData()\n      //     .categoricalColorRange();\n      // }\n\n      new MG.axis_factory(args)\n        .namespace('x')\n        .type(args.x_axis_type)\n        .zeroLine(args.y_axis_type === 'categorical')\n        .position(args.x_axis_position)\n        .draw();\n\n      new MG.axis_factory(args)\n        .namespace('y')\n        .type(args.y_axis_type)\n        .zeroLine(args.x_axis_type === 'categorical')\n        .position(args.y_axis_position)\n        .draw();\n\n      //mg_categorical_group_color_scale(args);\n\n      this.mainPlot();\n      this.markers();\n      this.rollover();\n      this.windowListeners();\n      //scaffold(args)\n\n      return this;\n    };\n\n    this.mainPlot = function() {\n      var svg = mg_get_svg_child_of(args.target);\n      var data = args.data[0];\n      var barplot = svg.select('g.mg-barplot');\n      var fresh_render = barplot.empty();\n\n      var bars;\n      var predictor_bars;\n      var pp, pp0;\n      var baseline_marks;\n\n      var perform_load_animation = fresh_render && args.animate_on_load;\n      var should_transition = perform_load_animation || args.transition_on_update;\n      var transition_duration = args.transition_duration || 1000;\n\n      // draw the plot on first render\n      if (fresh_render) {\n        barplot = svg.append('g')\n          .classed('mg-barplot', true);\n      }\n\n      bars = barplot.selectAll('.mg-bar')\n        .data(data)\n        .enter()\n        .append('rect')\n          .classed('mg-bar', true)\n          .classed('default-bar', args.scales.hasOwnProperty('COLOR') ? false : true);\n\n      // TODO - reimplement\n\n      // reference_accessor {}\n\n      // if (args.predictor_accessor) {\n      //   predictor_bars = barplot.selectAll('.mg-bar-prediction')\n      //     .data(data.filter(function(d) {\n      //       return d.hasOwnProperty(args.predictor_accessor) }));\n\n      //   predictor_bars.exit().remove();\n\n      //   predictor_bars.enter().append('rect')\n      //     .classed('mg-bar-prediction', true);\n      // }\n\n      // if (args.baseline_accessor) {\n      //   baseline_marks = barplot.selectAll('.mg-bar-baseline')\n      //     .data(data.filter(function(d) {\n      //       return d.hasOwnProperty(args.baseline_accessor) }));\n\n      //   baseline_marks.exit().remove();\n\n      //   baseline_marks.enter().append('line')\n      //     .classed('mg-bar-baseline', true);\n      // }\n\n      var appropriate_size;\n\n      // setup transitions\n      // if (should_transition) {\n      //   bars = bars.transition()\n      //     .duration(transition_duration);\n\n      //   if (predictor_bars) {\n      //     predictor_bars = predictor_bars.transition()\n      //       .duration(transition_duration);\n      //   }\n\n      //   if (baseline_marks) {\n      //     baseline_marks = baseline_marks.transition()\n      //       .duration(transition_duration);\n      //   }\n      // }\n\n      //appropriate_size = args.scales.Y_ingroup.rangeBand()/1.5;\n      var length, width, length_type, width_type, length_coord, width_coord,\n          length_scalefn, width_scalefn, length_scale, width_scale,\n          length_accessor, width_accessor, length_coord_map, width_coord_map,\n          length_map, width_map;\n\n      var reference_length_map, reference_length_coord_fn;\n\n      if (args.orientation == 'vertical') {\n        length = 'height';\n        width = 'width';\n        length_type = args.y_axis_type;\n        width_type = args.x_axis_type;\n        length_coord = 'y';\n        width_coord = 'x';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        width_scalefn  = width_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        length_scale   = args.scales.Y;\n        width_scale     = args.scales.X;\n        length_accessor = args.y_accessor;\n        width_accessor = args.x_accessor;\n\n        length_coord_map = function(d) {\n          var l;\n          l = length_scalefn(d);\n          if (d[length_accessor] < 0) {\n            l = length_scale(0);\n          }\n          return l;\n        }\n\n        length_map = function(d) {\n          return Math.abs(length_scalefn(d) - length_scale(0));\n        }\n\n        reference_length_map = function(d) {\n          return Math.abs(length_scale(d[args.reference_accessor]) - length_scale(0));\n        }\n\n        reference_length_coord_fn = function(d){\n          return length_scale(d[args.reference_accessor]);\n        }\n      }\n\n      if (args.orientation == 'horizontal') {\n        length = 'width';\n        width = 'height';\n        length_type = args.x_axis_type;\n        width_type = args.y_axis_type;\n        length_coord = 'x';\n        width_coord = 'y';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        width_scalefn = width_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        length_scale = args.scales.X;\n        width_scale = args.scales.Y;\n        length_accessor = args.x_accessor;\n        width_accessor = args.y_accessor;\n\n        length_coord_map = function(d) {\n          var l;\n          l = length_scale(0);\n          return l;\n        }\n\n        length_map = function(d) {\n          return Math.abs(length_scalefn(d) - length_scale(0));\n        }\n\n        reference_length_map = function(d) {\n          return Math.abs(length_scale(d[args.reference_accessor]) - length_scale(0));\n        }\n\n        reference_length_coord_fn = function(d){\n          return length_scale(0);\n        }\n      }\n\n      // if (perform_load_animation) {\n      //   bars.attr(length, 0);\n\n      //   if (predictor_bars) {\n      //     predictor_bars.attr(length, 0);\n      //   }\n\n      //   // if (baseline_marks) {\n      //   //   baseline_marks.attr({\n      //   //     x1: args.scales.X(0),\n      //   //     x2: args.scales.X(0)\n      //   //   });\n      //   // }\n      // }\n\n      bars.attr(length_coord, length_coord_map);\n\n      // bars.attr(length_coord, 40)\n      //bars.attr(width_coord, 70)\n\n\n\n      bars.attr(width_coord, function(d) {\n        var w;\n        if (width_type == 'categorical') {\n          w = width_scalefn(d);\n        } else {\n          w = width_scale(0);\n          if (d[width_accessor] < 0) {\n            w = width_scalefn(d);\n          }\n        }\n        w = w - args.bar_thickness/2;\n        return w;\n      });\n\n      if (args.scales.COLOR) {\n        bars.attr('fill', args.scalefns.colorf)\n      }\n\n      bars\n        .attr(length, length_map)\n        .attr(width, function(d) {\n          return args.bar_thickness;\n      });\n\n\n\n\n      if (args.reference_accessor !== null) {\n        var reference_data = data.filter(function(d){\n          return d.hasOwnProperty(args.reference_accessor);\n        })\n        var reference_bars = barplot.selectAll('.mg-categorical-reference')\n          .data(reference_data)\n          .enter()\n          .append('rect');\n\n        reference_bars\n          .attr(length_coord, reference_length_coord_fn)\n          .attr(width_coord, function(d) {\n            return width_scalefn(d) - args.reference_thickness/2\n          })\n          .attr(length, reference_length_map)\n          .attr(width, args.reference_thickness);\n      }\n\n      if (args.comparison_accessor !== null) {\n        var comparison_thickness = null;\n        if (args.comparison_thickness === null) {\n          comparison_thickness = args.bar_thickness/2;\n        } else {\n          comparison_thickness = args.comparison_thickness;\n        }\n\n\n        var comparison_data = data.filter(function(d) {\n          return d.hasOwnProperty(args.comparison_accessor);\n        })\n        var comparison_marks = barplot.selectAll('.mg-categorical-comparison')\n          .data(comparison_data)\n          .enter()\n          .append('line');\n\n        comparison_marks\n          .attr(length_coord + '1', function(d){return length_scale(d[args.comparison_accessor])})\n          .attr(length_coord + '2', function(d){return length_scale(d[args.comparison_accessor])})\n          .attr(width_coord + '1',  function(d){\n            return width_scalefn(d) - comparison_thickness/2;\n          })\n          .attr(width_coord + '2', function(d) {\n            return width_scalefn(d) + comparison_thickness/2;\n          })\n          .attr('stroke', 'black')\n          .attr('stroke-width', args.comparison_width);\n      }\n\n        //bars.attr(width_coord, );\n        // bars.attr('width', 50);\n        // bars.attr('height', 50);\n        // bars.attr('y', function(d){\n        //   var y = args.scales.Y(0);\n        //   if (d[args.y_accessor] < 0) {\n        //     y = args.scalefns.yf(d);\n        //   }\n        //   return y;\n        // });\n\n        // bars.attr('x', function(d){\n        //   return 40;\n        // })\n\n        // bars.attr('width', function(d){\n        //   return 100;\n        // });\n\n        // bars.attr('height', 100);\n\n        // bars.attr('fill', 'black');\n        // bars.attr('x', function(d) {\n        //   var x = args.scales.X(0);\n        //   if (d[args.x_accessor] < 0) {\n        //     x = args.scalefns.xf(d);\n        //   }\n        //   return x;\n        // })\n        // TODO - reimplement.\n        // if (args.predictor_accessor) {\n        //   predictor_bars\n        //     .attr('x', args.scales.X(0))\n        //     .attr('y', function(d) {\n        //       return args.scalefns.ygroupf(d) + args.scalefns.yf(d) + args.scales.Y.rangeBand() * (7 / 16) // + pp0 * appropriate_size/(pp*2) + appropriate_size / 2;\n        //     })\n        //     .attr('height', args.scales.Y.rangeBand() / 8) //appropriate_size / pp)\n        //     .attr('width', function(d) {\n        //       return args.scales.X(d[args.predictor_accessor]) - args.scales.X(0);\n        //     });\n        // }\n\n      // TODO - reimplement.\n      //   if (args.baseline_accessor) {\n\n      //     baseline_marks\n      //       .attr('x1', function(d) {\n      //         return args.scales.X(d[args.baseline_accessor]); })\n      //       .attr('x2', function(d) {\n      //         return args.scales.X(d[args.baseline_accessor]); })\n      //       .attr('y1', function(d) {\n      //         return args.scalefns.ygroupf(d) + args.scalefns.yf(d) + args.scales.Y.rangeBand() / 4\n      //       })\n      //       .attr('y2', function(d) {\n      //         return args.scalefns.ygroupf(d) + args.scalefns.yf(d) + args.scales.Y.rangeBand() * 3 / 4\n      //       });\n      //   }\n        if (args.legend || (args.color_accessor !== null && args.ygroup_accessor !== args.color_accessor)) {\n        if (!args.legend_target) legend_on_graph(svg, args);\n        else mg_targeted_legend(args);\n      }\n      return this;\n    };\n\n    this.markers = function() {\n      markers(args);\n      return this;\n    };\n\n    this.rollover = function() {\n      var svg = mg_get_svg_child_of(args.target);\n      var g;\n\n      if (svg.selectAll('.mg-active-datapoint-container').nodes().length === 0) {\n        mg_add_g(svg, 'mg-active-datapoint-container');\n      }\n\n      //remove the old rollovers if they already exist\n      svg.selectAll('.mg-rollover-rect').remove();\n      svg.selectAll('.mg-active-datapoint').remove();\n\n      // get orientation\n      var length, width, length_type, width_type, length_coord, width_coord,\n        length_scalefn, width_scalefn, length_scale, width_scale,\n        length_accessor, width_accessor;\n\n      var length_coord_map, width_coord_map, length_map, width_map;\n\n      if (args.orientation == 'vertical') {\n        length = 'height';\n        width = 'width';\n        length_type = args.y_axis_type;\n        width_type = args.x_axis_type;\n        length_coord = 'y';\n        width_coord = 'x';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        width_scalefn  = width_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        length_scale   = args.scales.Y;\n        width_scale     = args.scales.X;\n        length_accessor = args.y_accessor;\n        width_accessor = args.x_accessor;\n\n        length_coord_map = function(d){\n          return mg_get_plot_top(args);\n        }\n\n        length_map = function(d) {\n          return args.height -args.top-args.bottom-args.buffer*2\n        }\n      }\n\n      if (args.orientation == 'horizontal') {\n        length = 'width';\n        width = 'height';\n        length_type = args.x_axis_type;\n        width_type = args.y_axis_type;\n        length_coord = 'x';\n        width_coord = 'y';\n        length_scalefn = length_type == 'categorical' ? args.scalefns.xoutf : args.scalefns.xf;\n        width_scalefn = width_type == 'categorical' ? args.scalefns.youtf : args.scalefns.yf;\n        length_scale = args.scales.X;\n        width_scale = args.scales.Y;\n        length_accessor = args.x_accessor;\n        width_accessor = args.y_accessor;\n\n        length_coord_map = function(d){\n          var l;\n          l = length_scale(0);\n          return l;\n        }\n\n        length_map = function(d) {\n          return args.width -args.left-args.right-args.buffer*2\n        }\n      }\n\n      //rollover text\n      var rollover_x, rollover_anchor;\n      if (args.rollover_align === 'right') {\n        rollover_x = args.width - args.right;\n        rollover_anchor = 'end';\n      } else if (args.rollover_align === 'left') {\n        rollover_x = args.left;\n        rollover_anchor = 'start';\n      } else {\n        rollover_x = (args.width - args.left - args.right) / 2 + args.left;\n        rollover_anchor = 'middle';\n      }\n\n      svg.append('text')\n        .attr('class', 'mg-active-datapoint')\n        .attr('xml:space', 'preserve')\n        .attr('x', rollover_x)\n        .attr('y', args.top * 0.75)\n        .attr('dy', '.35em')\n        .attr('text-anchor', rollover_anchor);\n\n      g = svg.append('g')\n        .attr('class', 'mg-rollover-rect');\n\n      //draw rollover bars\n      var bars = g.selectAll(\".mg-bar-rollover\")\n        .data(args.data[0]).enter()\n        .append(\"rect\")\n        .attr('class', 'mg-bar-rollover');\n\n      bars.attr('opacity', 0)\n        .attr(length_coord, length_coord_map)\n        .attr(width_coord, function(d) {\n          var w;\n          if (width_type == 'categorical') {\n            w = width_scalefn(d);\n          } else {\n            w = width_scale(0);\n            if (d[width_accessor] < 0) {\n              w = width_scalefn(d);\n            }\n          }\n          w = w - args.bar_thickness/2;\n          return w;\n        });\n\n      bars.attr(length, length_map)\n      bars.attr(width, function(d) {\n        return args.bar_thickness;\n      });\n\n      bars\n        .on('mouseover', this.rolloverOn(args))\n        .on('mouseout', this.rolloverOff(args))\n        .on('mousemove', this.rolloverMove(args));\n\n      return this;\n    };\n\n    this.rolloverOn = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n      var label_accessor = this.is_vertical ? args.x_accessor : args.y_accessor;\n      var data_accessor = this.is_vertical ? args.y_accessor : args.x_accessor;\n      var label_units = this.is_vertical ? args.yax_units : args.xax_units;\n\n      return function(d, i) {\n\n        var fmt = MG.time_format(args.utc_time, '%b %e, %Y');\n        var num = format_rollover_number(args);\n\n        //highlight active bar\n        var bar = svg.selectAll('g.mg-barplot .mg-bar')\n          .filter(function(d, j) {\n            return j === i;\n          }).classed('active', true);\n\n        if (args.scales.hasOwnProperty('COLOR')) {\n          bar.attr('fill', d3.rgb(args.scalefns.colorf(d)).darker());\n        } else {\n          bar.classed('default-active', true);\n        }\n\n        //update rollover text\n        if (args.show_rollover_text) {\n          var mouseover = mg_mouseover_text(args, { svg: svg });\n          var row = mouseover.mouseover_row();\n\n          if (args.ygroup_accessor) row.text(d[args.ygroup_accessor] + '   ').bold();\n\n          row.text(mg_format_x_mouseover(args, d));\n          row.text(args.y_accessor + ': ' + d[args.y_accessor]);\n          if (args.predictor_accessor || args.baseline_accessor) {\n            row = mouseover.mouseover_row();\n\n            if (args.predictor_accessor) row.text(mg_format_data_for_mouseover(args, d, null, args.predictor_accessor, false))\n            if (args.baseline_accessor) row.text(mg_format_data_for_mouseover(args, d, null, args.baseline_accessor, false))\n          }\n        }\n        if (args.mouseover) {\n          args.mouseover(d, i);\n        }\n      };\n    };\n\n    this.rolloverOff = function(args) {\n      var svg = mg_get_svg_child_of(args.target);\n\n      return function(d, i) {\n        //reset active bar\n        var bar = svg.selectAll('g.mg-barplot .mg-bar.active').classed('active', false);\n\n        if (args.scales.hasOwnProperty('COLOR')) {\n          bar.attr('fill', args.scalefns.colorf(d));\n        } else {\n          bar.classed('default-active', false);\n        }\n\n        //reset active data point text\n        svg.select('.mg-active-datapoint')\n          .text('');\n\n        mg_clear_mouseover_container(svg);\n\n        if (args.mouseout) {\n          args.mouseout(d, i);\n        }\n      };\n    };\n\n    this.rolloverMove = function(args) {\n      return function(d, i) {\n        if (args.mousemove) {\n          args.mousemove(d, i);\n        }\n      };\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    y_padding_percentage: 0.05, // for categorical scales\n    y_outer_padding_percentage: .2, // for categorical scales\n    ygroup_padding_percentage: 0, // for categorical scales\n    ygroup_outer_padding_percentage: 0, // for categorical scales\n    x_padding_percentage: 0.05, // for categorical scales\n    x_outer_padding_percentage: .2, // for categorical scales\n    xgroup_padding_percentage: 0, // for categorical scales\n    xgroup_outer_padding_percentage: 0, // for categorical scales\n    buffer: 16,\n    y_accessor: 'factor',\n    x_accessor: 'value',\n    reference_accessor: null,\n    comparison_accessor: null,\n    secondary_label_accessor: null,\n    color_accessor: null,\n    color_type: 'category',\n    color_domain: null,\n    reference_thickness: 1,\n    comparison_width: 3,\n    comparison_thickness: null,\n    legend: false,\n    legend_target: null,\n    mouseover_align: 'right',\n    baseline_accessor: null,\n    predictor_accessor: null,\n    predictor_proportion: 5,\n    show_bar_zero: true,\n    binned: true,\n    truncate_x_labels: true,\n    truncate_y_labels: true\n  };\n\n  MG.register('bar', barChart, defaults);\n\n}).call(this);\n\n/*\nData Tables\n\nAlong with histograms, bars, lines, and scatters, a simple data table can take you far.\nWe often just want to look at numbers, organized as a table, where columns are variables,\nand rows are data points. Sometimes we want a cell to have a small graphic as the main\ncolumn element, in which case we want small multiples. sometimes we want to\n\nvar table = New data_table(data)\n        .target('div#data-table')\n        .title({accessor: 'point_name', align: 'left'})\n        .description({accessor: 'description'})\n        .number({accessor: ''})\n\n*/\n\nMG.data_table = function(args) {\n  'use strict';\n  this.args = args;\n  this.args.standard_col = { width: 150, font_size: 12, font_weight: 'normal' };\n  this.args.columns = [];\n  this.formatting_options = [\n    ['color', 'color'],\n    ['font-weight', 'font_weight'],\n    ['font-style', 'font_style'],\n    ['font-size', 'font_size']\n  ];\n\n  this._strip_punctuation = function(s) {\n    var punctuationless = s.replace(/[^a-zA-Z0-9 _]+/g, '');\n    var finalString = punctuationless.replace(/ +?/g, '');\n    return finalString;\n  };\n\n  this._format_element = function(element, value, args) {\n    this.formatting_options.forEach(function(fo) {\n      var attr = fo[0];\n      var key = fo[1];\n      if (args[key]) element.style(attr,\n        typeof args[key] === 'string' ||\n        typeof args[key] === 'number' ?\n        args[key] : args[key](value));\n    });\n  };\n\n  this._add_column = function(_args, arg_type) {\n    var standard_column = this.args.standard_col;\n    var args = merge_with_defaults(MG.clone(_args), MG.clone(standard_column));\n    args.type = arg_type;\n    this.args.columns.push(args);\n  };\n\n  this.target = function() {\n    var target = arguments[0];\n    this.args.target = target;\n    return this;\n  };\n\n  this.title = function() {\n    this._add_column(arguments[0], 'title');\n    return this;\n  };\n\n  this.text = function() {\n    this._add_column(arguments[0], 'text');\n    return this;\n  };\n\n  this.bullet = function() {\n    /*\n    text label\n    main value\n    comparative measure\n    any number of ranges\n\n    additional args:\n    no title\n    xmin, xmax\n    format: percentage\n    xax_formatter\n    */\n    return this;\n  };\n\n  this.sparkline = function() {\n    return this;\n  };\n\n  this.number = function() {\n    this._add_column(arguments[0], 'number');\n    return this;\n  };\n\n  this.display = function() {\n    var args = this.args;\n\n    chart_title(args);\n\n    var target = args.target;\n    var table = d3.select(target).append('table').classed('mg-data-table', true);\n    var colgroup = table.append('colgroup');\n    var thead = table.append('thead');\n    var tbody = table.append('tbody');\n    var this_column;\n    var this_title;\n\n    var tr, th, td_accessor, td_type, td_value, th_text, td_text, td;\n    var col;\n    var h;\n\n    tr = thead.append('tr');\n\n    for (h = 0; h < args.columns.length; h++) {\n      var this_col = args.columns[h];\n      td_type = this_col.type;\n      th_text = this_col.label;\n      th_text = th_text === undefined ? '' : th_text;\n      th = tr.append('th')\n        .style('width', this_col.width)\n        .style('text-align', td_type === 'title' ? 'left' : 'right')\n        .text(th_text);\n\n      if (args.show_tooltips && this_col.description && mg_jquery_exists()) {\n        th.append('i')\n          .classed('fa', true)\n          .classed('fa-question-circle', true)\n          .classed('fa-inverse', true);\n\n        $(th.node()).popover({\n          html: true,\n          animation: false,\n          content: this_col.description,\n          trigger: 'hover',\n          placement: 'top',\n          container: $(th.node())\n        });\n      }\n    }\n\n    for (h = 0; h < args.columns.length; h++) {\n      col = colgroup.append('col');\n      if (args.columns[h].type === 'number') {\n        col.attr('align', 'char').attr('char', '.');\n      }\n    }\n\n    for (var i = 0; i < args.data.length; i++) {\n      tr = tbody.append('tr');\n      for (var j = 0; j < args.columns.length; j++) {\n        this_column = args.columns[j];\n        td_accessor = this_column.accessor;\n        td_value = td_text = args.data[i][td_accessor];\n        td_type = this_column.type;\n\n        if (td_type === 'number') {\n          //td_text may need to be rounded\n          if (this_column.hasOwnProperty('round') && !this_column.hasOwnProperty('format')) {\n            // round according to the number value in this_column.round\n            td_text = d3.format('0,.' + this_column.round + 'f')(td_text);\n          }\n\n          if (this_column.hasOwnProperty('value_formatter')) {\n            // provide a function that formats the text according to the function this_column.format.\n            td_text = this_column.value_formatter(td_text);\n          }\n\n          if (this_column.hasOwnProperty('format')) {\n            // this is a shorthand for percentage formatting, and others if need be.\n            // supported: 'percentage', 'count', 'temperature'\n\n            if (this_column.round) {\n              td_text = Math.round(td_text, this_column.round);\n            }\n\n            var this_format = this_column.format;\n            var formatter;\n\n            if (this_format === 'percentage') formatter = d3.format('.0%');\n            if (this_format === 'count') formatter = d3.format(',.0f');\n            if (this_format === 'temperature') formatter = function(t) {\n              return t + '°'; };\n\n            td_text = formatter(td_text);\n          }\n\n          if (this_column.hasOwnProperty('currency')) {\n            // this is another shorthand for formatting according to a currency amount, which gets appended to front of number\n            td_text = this_column.currency + td_text;\n          }\n        }\n\n        td = tr.append('td')\n          .classed('table-' + td_type, true)\n          .classed('table-' + td_type + '-' + this._strip_punctuation(td_accessor), true)\n          .attr('data-value', td_value)\n          .style('width', this_column.width)\n          .style('text-align', td_type === 'title' || td_type === 'text' ? 'left' : 'right');\n\n        this._format_element(td, td_value, this_column);\n\n        if (td_type === 'title') {\n          this_title = td.append('div').text(td_text);\n          this._format_element(this_title, td_text, this_column);\n\n          if (args.columns[j].hasOwnProperty('secondary_accessor')) {\n            td.append('div')\n              .text(args.data[i][args.columns[j].secondary_accessor])\n              .classed(\"secondary-title\", true);\n          }\n        } else {\n          td.text(td_text);\n        }\n      }\n    }\n\n    return this;\n  };\n\n  return this;\n};\n\n(function() {\n  'use strict';\n\n  function mg_missing_add_text(svg, args) {\n    svg.selectAll('.mg-missing-text').data([args.missing_text])\n      .enter().append('text')\n      .attr('class', 'mg-missing-text')\n      .attr('x', args.width / 2)\n      .attr('y', args.height / 2)\n      .attr('dy', '.50em')\n      .attr('text-anchor', 'middle')\n      .text(args.missing_text);\n  }\n\n  function mg_missing_x_scale(args) {\n    args.scales.X = d3.scaleLinear()\n      .domain([0, args.data.length])\n      .range([mg_get_plot_left(args), mg_get_plot_right(args)]);\n    args.scalefns.yf = function(di) {\n      return args.scales.Y(di.y); };\n  }\n\n  function mg_missing_y_scale(args) {\n    args.scales.Y = d3.scaleLinear()\n      .domain([-2, 2])\n      .range([args.height - args.bottom - args.buffer * 2, args.top]);\n    args.scalefns.xf = function(di) {\n      return args.scales.X(di.x); };\n  }\n\n  function mg_make_fake_data(args) {\n    var data = [];\n    for (var x = 1; x <= 50; x++) {\n      data.push({ 'x': x, 'y': Math.random() - (x * 0.03) });\n    }\n    args.data = data;\n  }\n\n  function mg_add_missing_background_rect(g, args) {\n    g.append('svg:rect')\n      .classed('mg-missing-background', true)\n      .attr('x', args.buffer)\n      .attr('y', args.buffer + args.title_y_position * 2)\n      .attr('width', args.width - args.buffer * 2)\n      .attr('height', args.height - args.buffer * 2 - args.title_y_position * 2)\n      .attr('rx', 15)\n      .attr('ry', 15);\n  }\n\n  function mg_missing_add_line(g, args) {\n    var line = d3.line()\n      .x(args.scalefns.xf)\n      .y(args.scalefns.yf)\n      .curve(args.interpolate);\n\n    g.append('path')\n      .attr('class', 'mg-main-line mg-line1-color')\n      .attr('d', line(args.data));\n  }\n\n  function mg_missing_add_area(g, args) {\n    var area = d3.area()\n      .x(args.scalefns.xf)\n      .y0(args.scales.Y.range()[0])\n      .y1(args.scalefns.yf)\n      .curve(args.interpolate);\n\n    g.append('path')\n      .attr('class', 'mg-main-area mg-area1-color')\n      .attr('d', area(args.data));\n  }\n\n  function mg_remove_all_children(args) {\n    d3.select(args.target).selectAll('svg *').remove();\n  }\n\n  function mg_missing_remove_legend(args) {\n    if (args.legend_target) {\n      d3.select(args.legend_target).html('');\n    }\n  }\n\n  function missingData(args) {\n    this.init = function(args) {\n      this.args = args;\n\n      mg_init_compute_width(args);\n      mg_init_compute_height(args);\n\n      // create svg if one doesn't exist\n\n      var container = d3.select(args.target);\n      mg_raise_container_error(container, args);\n      var svg = container.selectAll('svg');\n      mg_remove_svg_if_chart_type_has_changed(svg, args);\n      svg = mg_add_svg_if_it_doesnt_exist(svg, args);\n      mg_adjust_width_and_height_if_changed(svg, args);\n      mg_set_viewbox_for_scaling(svg, args);\n      mg_remove_all_children(args);\n\n      svg.classed('mg-missing', true);\n      mg_missing_remove_legend(args);\n\n      chart_title(args);\n\n      // are we adding a background placeholder\n      if (args.show_missing_background) {\n        mg_make_fake_data(args);\n        mg_missing_x_scale(args);\n        mg_missing_y_scale(args);\n        var g = mg_add_g(svg, 'mg-missing-pane');\n\n        mg_add_missing_background_rect(g, args);\n        mg_missing_add_line(g, args);\n        mg_missing_add_area(g, args);\n      }\n\n      mg_missing_add_text(svg, args);\n\n      this.windowListeners();\n\n      return this;\n    };\n\n    this.windowListeners = function() {\n      mg_window_listeners(this.args);\n      return this;\n    };\n\n    this.init(args);\n  }\n\n  var defaults = {\n    top: 40, // the size of the top margin\n    bottom: 30, // the size of the bottom margin\n    right: 10, // size of the right margin\n    left: 0, // size of the left margin\n    buffer: 8, // the buffer between the actual chart area and the margins\n    legend_target: '',\n    width: 350,\n    height: 220,\n    missing_text: 'Data currently missing or unavailable',\n    scalefns: {},\n    scales: {},\n    show_tooltips: true,\n    show_missing_background: true\n  };\n\n  MG.register('missing-data', missingData, defaults);\n}).call(this);\n\nfunction mg_process_scale_ticks(args, axis) {\n  var accessor;\n  var scale_ticks;\n  var max;\n\n  if (axis === 'x') {\n    accessor = args.x_accessor;\n    scale_ticks = args.scales.X.ticks(args.xax_count);\n    max = args.processed.max_x;\n  } else if (axis === 'y') {\n    accessor = args.y_accessor;\n    scale_ticks = args.scales.Y.ticks(args.yax_count)\n    max = args.processed.max_y;\n  }\n\n  function log10(val) {\n    if (val === 1000) {\n      return 3;\n    }\n    if (val === 1000000) {\n      return 7;\n    }\n    return Math.log(val) / Math.LN10;\n  }\n\n  if ((axis === 'x' && args.x_scale_type === 'log') || (axis === 'y' && args.y_scale_type === 'log')) {\n    // get out only whole logs\n    scale_ticks = scale_ticks.filter(function(d) {\n      return Math.abs(log10(d)) % 1 < 1e-6 || Math.abs(log10(d)) % 1 > 1 - 1e-6;\n    });\n  }\n\n  // filter out fraction ticks if our data is ints and if xmax > number of generated ticks\n  var number_of_ticks = scale_ticks.length;\n\n  // is our data object all ints?\n  var data_is_int = true;\n  args.data.forEach(function(d, i) {\n    d.forEach(function(d, i) {\n      if (d[accessor] % 1 !== 0) {\n        data_is_int = false;\n        return false;\n      }\n    });\n  });\n\n  if (data_is_int && number_of_ticks > max && args.format === 'count') {\n    // remove non-integer ticks\n    scale_ticks = scale_ticks.filter(function(d) {\n      return d % 1 === 0;\n    });\n  }\n\n  if (axis === 'x') {\n    args.processed.x_ticks = scale_ticks;\n  } else if (axis === 'y') {\n    args.processed.y_ticks = scale_ticks;\n  }\n}\n\nfunction raw_data_transformation(args) {\n  'use strict';\n\n  // dupe our data so we can modify it without adverse effect\n  args.data = MG.clone(args.data);\n\n  // we need to account for a few data format cases:\n  // #0 {bar1:___, bar2:___}                                    // single object (for, say, bar charts)\n  // #1 [{key:__, value:__}, ...]                               // unnested obj-arrays\n  // #2 [[{key:__, value:__}, ...], [{key:__, value:__}, ...]]  // nested obj-arrays\n  // #3 [[4323, 2343],..]                                       // unnested 2d array\n  // #4 [[[4323, 2343],..] , [[4323, 2343],..]]                 // nested 2d array\n  args.single_object = false; // for bar charts.\n  args.array_of_objects = false;\n  args.array_of_arrays = false;\n  args.nested_array_of_arrays = false;\n  args.nested_array_of_objects = false;\n\n  // is the data object a nested array?\n\n  if (is_array_of_arrays(args.data)) {\n    args.nested_array_of_objects = args.data.map(function(d) {\n      return is_array_of_objects_or_empty(d);\n    }); // Case #2\n    args.nested_array_of_arrays = args.data.map(function(d) {\n      return is_array_of_arrays(d);\n    }); // Case #4\n  } else {\n    args.array_of_objects = is_array_of_objects(args.data); // Case #1\n    args.array_of_arrays = is_array_of_arrays(args.data); // Case #3\n  }\n\n  if (args.chart_type === 'line') {\n    if (args.array_of_objects || args.array_of_arrays) {\n      args.data = [args.data];\n    }\n  } else {\n    if (!(mg_is_array(args.data[0]))) {\n      args.data = [args.data];\n    }\n  }\n  // if the y_accessor is an array, break it up and store the result in args.data\n  mg_process_multiple_x_accessors(args);\n  mg_process_multiple_y_accessors(args);\n\n  // if user supplies keyword in args.color, change to arg.colors.\n  // this is so that the API remains fairly sensible and legible.\n  if (args.color !== undefined) {\n    args.colors = args.color;\n  }\n\n  // if user has supplied args.colors, and that value is a string, turn it into an array.\n  if (args.colors !== null && typeof args.colors === 'string') {\n    args.colors = [args.colors];\n  }\n\n  // sort x-axis data\n  if (args.chart_type === 'line' && args.x_sort === true) {\n    for (var i = 0; i < args.data.length; i++) {\n      args.data[i].sort(function(a, b) {\n        return a[args.x_accessor] - b[args.x_accessor];\n      });\n    }\n  }\n\n  return this;\n}\n\nfunction mg_process_multiple_accessors(args, which_accessor) {\n  // turns an array of accessors into ...\n  if (mg_is_array(args[which_accessor])) {\n    args.data = args.data.map(function(_d) {\n      return args[which_accessor].map(function(ya) {\n        return _d.map(function(di) {\n          di = MG.clone(di);\n\n          if (di[ya] === undefined) {\n            return undefined;\n          }\n\n          di['multiline_' + which_accessor] = di[ya];\n          return di;\n        }).filter(function(di) {\n          return di !== undefined;\n        });\n      });\n    })[0];\n    args[which_accessor] = 'multiline_' + which_accessor;\n  }\n}\n\nfunction mg_process_multiple_x_accessors(args) {\n  mg_process_multiple_accessors(args, 'x_accessor');\n}\n\nfunction mg_process_multiple_y_accessors(args) {\n  mg_process_multiple_accessors(args, 'y_accessor');\n}\n\nMG.raw_data_transformation = raw_data_transformation;\n\nfunction process_line(args) {\n  'use strict';\n\n  var time_frame;\n\n  // do we have a time-series?\n  var is_time_series = d3.sum(args.data.map(function(series) {\n    return series.length > 0 && mg_is_date(series[0][args.x_accessor]);\n  })) > 0;\n\n  // are we replacing missing y values with zeros?\n  if ((args.missing_is_zero || args.missing_is_hidden) && args.chart_type === 'line' && is_time_series) {\n    for (var i = 0; i < args.data.length; i++) {\n      // we need to have a dataset of length > 2, so if it's less than that, skip\n      if (args.data[i].length <= 1) {\n        continue;\n      }\n\n      var first = args.data[i][0];\n      var last = args.data[i][args.data[i].length - 1];\n\n      // initialize our new array for storing the processed data\n      var processed_data = [];\n\n      // we'll be starting from the day after our first date\n      var start_date = MG.clone(first[args.x_accessor]).setDate(first[args.x_accessor].getDate() + 1);\n\n      // if we've set a max_x, add data points up to there\n      var from = (args.min_x) ? args.min_x : start_date;\n      var upto = (args.max_x) ? args.max_x : last[args.x_accessor];\n\n      time_frame = mg_get_time_frame((upto - from) / 1000);\n\n      if (['four-days', 'many-days', 'many-months', 'years', 'default'].indexOf(time_frame) !== -1 && args.missing_is_hidden_accessor === null) {\n        for (var d = new Date(from); d <= upto; d.setDate(d.getDate() + 1)) {\n          var o = {};\n          d.setHours(0, 0, 0, 0);\n\n          // add the first date item, we'll be starting from the day after our first date\n          if (Date.parse(d) === Date.parse(new Date(start_date))) {\n            processed_data.push(MG.clone(args.data[i][0]));\n          }\n\n          // check to see if we already have this date in our data object\n          var existing_o = null;\n          args.data[i].forEach(function(val, i) {\n            if (Date.parse(val[args.x_accessor]) === Date.parse(new Date(d))) {\n              existing_o = val;\n\n              return false;\n            }\n          });\n\n          // if we don't have this date in our data object, add it and set it to zero\n          if (!existing_o) {\n            o[args.x_accessor] = new Date(d);\n            o[args.y_accessor] = 0;\n            o['_missing'] = true; //we want to distinguish between zero-value and missing observations\n            processed_data.push(o);\n          }\n\n          // if the data point has, say, a 'missing' attribute set or if its\n          // y-value is null identify it internally as missing\n          else if (existing_o[args.missing_is_hidden_accessor] || existing_o[args.y_accessor] === null) {\n            existing_o['_missing'] = true;\n            processed_data.push(existing_o);\n          }\n\n          //otherwise, use the existing object for that date\n          else {\n            processed_data.push(existing_o);\n          }\n        }\n      } else {\n        for (var j = 0; j < args.data[i].length; j += 1) {\n          var obj = MG.clone(args.data[i][j]);\n          obj['_missing'] = args.data[i][j][args.missing_is_hidden_accessor];\n          processed_data.push(obj);\n        }\n      }\n\n      // update our date object\n      args.data[i] = processed_data;\n    }\n  }\n\n  return this;\n}\n\nMG.process_line = process_line;\n\nfunction process_histogram(args) {\n  'use strict';\n\n  // if args.binned == false, then we need to bin the data appropriately.\n  // if args.binned == true, then we need to make sure to compute the relevant computed data.\n  // the outcome of either of these should be something in args.computed_data.\n  // the histogram plotting function will be looking there for the data to plot.\n\n  // we need to compute an array of objects.\n  // each object has an x, y, and dx.\n\n  // histogram data is always single dimension\n  var our_data = args.data[0];\n\n  var extracted_data;\n  if (args.binned === false) {\n    // use d3's built-in layout.histogram functionality to compute what you need.\n\n    if (typeof(our_data[0]) === 'object') {\n      // we are dealing with an array of objects. Extract the data value of interest.\n      extracted_data = our_data\n        .map(function(d) {\n          return d[args.x_accessor];\n        });\n    } else if (typeof(our_data[0]) === 'number') {\n      // we are dealing with a simple array of numbers. No extraction needed.\n      extracted_data = our_data;\n    } else {\n      console.log('TypeError: expected an array of numbers, found ' + typeof(our_data[0]));\n      return;\n    }\n\n    var hist = d3.histogram();\n    if (args.bins) {\n      hist.thresholds(args.bins);\n    }\n\n    var bins = hist(extracted_data);\n    args.processed_data = bins.map(function(d) {\n      return { 'x': d.x0, 'y': d.length };\n    });\n  } else {\n    // here, we just need to reconstruct the array of objects\n    // take the x accessor and y accessor.\n    // pull the data as x and y. y is count.\n\n    args.processed_data = our_data.map(function(d) {\n      return { 'x': d[args.x_accessor], 'y': d[args.y_accessor] };\n    });\n\n    var this_pt;\n    var next_pt;\n\n    // we still need to compute the dx component for each data point\n    for (var i = 0; i < args.processed_data.length; i++) {\n      this_pt = args.processed_data[i];\n      if (i === args.processed_data.length - 1) {\n        this_pt.dx = args.processed_data[i - 1].dx;\n      } else {\n        next_pt = args.processed_data[i + 1];\n        this_pt.dx = next_pt.x - this_pt.x;\n      }\n    }\n  }\n\n  // capture the original data and accessors before replacing args.data\n  if (!args.processed) {\n    args.processed = {};\n  }\n  args.processed.original_data = args.data;\n  args.processed.original_x_accessor = args.x_accessor;\n  args.processed.original_y_accessor = args.y_accessor;\n\n  args.data = [args.processed_data];\n  args.x_accessor = args.processed_x_accessor;\n  args.y_accessor = args.processed_y_accessor;\n\n  return this;\n}\n\nMG.process_histogram = process_histogram;\n\n// for use with bar charts, etc.\nfunction process_categorical_variables(args) {\n  'use strict';\n\n  var extracted_data, processed_data = {},\n    pd = [];\n  //var our_data = args.data[0];\n  var label_accessor = args.bar_orientation === 'vertical' ? args.x_accessor : args.y_accessor;\n  var data_accessor = args.bar_orientation === 'vertical' ? args.y_accessor : args.x_accessor;\n\n  return this;\n}\n\nMG.process_categorical_variables = process_categorical_variables;\n\nfunction process_point(args) {\n  'use strict';\n\n  var data = args.data[0];\n  var x = data.map(function(d) {\n    return d[args.x_accessor];\n  });\n  var y = data.map(function(d) {\n    return d[args.y_accessor];\n  });\n\n  if (args.least_squares) {\n    args.ls_line = least_squares(x, y);\n  }\n\n  return this;\n}\n\nMG.process_point = process_point;\n\nfunction add_ls(args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var data = args.data[0];\n  var min_x = d3.min(data, function(d) {\n    return d[args.x_accessor]; });\n  var max_x = d3.max(data, function(d) {\n    return d[args.x_accessor]; });\n\n  d3.select(args.target).selectAll('.mg-least-squares-line').remove();\n\n  svg.append('svg:line')\n    .attr('x1', args.scales.X(min_x))\n    .attr('x2', args.scales.X(max_x))\n    .attr('y1', args.scales.Y(args.ls_line.fit(min_x)))\n    .attr('y2', args.scales.Y(args.ls_line.fit(max_x)))\n    .attr('class', 'mg-least-squares-line');\n}\n\nMG.add_ls = add_ls;\n\nfunction add_lowess(args) {\n  var svg = mg_get_svg_child_of(args.target);\n  var lowess = args.lowess_line;\n\n  var line = d3.svg.line()\n    .x(function(d) {\n      return args.scales.X(d.x); })\n    .y(function(d) {\n      return args.scales.Y(d.y); })\n    .interpolate(args.interpolate);\n\n  svg.append('path')\n    .attr('d', line(lowess))\n    .attr('class', 'mg-lowess-line');\n}\n\nMG.add_lowess = add_lowess;\n\nfunction lowess_robust(x, y, alpha, inc) {\n  // Used http://www.unc.edu/courses/2007spring/biol/145/001/docs/lectures/Oct27.html\n  // for the clear explanation of robust lowess.\n\n  // calculate the the first pass.\n  var _l;\n  var r = [];\n  var yhat = d3.mean(y);\n  var i;\n  for (i = 0; i < x.length; i += 1) { r.push(1); }\n  _l = _calculate_lowess_fit(x, y, alpha, inc, r);\n  var x_proto = _l.x;\n  var y_proto = _l.y;\n\n  // Now, take the fit, recalculate the weights, and re-run LOWESS using r*w instead of w.\n\n  for (i = 0; i < 100; i += 1) {\n    r = d3.zip(y_proto, y).map(function(yi) {\n      return Math.abs(yi[1] - yi[0]);\n    });\n\n    var q = d3.quantile(r.sort(), 0.5);\n\n    r = r.map(function(ri) {\n      return _bisquare_weight(ri / (6 * q));\n    });\n\n    _l = _calculate_lowess_fit(x, y, alpha, inc, r);\n    x_proto = _l.x;\n    y_proto = _l.y;\n  }\n\n  return d3.zip(x_proto, y_proto).map(function(d) {\n    var p = {};\n    p.x = d[0];\n    p.y = d[1];\n    return p;\n  });\n}\n\nMG.lowess_robust = lowess_robust;\n\nfunction lowess(x, y, alpha, inc) {\n  var r = [];\n  for (var i = 0; i < x.length; i += 1) { r.push(1); }\n  var _l = _calculate_lowess_fit(x, y, alpha, inc, r);\n}\n\nMG.lowess = lowess;\n\nfunction least_squares(x_, y_) {\n  var x, y, xi, yi,\n    _x = 0,\n    _y = 0,\n    _xy = 0,\n    _xx = 0;\n\n  var n = x_.length;\n  if (mg_is_date(x_[0])) {\n    x = x_.map(function(d) {\n      return d.getTime();\n    });\n  } else {\n    x = x_;\n  }\n\n  if (mg_is_date(y_[0])) {\n    y = y_.map(function(d) {\n      return d.getTime();\n    });\n  } else {\n    y = y_;\n  }\n\n  var xhat = d3.mean(x);\n  var yhat = d3.mean(y);\n  var numerator = 0,\n    denominator = 0;\n\n  for (var i = 0; i < x.length; i++) {\n    xi = x[i];\n    yi = y[i];\n    numerator += (xi - xhat) * (yi - yhat);\n    denominator += (xi - xhat) * (xi - xhat);\n  }\n\n  var beta = numerator / denominator;\n  var x0 = yhat - beta * xhat;\n\n  return {\n    x0: x0,\n    beta: beta,\n    fit: function(x) {\n      return x0 + x * beta;\n    }\n  };\n}\n\nMG.least_squares = least_squares;\n\nfunction _pow_weight(u, w) {\n  if (u >= 0 && u <= 1) {\n    return Math.pow(1 - Math.pow(u, w), w);\n  } else {\n    return 0;\n  }\n}\n\nfunction _bisquare_weight(u) {\n  return _pow_weight(u, 2);\n}\n\nfunction _tricube_weight(u) {\n  return _pow_weight(u, 3);\n}\n\nfunction _neighborhood_width(x0, xis) {\n  return Array.max(xis.map(function(xi) {\n    return Math.abs(x0 - xi);\n  }));\n}\n\nfunction _manhattan(x1, x2) {\n  return Math.abs(x1 - x2);\n}\n\nfunction _weighted_means(wxy) {\n  var wsum = d3.sum(wxy.map(function(wxyi) {\n    return wxyi.w; }));\n\n  return {\n    xbar: d3.sum(wxy.map(function(wxyi) {\n      return wxyi.w * wxyi.x;\n    })) / wsum,\n    ybar: d3.sum(wxy.map(function(wxyi) {\n      return wxyi.w * wxyi.y;\n    })) / wsum\n  };\n}\n\nfunction _weighted_beta(wxy, xbar, ybar) {\n  var num = d3.sum(wxy.map(function(wxyi) {\n    return Math.pow(wxyi.w, 2) * (wxyi.x - xbar) * (wxyi.y - ybar);\n  }));\n\n  var denom = d3.sum(wxy.map(function(wxyi) {\n    return Math.pow(wxyi.w, 2) * Math.pow(wxyi.x - xbar, 2);\n  }));\n\n  return num / denom;\n}\n\nfunction _weighted_least_squares(wxy) {\n  var ybar, xbar, beta_i, x0;\n\n  var _wm = _weighted_means(wxy);\n\n  xbar = _wm.xbar;\n  ybar = _wm.ybar;\n\n  var beta = _weighted_beta(wxy, xbar, ybar);\n\n  return {\n    beta: beta,\n    xbar: xbar,\n    ybar: ybar,\n    x0: ybar - beta * xbar\n\n  };\n}\n\nfunction _calculate_lowess_fit(x, y, alpha, inc, residuals) {\n  // alpha - smoothing factor. 0 < alpha < 1/\n  //\n  //\n  var k = Math.floor(x.length * alpha);\n\n  var sorted_x = x.slice();\n\n  sorted_x.sort(function(a, b) {\n    if (a < b) {\n      return -1; } else if (a > b) {\n      return 1; }\n\n    return 0;\n  });\n\n  var x_max = d3.quantile(sorted_x, 0.98);\n  var x_min = d3.quantile(sorted_x, 0.02);\n\n  var xy = d3.zip(x, y, residuals).sort();\n\n  var size = Math.abs(x_max - x_min) / inc;\n\n  var smallest = x_min;\n  var largest = x_max;\n  var x_proto = d3.range(smallest, largest, size);\n\n  var xi_neighbors;\n  var x_i, beta_i, x0_i, delta_i, xbar, ybar;\n\n  // for each prototype, find its fit.\n  var y_proto = [];\n\n  for (var i = 0; i < x_proto.length; i += 1) {\n    x_i = x_proto[i];\n\n    // get k closest neighbors.\n    xi_neighbors = xy.map(function(xyi) {\n      return [\n        Math.abs(xyi[0] - x_i),\n        xyi[0],\n        xyi[1],\n        xyi[2]\n      ];\n    }).sort().slice(0, k);\n\n    // Get the largest distance in the neighbor set.\n    delta_i = d3.max(xi_neighbors)[0];\n\n    // Prepare the weights for mean calculation and WLS.\n\n    xi_neighbors = xi_neighbors.map(function(wxy) {\n      return {\n        w: _tricube_weight(wxy[0] / delta_i) * wxy[3],\n        x: wxy[1],\n        y: wxy[2]\n      };\n    });\n\n    // Find the weighted least squares, obviously.\n    var _output = _weighted_least_squares(xi_neighbors);\n\n    x0_i = _output.x0;\n    beta_i = _output.beta;\n\n    //\n    y_proto.push(x0_i + beta_i * x_i);\n  }\n\n  return { x: x_proto, y: y_proto };\n}\n\nfunction format_rollover_number(args) {\n  var num;\n  if (args.format === 'count') {\n    num = function(d) {\n      var is_float = d % 1 !== 0;\n      var pf;\n\n      if (is_float) {\n        pf = d3.format(',.' + args.decimals + 'f');\n      } else {\n        pf = d3.format(',.0f');\n      }\n\n      // are we adding units after the value or before?\n      if (args.yax_units_append) {\n        return pf(d) + args.yax_units;\n      } else {\n        return args.yax_units + pf(d);\n      }\n    };\n  } else {\n    num = function(d_) {\n      var fmt_string = (args.decimals ? '.' + args.decimals : '') + '%';\n      var pf = d3.format(fmt_string);\n      return pf(d_);\n    };\n  }\n  return num;\n}\n\nvar time_rollover_format = function(f, d, accessor, utc) {\n  var fd;\n  if (typeof f === 'string') {\n    fd = MG.time_format(utc, f)(d[accessor]);\n  } else if (typeof f === 'function') {\n    fd = f(d);\n  } else {\n    fd = d[accessor];\n  }\n  return fd;\n}\n\n// define our rollover format for numbers\nvar number_rollover_format = function(f, d, accessor) {\n  var fd;\n  if (typeof f === 'string') {\n    fd = d3.format('s')(d[accessor]);\n  } else if (typeof f === 'function') {\n    fd = f(d);\n  } else {\n    fd = d[accessor];\n  }\n  return fd;\n}\n\nfunction mg_format_y_rollover(args, num, d) {\n  var formatted_y;\n  if (args.y_mouseover !== null) {\n    if (args.aggregate_rollover) {\n      formatted_y = number_rollover_format(args.y_mouseover, d, args.y_accessor);\n    } else {\n      formatted_y = number_rollover_format(args.y_mouseover, d, args.y_accessor);\n    }\n  } else {\n    if (args.time_series) {\n      if (args.aggregate_rollover) {\n        formatted_y = num(d[args.y_accessor]);\n      } else {\n        formatted_y = args.yax_units + num(d[args.y_accessor]);\n      }\n    } else {\n      formatted_y = args.y_accessor + ': ' + args.yax_units + num(d[args.y_accessor]);\n    }\n  }\n  return formatted_y;\n}\n\nfunction mg_format_x_rollover(args, fmt, d) {\n  var formatted_x;\n  if (args.x_mouseover !== null) {\n    if (args.time_series) {\n      if (args.aggregate_rollover) {\n        formatted_x = time_rollover_format(args.x_mouseover, d, 'key', args.utc);\n      } else {\n        formatted_x = time_rollover_format(args.x_mouseover, d, args.x_accessor, args.utc);\n      }\n    } else {\n      formatted_x = number_rollover_format(args.x_mouseover, d, args.x_accessor);\n    }\n  } else {\n    if (args.time_series) {\n      var date;\n\n      if (args.aggregate_rollover && args.data.length > 1) {\n        date = new Date(d.key);\n      } else {\n        date = new Date(+d[args.x_accessor]);\n        date.setDate(date.getDate());\n      }\n\n      formatted_x = fmt(date) + '  ';\n    } else {\n      formatted_x = args.x_accessor + ': ' + d[args.x_accessor] + '   ';\n    }\n  }\n  return formatted_x;\n}\n\nfunction mg_format_data_for_mouseover(args, d, mouseover_fcn, accessor, check_time) {\n  var formatted_data, formatter;\n  var time_fmt = mg_get_rollover_time_format(args);\n  if (typeof d[accessor] === 'string') {\n    formatter = function(d) {\n      return d;\n    }\n  } else {\n    formatter = format_rollover_number(args);\n  }\n\n  if (mouseover_fcn !== null) {\n    if (check_time) formatted_data = time_rollover_format(mouseover_fcn, d, accessor, args.utc);\n    else formatted_data = number_rollover_format(mouseover_fcn, d, accessor);\n\n  } else {\n    if (check_time) formatted_data = time_fmt(new Date(+d[accessor])) + '  ';\n    else formatted_data = (args.time_series ? '' : accessor + ': ') + formatter(d[accessor]) + '   ';\n  }\n  return formatted_data;\n}\n\nfunction mg_format_number_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.x_mouseover, args.x_accessor, false);\n}\n\nfunction mg_format_x_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.x_mouseover, args.x_accessor, args.time_series);\n}\n\nfunction mg_format_y_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.y_mouseover, args.y_accessor, false);\n}\n\nfunction mg_format_x_aggregate_mouseover(args, d) {\n  return mg_format_data_for_mouseover(args, d, args.x_mouseover, 'key', args.time_series)\n}\n\nMG.format_rollover_number = format_rollover_number;\n\n// http://bl.ocks.org/mbostock/3916621\nfunction path_tween(d1, precision) {\n  return function() {\n    var path0 = this,\n      path1 = path0.cloneNode(),\n      n0 = path0.getTotalLength() || 0,\n      n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength() || 0;\n\n    // Uniform sampling of distance based on specified precision.\n    var distances = [0],\n      i = 0,\n      dt = precision / Math.max(n0, n1);\n    while ((i += dt) < 1) distances.push(i);\n    distances.push(1);\n\n    // Compute point-interpolators at each distance.\n    var points = distances.map(function(t) {\n      var p0 = path0.getPointAtLength(t * n0),\n        p1 = path1.getPointAtLength(t * n1);\n      return d3.interpolate([p0.x, p0.y], [p1.x, p1.y]);\n    });\n\n    return function(t) {\n      return t < 1 ? \"M\" + points.map(function(p) {\n        return p(t);\n      }).join(\"L\") : d1;\n    };\n  };\n}\n\nMG.path_tween = path_tween;\n\n// influenced by https://bl.ocks.org/tomgp/c99a699587b5c5465228\n\nfunction render_markup_for_server(callback) {\n  var virtual_window = MG.virtual_window;\n  var virtual_d3 = d3.select(virtual_window.document);\n  var target = virtual_window.document.createElement('div');\n\n  var original_d3 = global.d3;\n  var original_window = global.window;\n  var original_document = global.document;\n  global.d3 = virtual_d3;\n  global.window = virtual_window;\n  global.document = virtual_window.document;\n\n  var error;\n  try {\n    callback(target);\n  } catch(e) {\n    error = e;\n  }\n\n  global.d3 = original_d3;\n  global.window = original_window;\n  global.document = original_document;\n\n  if (error) {\n    throw error;\n  }\n\n  /* for some reason d3.select parses jsdom elements incorrectly\n   * but it works if we wrap the element in a function.\n   */\n  return virtual_d3.select(function targetFn() {\n    return target;\n  }).html();\n}\n\nfunction render_markup_for_client(callback) {\n  var target = document.createElement('div');\n  callback(target);\n  return d3.select(target).html();\n}\n\nfunction render_markup(callback) {\n  switch(typeof window) {\n    case 'undefined':\n      return render_markup_for_server(callback);\n    default:\n      return render_markup_for_client(callback);\n  }\n}\n\nfunction init_virtual_window(jsdom, force) {\n  if (MG.virtual_window && !force) {\n    return;\n  }\n\n  var doc = jsdom.jsdom({\n    html: '',\n    features: { QuerySelector: true }\n  });\n  MG.virtual_window = doc.defaultView;\n}\n\nMG.render_markup = render_markup;\nMG.init_virtual_window = init_virtual_window;\n\n// call this to add a warning icon to a graph and log an error to the console\nfunction error(args) {\n  console.error('ERROR : ', args.target, ' : ', args.error);\n\n  d3.select(args.target).select('.mg-chart-title')\n    .append('tspan')\n      .attr('class', 'fa fa-x fa-exclamation-circle mg-warning')\n      .attr('dx', '0.3em')\n      .text('\\uf06a');\n}\n\nfunction internal_error(args) {\n  console.error('INTERNAL ERROR : ', args.target, ' : ', args.internal_error);\n}\n\nMG.error = error;\n\nreturn MG;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/metrics-graphics/dist/metricsgraphics.js\n// module id = 6\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}